Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> gramatica
Rule 1     gramatica -> programa .
Rule 2     programa -> cabecalho corpo
Rule 3     cabecalho -> titulo declaracao_funcoes declaracoes_variaveis
Rule 4     titulo -> PROGRAM ID ;
Rule 5     declaracao_funcoes -> FUNCTION funcoes
Rule 6     declaracao_funcoes -> <empty>
Rule 7     funcoes -> funcao
Rule 8     funcoes -> funcao funcoes
Rule 9     funcao -> ID ( parametros ) : tipo ; bloco_funcao ;
Rule 10    bloco_funcao -> declaracoes_variaveis corpo
Rule 11    parametros -> lista_id : tipo
Rule 12    parametros -> lista_id : tipo ; parametros
Rule 13    declaracoes_variaveis -> VAR declaracoes
Rule 14    declaracoes_variaveis -> <empty>
Rule 15    declaracoes -> declaracao
Rule 16    declaracoes -> declaracao declaracoes
Rule 17    declaracao -> lista_id : tipo ;
Rule 18    lista_id -> ID
Rule 19    lista_id -> lista_id , ID
Rule 20    tipo -> INTEGER
Rule 21    tipo -> REAL
Rule 22    tipo -> BOOLEAN
Rule 23    tipo -> CHAR
Rule 24    tipo -> STRING
Rule 25    tipo -> ARRAY [ NUMBER RANGE NUMBER ] OF tipo
Rule 26    corpo -> BEGIN lista_instrucoes END
Rule 27    lista_instrucoes -> instrucao
Rule 28    lista_instrucoes -> lista_instrucoes ; instrucao
Rule 29    instrucao -> atribuicao
Rule 30    instrucao -> leitura
Rule 31    instrucao -> escrita
Rule 32    instrucao -> if_statement
Rule 33    instrucao -> while_statement
Rule 34    instrucao -> for_statement
Rule 35    instrucao -> bloco
Rule 36    instrucao -> <empty>
Rule 37    atribuicao -> ID ASSIGN expressao
Rule 38    atribuicao -> ID [ expressao ] ASSIGN expressao
Rule 39    leitura -> READ ( expressao_simples )
Rule 40    leitura -> READLN ( expressao_simples )
Rule 41    escrita -> WRITE ( lista_expressao )
Rule 42    escrita -> WRITELN ( lista_expressao )
Rule 43    if_statement -> IF expressao THEN instrucao ELSE instrucao
Rule 44    if_statement -> IF expressao THEN instrucao
Rule 45    while_statement -> WHILE expressao DO instrucao
Rule 46    for_statement -> FOR ID ASSIGN expressao TO expressao DO instrucao
Rule 47    for_statement -> FOR ID ASSIGN expressao DOWNTO expressao DO instrucao
Rule 48    bloco -> BEGIN lista_instrucoes END
Rule 49    lista_expressao -> expressao
Rule 50    lista_expressao -> lista_expressao , expressao
Rule 51    expressao -> expressao OR expressao
Rule 52    expressao -> expressao AND expressao
Rule 53    fator -> NOT fator
Rule 54    expressao -> expressao_simples operador_relacional expressao_simples
Rule 55    expressao -> expressao_simples
Rule 56    expressao_simples -> termo
Rule 57    expressao_simples -> expressao_simples + termo
Rule 58    expressao_simples -> expressao_simples - termo
Rule 59    termo -> fator
Rule 60    termo -> termo * fator
Rule 61    termo -> termo / fator
Rule 62    termo -> termo DIV fator
Rule 63    termo -> termo MOD fator
Rule 64    fator -> - fator
Rule 65    fator -> ID [ expressao ]
Rule 66    fator -> NUMBER
Rule 67    fator -> STRING_LITERAL
Rule 68    fator -> ID
Rule 69    fator -> TRUE
Rule 70    fator -> FALSE
Rule 71    fator -> ( expressao )
Rule 72    fator -> ID ( expressao )
Rule 73    operador_relacional -> EQUALS
Rule 74    operador_relacional -> NOT_EQUALS
Rule 75    operador_relacional -> LESS_THAN
Rule 76    operador_relacional -> LESS_THAN_OR_EQUAL_TO
Rule 77    operador_relacional -> GREATER_THAN
Rule 78    operador_relacional -> GREATER_THAN_OR_EQUAL_TO

Terminals, with rules where they appear

(                    : 9 39 40 41 42 71 72
)                    : 9 39 40 41 42 71 72
*                    : 60
+                    : 57
,                    : 19 50
-                    : 58 64
.                    : 1
/                    : 61
:                    : 9 11 12 17
;                    : 4 9 9 12 17 28
AND                  : 52
ARRAY                : 25
ASSIGN               : 37 38 46 47
BEGIN                : 26 48
BOOLEAN              : 22
CHAR                 : 23
DIV                  : 62
DO                   : 45 46 47
DOWNTO               : 47
ELSE                 : 43
END                  : 26 48
EQUALS               : 73
FALSE                : 70
FOR                  : 46 47
FUNCTION             : 5
GREATER_THAN         : 77
GREATER_THAN_OR_EQUAL_TO : 78
ID                   : 4 9 18 19 37 38 46 47 65 68 72
IF                   : 43 44
INTEGER              : 20
LESS_THAN            : 75
LESS_THAN_OR_EQUAL_TO : 76
MOD                  : 63
NOT                  : 53
NOT_EQUALS           : 74
NUMBER               : 25 25 66
OF                   : 25
OR                   : 51
PROGRAM              : 4
RANGE                : 25
READ                 : 39
READLN               : 40
REAL                 : 21
STRING               : 24
STRING_LITERAL       : 67
THEN                 : 43 44
TO                   : 46
TRUE                 : 69
VAR                  : 13
WHILE                : 45
WRITE                : 41
WRITELN              : 42
[                    : 25 38 65
]                    : 25 38 65
error                : 

Nonterminals, with rules where they appear

atribuicao           : 29
bloco                : 35
bloco_funcao         : 9
cabecalho            : 2
corpo                : 2 10
declaracao           : 15 16
declaracao_funcoes   : 3
declaracoes          : 13 16
declaracoes_variaveis : 3 10
escrita              : 31
expressao            : 37 38 38 43 44 45 46 46 47 47 49 50 51 51 52 52 65 71 72
expressao_simples    : 39 40 54 54 55 57 58
fator                : 53 59 60 61 62 63 64
for_statement        : 34
funcao               : 7 8
funcoes              : 5 8
gramatica            : 0
if_statement         : 32
instrucao            : 27 28 43 43 44 45 46 47
leitura              : 30
lista_expressao      : 41 42 50
lista_id             : 11 12 17 19
lista_instrucoes     : 26 28 48
operador_relacional  : 54
parametros           : 9 12
programa             : 1
termo                : 56 57 58 60 61 62 63
tipo                 : 9 11 12 17 25
titulo               : 3
while_statement      : 33

Parsing method: LALR

state 0

    (0) S' -> . gramatica
    (1) gramatica -> . programa .
    (2) programa -> . cabecalho corpo
    (3) cabecalho -> . titulo declaracao_funcoes declaracoes_variaveis
    (4) titulo -> . PROGRAM ID ;

    PROGRAM         shift and go to state 5

    gramatica                      shift and go to state 1
    programa                       shift and go to state 2
    cabecalho                      shift and go to state 3
    titulo                         shift and go to state 4

state 1

    (0) S' -> gramatica .



state 2

    (1) gramatica -> programa . .

    .               shift and go to state 6


state 3

    (2) programa -> cabecalho . corpo
    (26) corpo -> . BEGIN lista_instrucoes END

    BEGIN           shift and go to state 8

    corpo                          shift and go to state 7

state 4

    (3) cabecalho -> titulo . declaracao_funcoes declaracoes_variaveis
    (5) declaracao_funcoes -> . FUNCTION funcoes
    (6) declaracao_funcoes -> .

    FUNCTION        shift and go to state 10
    VAR             reduce using rule 6 (declaracao_funcoes -> .)
    BEGIN           reduce using rule 6 (declaracao_funcoes -> .)

    declaracao_funcoes             shift and go to state 9

state 5

    (4) titulo -> PROGRAM . ID ;

    ID              shift and go to state 11


state 6

    (1) gramatica -> programa . .

    $end            reduce using rule 1 (gramatica -> programa . .)


state 7

    (2) programa -> cabecalho corpo .

    .               reduce using rule 2 (programa -> cabecalho corpo .)


state 8

    (26) corpo -> BEGIN . lista_instrucoes END
    (27) lista_instrucoes -> . instrucao
    (28) lista_instrucoes -> . lista_instrucoes ; instrucao
    (29) instrucao -> . atribuicao
    (30) instrucao -> . leitura
    (31) instrucao -> . escrita
    (32) instrucao -> . if_statement
    (33) instrucao -> . while_statement
    (34) instrucao -> . for_statement
    (35) instrucao -> . bloco
    (36) instrucao -> .
    (37) atribuicao -> . ID ASSIGN expressao
    (38) atribuicao -> . ID [ expressao ] ASSIGN expressao
    (39) leitura -> . READ ( expressao_simples )
    (40) leitura -> . READLN ( expressao_simples )
    (41) escrita -> . WRITE ( lista_expressao )
    (42) escrita -> . WRITELN ( lista_expressao )
    (43) if_statement -> . IF expressao THEN instrucao ELSE instrucao
    (44) if_statement -> . IF expressao THEN instrucao
    (45) while_statement -> . WHILE expressao DO instrucao
    (46) for_statement -> . FOR ID ASSIGN expressao TO expressao DO instrucao
    (47) for_statement -> . FOR ID ASSIGN expressao DOWNTO expressao DO instrucao
    (48) bloco -> . BEGIN lista_instrucoes END

    END             reduce using rule 36 (instrucao -> .)
    ;               reduce using rule 36 (instrucao -> .)
    ID              shift and go to state 22
    READ            shift and go to state 23
    READLN          shift and go to state 24
    WRITE           shift and go to state 25
    WRITELN         shift and go to state 26
    IF              shift and go to state 27
    WHILE           shift and go to state 28
    FOR             shift and go to state 29
    BEGIN           shift and go to state 12

    lista_instrucoes               shift and go to state 13
    instrucao                      shift and go to state 14
    atribuicao                     shift and go to state 15
    leitura                        shift and go to state 16
    escrita                        shift and go to state 17
    if_statement                   shift and go to state 18
    while_statement                shift and go to state 19
    for_statement                  shift and go to state 20
    bloco                          shift and go to state 21

state 9

    (3) cabecalho -> titulo declaracao_funcoes . declaracoes_variaveis
    (13) declaracoes_variaveis -> . VAR declaracoes
    (14) declaracoes_variaveis -> .

    VAR             shift and go to state 31
    BEGIN           reduce using rule 14 (declaracoes_variaveis -> .)

    declaracoes_variaveis          shift and go to state 30

state 10

    (5) declaracao_funcoes -> FUNCTION . funcoes
    (7) funcoes -> . funcao
    (8) funcoes -> . funcao funcoes
    (9) funcao -> . ID ( parametros ) : tipo ; bloco_funcao ;

    ID              shift and go to state 34

    funcoes                        shift and go to state 32
    funcao                         shift and go to state 33

state 11

    (4) titulo -> PROGRAM ID . ;

    ;               shift and go to state 35


state 12

    (48) bloco -> BEGIN . lista_instrucoes END
    (27) lista_instrucoes -> . instrucao
    (28) lista_instrucoes -> . lista_instrucoes ; instrucao
    (29) instrucao -> . atribuicao
    (30) instrucao -> . leitura
    (31) instrucao -> . escrita
    (32) instrucao -> . if_statement
    (33) instrucao -> . while_statement
    (34) instrucao -> . for_statement
    (35) instrucao -> . bloco
    (36) instrucao -> .
    (37) atribuicao -> . ID ASSIGN expressao
    (38) atribuicao -> . ID [ expressao ] ASSIGN expressao
    (39) leitura -> . READ ( expressao_simples )
    (40) leitura -> . READLN ( expressao_simples )
    (41) escrita -> . WRITE ( lista_expressao )
    (42) escrita -> . WRITELN ( lista_expressao )
    (43) if_statement -> . IF expressao THEN instrucao ELSE instrucao
    (44) if_statement -> . IF expressao THEN instrucao
    (45) while_statement -> . WHILE expressao DO instrucao
    (46) for_statement -> . FOR ID ASSIGN expressao TO expressao DO instrucao
    (47) for_statement -> . FOR ID ASSIGN expressao DOWNTO expressao DO instrucao
    (48) bloco -> . BEGIN lista_instrucoes END

    END             reduce using rule 36 (instrucao -> .)
    ;               reduce using rule 36 (instrucao -> .)
    ID              shift and go to state 22
    READ            shift and go to state 23
    READLN          shift and go to state 24
    WRITE           shift and go to state 25
    WRITELN         shift and go to state 26
    IF              shift and go to state 27
    WHILE           shift and go to state 28
    FOR             shift and go to state 29
    BEGIN           shift and go to state 12

    lista_instrucoes               shift and go to state 36
    instrucao                      shift and go to state 14
    atribuicao                     shift and go to state 15
    leitura                        shift and go to state 16
    escrita                        shift and go to state 17
    if_statement                   shift and go to state 18
    while_statement                shift and go to state 19
    for_statement                  shift and go to state 20
    bloco                          shift and go to state 21

state 13

    (26) corpo -> BEGIN lista_instrucoes . END
    (28) lista_instrucoes -> lista_instrucoes . ; instrucao

    END             shift and go to state 37
    ;               shift and go to state 38


state 14

    (27) lista_instrucoes -> instrucao .

    END             reduce using rule 27 (lista_instrucoes -> instrucao .)
    ;               reduce using rule 27 (lista_instrucoes -> instrucao .)


state 15

    (29) instrucao -> atribuicao .

    END             reduce using rule 29 (instrucao -> atribuicao .)
    ;               reduce using rule 29 (instrucao -> atribuicao .)
    ELSE            reduce using rule 29 (instrucao -> atribuicao .)


state 16

    (30) instrucao -> leitura .

    END             reduce using rule 30 (instrucao -> leitura .)
    ;               reduce using rule 30 (instrucao -> leitura .)
    ELSE            reduce using rule 30 (instrucao -> leitura .)


state 17

    (31) instrucao -> escrita .

    END             reduce using rule 31 (instrucao -> escrita .)
    ;               reduce using rule 31 (instrucao -> escrita .)
    ELSE            reduce using rule 31 (instrucao -> escrita .)


state 18

    (32) instrucao -> if_statement .

    END             reduce using rule 32 (instrucao -> if_statement .)
    ;               reduce using rule 32 (instrucao -> if_statement .)
    ELSE            reduce using rule 32 (instrucao -> if_statement .)


state 19

    (33) instrucao -> while_statement .

    END             reduce using rule 33 (instrucao -> while_statement .)
    ;               reduce using rule 33 (instrucao -> while_statement .)
    ELSE            reduce using rule 33 (instrucao -> while_statement .)


state 20

    (34) instrucao -> for_statement .

    END             reduce using rule 34 (instrucao -> for_statement .)
    ;               reduce using rule 34 (instrucao -> for_statement .)
    ELSE            reduce using rule 34 (instrucao -> for_statement .)


state 21

    (35) instrucao -> bloco .

    END             reduce using rule 35 (instrucao -> bloco .)
    ;               reduce using rule 35 (instrucao -> bloco .)
    ELSE            reduce using rule 35 (instrucao -> bloco .)


state 22

    (37) atribuicao -> ID . ASSIGN expressao
    (38) atribuicao -> ID . [ expressao ] ASSIGN expressao

    ASSIGN          shift and go to state 39
    [               shift and go to state 40


state 23

    (39) leitura -> READ . ( expressao_simples )

    (               shift and go to state 41


state 24

    (40) leitura -> READLN . ( expressao_simples )

    (               shift and go to state 42


state 25

    (41) escrita -> WRITE . ( lista_expressao )

    (               shift and go to state 43


state 26

    (42) escrita -> WRITELN . ( lista_expressao )

    (               shift and go to state 44


state 27

    (43) if_statement -> IF . expressao THEN instrucao ELSE instrucao
    (44) if_statement -> IF . expressao THEN instrucao
    (51) expressao -> . expressao OR expressao
    (52) expressao -> . expressao AND expressao
    (54) expressao -> . expressao_simples operador_relacional expressao_simples
    (55) expressao -> . expressao_simples
    (56) expressao_simples -> . termo
    (57) expressao_simples -> . expressao_simples + termo
    (58) expressao_simples -> . expressao_simples - termo
    (59) termo -> . fator
    (60) termo -> . termo * fator
    (61) termo -> . termo / fator
    (62) termo -> . termo DIV fator
    (63) termo -> . termo MOD fator
    (53) fator -> . NOT fator
    (64) fator -> . - fator
    (65) fator -> . ID [ expressao ]
    (66) fator -> . NUMBER
    (67) fator -> . STRING_LITERAL
    (68) fator -> . ID
    (69) fator -> . TRUE
    (70) fator -> . FALSE
    (71) fator -> . ( expressao )
    (72) fator -> . ID ( expressao )

    NOT             shift and go to state 50
    -               shift and go to state 48
    ID              shift and go to state 51
    NUMBER          shift and go to state 52
    STRING_LITERAL  shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    (               shift and go to state 56

    expressao                      shift and go to state 45
    expressao_simples              shift and go to state 46
    termo                          shift and go to state 47
    fator                          shift and go to state 49

state 28

    (45) while_statement -> WHILE . expressao DO instrucao
    (51) expressao -> . expressao OR expressao
    (52) expressao -> . expressao AND expressao
    (54) expressao -> . expressao_simples operador_relacional expressao_simples
    (55) expressao -> . expressao_simples
    (56) expressao_simples -> . termo
    (57) expressao_simples -> . expressao_simples + termo
    (58) expressao_simples -> . expressao_simples - termo
    (59) termo -> . fator
    (60) termo -> . termo * fator
    (61) termo -> . termo / fator
    (62) termo -> . termo DIV fator
    (63) termo -> . termo MOD fator
    (53) fator -> . NOT fator
    (64) fator -> . - fator
    (65) fator -> . ID [ expressao ]
    (66) fator -> . NUMBER
    (67) fator -> . STRING_LITERAL
    (68) fator -> . ID
    (69) fator -> . TRUE
    (70) fator -> . FALSE
    (71) fator -> . ( expressao )
    (72) fator -> . ID ( expressao )

    NOT             shift and go to state 50
    -               shift and go to state 48
    ID              shift and go to state 51
    NUMBER          shift and go to state 52
    STRING_LITERAL  shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    (               shift and go to state 56

    expressao                      shift and go to state 57
    expressao_simples              shift and go to state 46
    termo                          shift and go to state 47
    fator                          shift and go to state 49

state 29

    (46) for_statement -> FOR . ID ASSIGN expressao TO expressao DO instrucao
    (47) for_statement -> FOR . ID ASSIGN expressao DOWNTO expressao DO instrucao

    ID              shift and go to state 58


state 30

    (3) cabecalho -> titulo declaracao_funcoes declaracoes_variaveis .

    BEGIN           reduce using rule 3 (cabecalho -> titulo declaracao_funcoes declaracoes_variaveis .)


state 31

    (13) declaracoes_variaveis -> VAR . declaracoes
    (15) declaracoes -> . declaracao
    (16) declaracoes -> . declaracao declaracoes
    (17) declaracao -> . lista_id : tipo ;
    (18) lista_id -> . ID
    (19) lista_id -> . lista_id , ID

    ID              shift and go to state 62

    declaracoes                    shift and go to state 59
    declaracao                     shift and go to state 60
    lista_id                       shift and go to state 61

state 32

    (5) declaracao_funcoes -> FUNCTION funcoes .

    VAR             reduce using rule 5 (declaracao_funcoes -> FUNCTION funcoes .)
    BEGIN           reduce using rule 5 (declaracao_funcoes -> FUNCTION funcoes .)


state 33

    (7) funcoes -> funcao .
    (8) funcoes -> funcao . funcoes
    (7) funcoes -> . funcao
    (8) funcoes -> . funcao funcoes
    (9) funcao -> . ID ( parametros ) : tipo ; bloco_funcao ;

    VAR             reduce using rule 7 (funcoes -> funcao .)
    BEGIN           reduce using rule 7 (funcoes -> funcao .)
    ID              shift and go to state 34

    funcao                         shift and go to state 33
    funcoes                        shift and go to state 63

state 34

    (9) funcao -> ID . ( parametros ) : tipo ; bloco_funcao ;

    (               shift and go to state 64


state 35

    (4) titulo -> PROGRAM ID ; .

    FUNCTION        reduce using rule 4 (titulo -> PROGRAM ID ; .)
    VAR             reduce using rule 4 (titulo -> PROGRAM ID ; .)
    BEGIN           reduce using rule 4 (titulo -> PROGRAM ID ; .)


state 36

    (48) bloco -> BEGIN lista_instrucoes . END
    (28) lista_instrucoes -> lista_instrucoes . ; instrucao

    END             shift and go to state 65
    ;               shift and go to state 38


state 37

    (26) corpo -> BEGIN lista_instrucoes END .

    .               reduce using rule 26 (corpo -> BEGIN lista_instrucoes END .)
    ;               reduce using rule 26 (corpo -> BEGIN lista_instrucoes END .)


state 38

    (28) lista_instrucoes -> lista_instrucoes ; . instrucao
    (29) instrucao -> . atribuicao
    (30) instrucao -> . leitura
    (31) instrucao -> . escrita
    (32) instrucao -> . if_statement
    (33) instrucao -> . while_statement
    (34) instrucao -> . for_statement
    (35) instrucao -> . bloco
    (36) instrucao -> .
    (37) atribuicao -> . ID ASSIGN expressao
    (38) atribuicao -> . ID [ expressao ] ASSIGN expressao
    (39) leitura -> . READ ( expressao_simples )
    (40) leitura -> . READLN ( expressao_simples )
    (41) escrita -> . WRITE ( lista_expressao )
    (42) escrita -> . WRITELN ( lista_expressao )
    (43) if_statement -> . IF expressao THEN instrucao ELSE instrucao
    (44) if_statement -> . IF expressao THEN instrucao
    (45) while_statement -> . WHILE expressao DO instrucao
    (46) for_statement -> . FOR ID ASSIGN expressao TO expressao DO instrucao
    (47) for_statement -> . FOR ID ASSIGN expressao DOWNTO expressao DO instrucao
    (48) bloco -> . BEGIN lista_instrucoes END

    END             reduce using rule 36 (instrucao -> .)
    ;               reduce using rule 36 (instrucao -> .)
    ID              shift and go to state 22
    READ            shift and go to state 23
    READLN          shift and go to state 24
    WRITE           shift and go to state 25
    WRITELN         shift and go to state 26
    IF              shift and go to state 27
    WHILE           shift and go to state 28
    FOR             shift and go to state 29
    BEGIN           shift and go to state 12

    instrucao                      shift and go to state 66
    atribuicao                     shift and go to state 15
    leitura                        shift and go to state 16
    escrita                        shift and go to state 17
    if_statement                   shift and go to state 18
    while_statement                shift and go to state 19
    for_statement                  shift and go to state 20
    bloco                          shift and go to state 21

state 39

    (37) atribuicao -> ID ASSIGN . expressao
    (51) expressao -> . expressao OR expressao
    (52) expressao -> . expressao AND expressao
    (54) expressao -> . expressao_simples operador_relacional expressao_simples
    (55) expressao -> . expressao_simples
    (56) expressao_simples -> . termo
    (57) expressao_simples -> . expressao_simples + termo
    (58) expressao_simples -> . expressao_simples - termo
    (59) termo -> . fator
    (60) termo -> . termo * fator
    (61) termo -> . termo / fator
    (62) termo -> . termo DIV fator
    (63) termo -> . termo MOD fator
    (53) fator -> . NOT fator
    (64) fator -> . - fator
    (65) fator -> . ID [ expressao ]
    (66) fator -> . NUMBER
    (67) fator -> . STRING_LITERAL
    (68) fator -> . ID
    (69) fator -> . TRUE
    (70) fator -> . FALSE
    (71) fator -> . ( expressao )
    (72) fator -> . ID ( expressao )

    NOT             shift and go to state 50
    -               shift and go to state 48
    ID              shift and go to state 51
    NUMBER          shift and go to state 52
    STRING_LITERAL  shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    (               shift and go to state 56

    expressao                      shift and go to state 67
    expressao_simples              shift and go to state 46
    termo                          shift and go to state 47
    fator                          shift and go to state 49

state 40

    (38) atribuicao -> ID [ . expressao ] ASSIGN expressao
    (51) expressao -> . expressao OR expressao
    (52) expressao -> . expressao AND expressao
    (54) expressao -> . expressao_simples operador_relacional expressao_simples
    (55) expressao -> . expressao_simples
    (56) expressao_simples -> . termo
    (57) expressao_simples -> . expressao_simples + termo
    (58) expressao_simples -> . expressao_simples - termo
    (59) termo -> . fator
    (60) termo -> . termo * fator
    (61) termo -> . termo / fator
    (62) termo -> . termo DIV fator
    (63) termo -> . termo MOD fator
    (53) fator -> . NOT fator
    (64) fator -> . - fator
    (65) fator -> . ID [ expressao ]
    (66) fator -> . NUMBER
    (67) fator -> . STRING_LITERAL
    (68) fator -> . ID
    (69) fator -> . TRUE
    (70) fator -> . FALSE
    (71) fator -> . ( expressao )
    (72) fator -> . ID ( expressao )

    NOT             shift and go to state 50
    -               shift and go to state 48
    ID              shift and go to state 51
    NUMBER          shift and go to state 52
    STRING_LITERAL  shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    (               shift and go to state 56

    expressao                      shift and go to state 68
    expressao_simples              shift and go to state 46
    termo                          shift and go to state 47
    fator                          shift and go to state 49

state 41

    (39) leitura -> READ ( . expressao_simples )
    (56) expressao_simples -> . termo
    (57) expressao_simples -> . expressao_simples + termo
    (58) expressao_simples -> . expressao_simples - termo
    (59) termo -> . fator
    (60) termo -> . termo * fator
    (61) termo -> . termo / fator
    (62) termo -> . termo DIV fator
    (63) termo -> . termo MOD fator
    (53) fator -> . NOT fator
    (64) fator -> . - fator
    (65) fator -> . ID [ expressao ]
    (66) fator -> . NUMBER
    (67) fator -> . STRING_LITERAL
    (68) fator -> . ID
    (69) fator -> . TRUE
    (70) fator -> . FALSE
    (71) fator -> . ( expressao )
    (72) fator -> . ID ( expressao )

    NOT             shift and go to state 50
    -               shift and go to state 48
    ID              shift and go to state 51
    NUMBER          shift and go to state 52
    STRING_LITERAL  shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    (               shift and go to state 56

    expressao_simples              shift and go to state 69
    termo                          shift and go to state 47
    fator                          shift and go to state 49

state 42

    (40) leitura -> READLN ( . expressao_simples )
    (56) expressao_simples -> . termo
    (57) expressao_simples -> . expressao_simples + termo
    (58) expressao_simples -> . expressao_simples - termo
    (59) termo -> . fator
    (60) termo -> . termo * fator
    (61) termo -> . termo / fator
    (62) termo -> . termo DIV fator
    (63) termo -> . termo MOD fator
    (53) fator -> . NOT fator
    (64) fator -> . - fator
    (65) fator -> . ID [ expressao ]
    (66) fator -> . NUMBER
    (67) fator -> . STRING_LITERAL
    (68) fator -> . ID
    (69) fator -> . TRUE
    (70) fator -> . FALSE
    (71) fator -> . ( expressao )
    (72) fator -> . ID ( expressao )

    NOT             shift and go to state 50
    -               shift and go to state 48
    ID              shift and go to state 51
    NUMBER          shift and go to state 52
    STRING_LITERAL  shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    (               shift and go to state 56

    expressao_simples              shift and go to state 70
    termo                          shift and go to state 47
    fator                          shift and go to state 49

state 43

    (41) escrita -> WRITE ( . lista_expressao )
    (49) lista_expressao -> . expressao
    (50) lista_expressao -> . lista_expressao , expressao
    (51) expressao -> . expressao OR expressao
    (52) expressao -> . expressao AND expressao
    (54) expressao -> . expressao_simples operador_relacional expressao_simples
    (55) expressao -> . expressao_simples
    (56) expressao_simples -> . termo
    (57) expressao_simples -> . expressao_simples + termo
    (58) expressao_simples -> . expressao_simples - termo
    (59) termo -> . fator
    (60) termo -> . termo * fator
    (61) termo -> . termo / fator
    (62) termo -> . termo DIV fator
    (63) termo -> . termo MOD fator
    (53) fator -> . NOT fator
    (64) fator -> . - fator
    (65) fator -> . ID [ expressao ]
    (66) fator -> . NUMBER
    (67) fator -> . STRING_LITERAL
    (68) fator -> . ID
    (69) fator -> . TRUE
    (70) fator -> . FALSE
    (71) fator -> . ( expressao )
    (72) fator -> . ID ( expressao )

    NOT             shift and go to state 50
    -               shift and go to state 48
    ID              shift and go to state 51
    NUMBER          shift and go to state 52
    STRING_LITERAL  shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    (               shift and go to state 56

    lista_expressao                shift and go to state 71
    expressao                      shift and go to state 72
    expressao_simples              shift and go to state 46
    termo                          shift and go to state 47
    fator                          shift and go to state 49

state 44

    (42) escrita -> WRITELN ( . lista_expressao )
    (49) lista_expressao -> . expressao
    (50) lista_expressao -> . lista_expressao , expressao
    (51) expressao -> . expressao OR expressao
    (52) expressao -> . expressao AND expressao
    (54) expressao -> . expressao_simples operador_relacional expressao_simples
    (55) expressao -> . expressao_simples
    (56) expressao_simples -> . termo
    (57) expressao_simples -> . expressao_simples + termo
    (58) expressao_simples -> . expressao_simples - termo
    (59) termo -> . fator
    (60) termo -> . termo * fator
    (61) termo -> . termo / fator
    (62) termo -> . termo DIV fator
    (63) termo -> . termo MOD fator
    (53) fator -> . NOT fator
    (64) fator -> . - fator
    (65) fator -> . ID [ expressao ]
    (66) fator -> . NUMBER
    (67) fator -> . STRING_LITERAL
    (68) fator -> . ID
    (69) fator -> . TRUE
    (70) fator -> . FALSE
    (71) fator -> . ( expressao )
    (72) fator -> . ID ( expressao )

    NOT             shift and go to state 50
    -               shift and go to state 48
    ID              shift and go to state 51
    NUMBER          shift and go to state 52
    STRING_LITERAL  shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    (               shift and go to state 56

    lista_expressao                shift and go to state 73
    expressao                      shift and go to state 72
    expressao_simples              shift and go to state 46
    termo                          shift and go to state 47
    fator                          shift and go to state 49

state 45

    (43) if_statement -> IF expressao . THEN instrucao ELSE instrucao
    (44) if_statement -> IF expressao . THEN instrucao
    (51) expressao -> expressao . OR expressao
    (52) expressao -> expressao . AND expressao

    THEN            shift and go to state 74
    OR              shift and go to state 75
    AND             shift and go to state 76


state 46

    (54) expressao -> expressao_simples . operador_relacional expressao_simples
    (55) expressao -> expressao_simples .
    (57) expressao_simples -> expressao_simples . + termo
    (58) expressao_simples -> expressao_simples . - termo
    (73) operador_relacional -> . EQUALS
    (74) operador_relacional -> . NOT_EQUALS
    (75) operador_relacional -> . LESS_THAN
    (76) operador_relacional -> . LESS_THAN_OR_EQUAL_TO
    (77) operador_relacional -> . GREATER_THAN
    (78) operador_relacional -> . GREATER_THAN_OR_EQUAL_TO

    THEN            reduce using rule 55 (expressao -> expressao_simples .)
    OR              reduce using rule 55 (expressao -> expressao_simples .)
    AND             reduce using rule 55 (expressao -> expressao_simples .)
    DO              reduce using rule 55 (expressao -> expressao_simples .)
    END             reduce using rule 55 (expressao -> expressao_simples .)
    ;               reduce using rule 55 (expressao -> expressao_simples .)
    ELSE            reduce using rule 55 (expressao -> expressao_simples .)
    ]               reduce using rule 55 (expressao -> expressao_simples .)
    )               reduce using rule 55 (expressao -> expressao_simples .)
    ,               reduce using rule 55 (expressao -> expressao_simples .)
    TO              reduce using rule 55 (expressao -> expressao_simples .)
    DOWNTO          reduce using rule 55 (expressao -> expressao_simples .)
    +               shift and go to state 78
    -               shift and go to state 79
    EQUALS          shift and go to state 80
    NOT_EQUALS      shift and go to state 81
    LESS_THAN       shift and go to state 82
    LESS_THAN_OR_EQUAL_TO shift and go to state 83
    GREATER_THAN    shift and go to state 84
    GREATER_THAN_OR_EQUAL_TO shift and go to state 85

    operador_relacional            shift and go to state 77

state 47

    (56) expressao_simples -> termo .
    (60) termo -> termo . * fator
    (61) termo -> termo . / fator
    (62) termo -> termo . DIV fator
    (63) termo -> termo . MOD fator

    +               reduce using rule 56 (expressao_simples -> termo .)
    -               reduce using rule 56 (expressao_simples -> termo .)
    EQUALS          reduce using rule 56 (expressao_simples -> termo .)
    NOT_EQUALS      reduce using rule 56 (expressao_simples -> termo .)
    LESS_THAN       reduce using rule 56 (expressao_simples -> termo .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 56 (expressao_simples -> termo .)
    GREATER_THAN    reduce using rule 56 (expressao_simples -> termo .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 56 (expressao_simples -> termo .)
    THEN            reduce using rule 56 (expressao_simples -> termo .)
    OR              reduce using rule 56 (expressao_simples -> termo .)
    AND             reduce using rule 56 (expressao_simples -> termo .)
    DO              reduce using rule 56 (expressao_simples -> termo .)
    END             reduce using rule 56 (expressao_simples -> termo .)
    ;               reduce using rule 56 (expressao_simples -> termo .)
    ELSE            reduce using rule 56 (expressao_simples -> termo .)
    ]               reduce using rule 56 (expressao_simples -> termo .)
    )               reduce using rule 56 (expressao_simples -> termo .)
    ,               reduce using rule 56 (expressao_simples -> termo .)
    TO              reduce using rule 56 (expressao_simples -> termo .)
    DOWNTO          reduce using rule 56 (expressao_simples -> termo .)
    *               shift and go to state 86
    /               shift and go to state 87
    DIV             shift and go to state 88
    MOD             shift and go to state 89


state 48

    (64) fator -> - . fator
    (53) fator -> . NOT fator
    (64) fator -> . - fator
    (65) fator -> . ID [ expressao ]
    (66) fator -> . NUMBER
    (67) fator -> . STRING_LITERAL
    (68) fator -> . ID
    (69) fator -> . TRUE
    (70) fator -> . FALSE
    (71) fator -> . ( expressao )
    (72) fator -> . ID ( expressao )

    NOT             shift and go to state 50
    -               shift and go to state 48
    ID              shift and go to state 51
    NUMBER          shift and go to state 52
    STRING_LITERAL  shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    (               shift and go to state 56

    fator                          shift and go to state 90

state 49

    (59) termo -> fator .

    *               reduce using rule 59 (termo -> fator .)
    /               reduce using rule 59 (termo -> fator .)
    DIV             reduce using rule 59 (termo -> fator .)
    MOD             reduce using rule 59 (termo -> fator .)
    +               reduce using rule 59 (termo -> fator .)
    -               reduce using rule 59 (termo -> fator .)
    EQUALS          reduce using rule 59 (termo -> fator .)
    NOT_EQUALS      reduce using rule 59 (termo -> fator .)
    LESS_THAN       reduce using rule 59 (termo -> fator .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 59 (termo -> fator .)
    GREATER_THAN    reduce using rule 59 (termo -> fator .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 59 (termo -> fator .)
    THEN            reduce using rule 59 (termo -> fator .)
    OR              reduce using rule 59 (termo -> fator .)
    AND             reduce using rule 59 (termo -> fator .)
    DO              reduce using rule 59 (termo -> fator .)
    END             reduce using rule 59 (termo -> fator .)
    ;               reduce using rule 59 (termo -> fator .)
    ELSE            reduce using rule 59 (termo -> fator .)
    ]               reduce using rule 59 (termo -> fator .)
    )               reduce using rule 59 (termo -> fator .)
    ,               reduce using rule 59 (termo -> fator .)
    TO              reduce using rule 59 (termo -> fator .)
    DOWNTO          reduce using rule 59 (termo -> fator .)


state 50

    (53) fator -> NOT . fator
    (53) fator -> . NOT fator
    (64) fator -> . - fator
    (65) fator -> . ID [ expressao ]
    (66) fator -> . NUMBER
    (67) fator -> . STRING_LITERAL
    (68) fator -> . ID
    (69) fator -> . TRUE
    (70) fator -> . FALSE
    (71) fator -> . ( expressao )
    (72) fator -> . ID ( expressao )

    NOT             shift and go to state 50
    -               shift and go to state 48
    ID              shift and go to state 51
    NUMBER          shift and go to state 52
    STRING_LITERAL  shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    (               shift and go to state 56

    fator                          shift and go to state 91

state 51

    (65) fator -> ID . [ expressao ]
    (68) fator -> ID .
    (72) fator -> ID . ( expressao )

    [               shift and go to state 92
    *               reduce using rule 68 (fator -> ID .)
    /               reduce using rule 68 (fator -> ID .)
    DIV             reduce using rule 68 (fator -> ID .)
    MOD             reduce using rule 68 (fator -> ID .)
    +               reduce using rule 68 (fator -> ID .)
    -               reduce using rule 68 (fator -> ID .)
    EQUALS          reduce using rule 68 (fator -> ID .)
    NOT_EQUALS      reduce using rule 68 (fator -> ID .)
    LESS_THAN       reduce using rule 68 (fator -> ID .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 68 (fator -> ID .)
    GREATER_THAN    reduce using rule 68 (fator -> ID .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 68 (fator -> ID .)
    THEN            reduce using rule 68 (fator -> ID .)
    OR              reduce using rule 68 (fator -> ID .)
    AND             reduce using rule 68 (fator -> ID .)
    DO              reduce using rule 68 (fator -> ID .)
    END             reduce using rule 68 (fator -> ID .)
    ;               reduce using rule 68 (fator -> ID .)
    ELSE            reduce using rule 68 (fator -> ID .)
    ]               reduce using rule 68 (fator -> ID .)
    )               reduce using rule 68 (fator -> ID .)
    ,               reduce using rule 68 (fator -> ID .)
    TO              reduce using rule 68 (fator -> ID .)
    DOWNTO          reduce using rule 68 (fator -> ID .)
    (               shift and go to state 93


state 52

    (66) fator -> NUMBER .

    *               reduce using rule 66 (fator -> NUMBER .)
    /               reduce using rule 66 (fator -> NUMBER .)
    DIV             reduce using rule 66 (fator -> NUMBER .)
    MOD             reduce using rule 66 (fator -> NUMBER .)
    +               reduce using rule 66 (fator -> NUMBER .)
    -               reduce using rule 66 (fator -> NUMBER .)
    EQUALS          reduce using rule 66 (fator -> NUMBER .)
    NOT_EQUALS      reduce using rule 66 (fator -> NUMBER .)
    LESS_THAN       reduce using rule 66 (fator -> NUMBER .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 66 (fator -> NUMBER .)
    GREATER_THAN    reduce using rule 66 (fator -> NUMBER .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 66 (fator -> NUMBER .)
    THEN            reduce using rule 66 (fator -> NUMBER .)
    OR              reduce using rule 66 (fator -> NUMBER .)
    AND             reduce using rule 66 (fator -> NUMBER .)
    DO              reduce using rule 66 (fator -> NUMBER .)
    END             reduce using rule 66 (fator -> NUMBER .)
    ;               reduce using rule 66 (fator -> NUMBER .)
    ELSE            reduce using rule 66 (fator -> NUMBER .)
    ]               reduce using rule 66 (fator -> NUMBER .)
    )               reduce using rule 66 (fator -> NUMBER .)
    ,               reduce using rule 66 (fator -> NUMBER .)
    TO              reduce using rule 66 (fator -> NUMBER .)
    DOWNTO          reduce using rule 66 (fator -> NUMBER .)


state 53

    (67) fator -> STRING_LITERAL .

    *               reduce using rule 67 (fator -> STRING_LITERAL .)
    /               reduce using rule 67 (fator -> STRING_LITERAL .)
    DIV             reduce using rule 67 (fator -> STRING_LITERAL .)
    MOD             reduce using rule 67 (fator -> STRING_LITERAL .)
    +               reduce using rule 67 (fator -> STRING_LITERAL .)
    -               reduce using rule 67 (fator -> STRING_LITERAL .)
    EQUALS          reduce using rule 67 (fator -> STRING_LITERAL .)
    NOT_EQUALS      reduce using rule 67 (fator -> STRING_LITERAL .)
    LESS_THAN       reduce using rule 67 (fator -> STRING_LITERAL .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 67 (fator -> STRING_LITERAL .)
    GREATER_THAN    reduce using rule 67 (fator -> STRING_LITERAL .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 67 (fator -> STRING_LITERAL .)
    THEN            reduce using rule 67 (fator -> STRING_LITERAL .)
    OR              reduce using rule 67 (fator -> STRING_LITERAL .)
    AND             reduce using rule 67 (fator -> STRING_LITERAL .)
    DO              reduce using rule 67 (fator -> STRING_LITERAL .)
    END             reduce using rule 67 (fator -> STRING_LITERAL .)
    ;               reduce using rule 67 (fator -> STRING_LITERAL .)
    ELSE            reduce using rule 67 (fator -> STRING_LITERAL .)
    ]               reduce using rule 67 (fator -> STRING_LITERAL .)
    )               reduce using rule 67 (fator -> STRING_LITERAL .)
    ,               reduce using rule 67 (fator -> STRING_LITERAL .)
    TO              reduce using rule 67 (fator -> STRING_LITERAL .)
    DOWNTO          reduce using rule 67 (fator -> STRING_LITERAL .)


state 54

    (69) fator -> TRUE .

    *               reduce using rule 69 (fator -> TRUE .)
    /               reduce using rule 69 (fator -> TRUE .)
    DIV             reduce using rule 69 (fator -> TRUE .)
    MOD             reduce using rule 69 (fator -> TRUE .)
    +               reduce using rule 69 (fator -> TRUE .)
    -               reduce using rule 69 (fator -> TRUE .)
    EQUALS          reduce using rule 69 (fator -> TRUE .)
    NOT_EQUALS      reduce using rule 69 (fator -> TRUE .)
    LESS_THAN       reduce using rule 69 (fator -> TRUE .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 69 (fator -> TRUE .)
    GREATER_THAN    reduce using rule 69 (fator -> TRUE .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 69 (fator -> TRUE .)
    THEN            reduce using rule 69 (fator -> TRUE .)
    OR              reduce using rule 69 (fator -> TRUE .)
    AND             reduce using rule 69 (fator -> TRUE .)
    DO              reduce using rule 69 (fator -> TRUE .)
    END             reduce using rule 69 (fator -> TRUE .)
    ;               reduce using rule 69 (fator -> TRUE .)
    ELSE            reduce using rule 69 (fator -> TRUE .)
    ]               reduce using rule 69 (fator -> TRUE .)
    )               reduce using rule 69 (fator -> TRUE .)
    ,               reduce using rule 69 (fator -> TRUE .)
    TO              reduce using rule 69 (fator -> TRUE .)
    DOWNTO          reduce using rule 69 (fator -> TRUE .)


state 55

    (70) fator -> FALSE .

    *               reduce using rule 70 (fator -> FALSE .)
    /               reduce using rule 70 (fator -> FALSE .)
    DIV             reduce using rule 70 (fator -> FALSE .)
    MOD             reduce using rule 70 (fator -> FALSE .)
    +               reduce using rule 70 (fator -> FALSE .)
    -               reduce using rule 70 (fator -> FALSE .)
    EQUALS          reduce using rule 70 (fator -> FALSE .)
    NOT_EQUALS      reduce using rule 70 (fator -> FALSE .)
    LESS_THAN       reduce using rule 70 (fator -> FALSE .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 70 (fator -> FALSE .)
    GREATER_THAN    reduce using rule 70 (fator -> FALSE .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 70 (fator -> FALSE .)
    THEN            reduce using rule 70 (fator -> FALSE .)
    OR              reduce using rule 70 (fator -> FALSE .)
    AND             reduce using rule 70 (fator -> FALSE .)
    DO              reduce using rule 70 (fator -> FALSE .)
    END             reduce using rule 70 (fator -> FALSE .)
    ;               reduce using rule 70 (fator -> FALSE .)
    ELSE            reduce using rule 70 (fator -> FALSE .)
    ]               reduce using rule 70 (fator -> FALSE .)
    )               reduce using rule 70 (fator -> FALSE .)
    ,               reduce using rule 70 (fator -> FALSE .)
    TO              reduce using rule 70 (fator -> FALSE .)
    DOWNTO          reduce using rule 70 (fator -> FALSE .)


state 56

    (71) fator -> ( . expressao )
    (51) expressao -> . expressao OR expressao
    (52) expressao -> . expressao AND expressao
    (54) expressao -> . expressao_simples operador_relacional expressao_simples
    (55) expressao -> . expressao_simples
    (56) expressao_simples -> . termo
    (57) expressao_simples -> . expressao_simples + termo
    (58) expressao_simples -> . expressao_simples - termo
    (59) termo -> . fator
    (60) termo -> . termo * fator
    (61) termo -> . termo / fator
    (62) termo -> . termo DIV fator
    (63) termo -> . termo MOD fator
    (53) fator -> . NOT fator
    (64) fator -> . - fator
    (65) fator -> . ID [ expressao ]
    (66) fator -> . NUMBER
    (67) fator -> . STRING_LITERAL
    (68) fator -> . ID
    (69) fator -> . TRUE
    (70) fator -> . FALSE
    (71) fator -> . ( expressao )
    (72) fator -> . ID ( expressao )

    NOT             shift and go to state 50
    -               shift and go to state 48
    ID              shift and go to state 51
    NUMBER          shift and go to state 52
    STRING_LITERAL  shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    (               shift and go to state 56

    expressao                      shift and go to state 94
    expressao_simples              shift and go to state 46
    termo                          shift and go to state 47
    fator                          shift and go to state 49

state 57

    (45) while_statement -> WHILE expressao . DO instrucao
    (51) expressao -> expressao . OR expressao
    (52) expressao -> expressao . AND expressao

    DO              shift and go to state 95
    OR              shift and go to state 75
    AND             shift and go to state 76


state 58

    (46) for_statement -> FOR ID . ASSIGN expressao TO expressao DO instrucao
    (47) for_statement -> FOR ID . ASSIGN expressao DOWNTO expressao DO instrucao

    ASSIGN          shift and go to state 96


state 59

    (13) declaracoes_variaveis -> VAR declaracoes .

    BEGIN           reduce using rule 13 (declaracoes_variaveis -> VAR declaracoes .)


state 60

    (15) declaracoes -> declaracao .
    (16) declaracoes -> declaracao . declaracoes
    (15) declaracoes -> . declaracao
    (16) declaracoes -> . declaracao declaracoes
    (17) declaracao -> . lista_id : tipo ;
    (18) lista_id -> . ID
    (19) lista_id -> . lista_id , ID

    BEGIN           reduce using rule 15 (declaracoes -> declaracao .)
    ID              shift and go to state 62

    declaracao                     shift and go to state 60
    declaracoes                    shift and go to state 97
    lista_id                       shift and go to state 61

state 61

    (17) declaracao -> lista_id . : tipo ;
    (19) lista_id -> lista_id . , ID

    :               shift and go to state 98
    ,               shift and go to state 99


state 62

    (18) lista_id -> ID .

    :               reduce using rule 18 (lista_id -> ID .)
    ,               reduce using rule 18 (lista_id -> ID .)


state 63

    (8) funcoes -> funcao funcoes .

    VAR             reduce using rule 8 (funcoes -> funcao funcoes .)
    BEGIN           reduce using rule 8 (funcoes -> funcao funcoes .)


state 64

    (9) funcao -> ID ( . parametros ) : tipo ; bloco_funcao ;
    (11) parametros -> . lista_id : tipo
    (12) parametros -> . lista_id : tipo ; parametros
    (18) lista_id -> . ID
    (19) lista_id -> . lista_id , ID

    ID              shift and go to state 62

    parametros                     shift and go to state 100
    lista_id                       shift and go to state 101

state 65

    (48) bloco -> BEGIN lista_instrucoes END .

    END             reduce using rule 48 (bloco -> BEGIN lista_instrucoes END .)
    ;               reduce using rule 48 (bloco -> BEGIN lista_instrucoes END .)
    ELSE            reduce using rule 48 (bloco -> BEGIN lista_instrucoes END .)


state 66

    (28) lista_instrucoes -> lista_instrucoes ; instrucao .

    END             reduce using rule 28 (lista_instrucoes -> lista_instrucoes ; instrucao .)
    ;               reduce using rule 28 (lista_instrucoes -> lista_instrucoes ; instrucao .)


state 67

    (37) atribuicao -> ID ASSIGN expressao .
    (51) expressao -> expressao . OR expressao
    (52) expressao -> expressao . AND expressao

    END             reduce using rule 37 (atribuicao -> ID ASSIGN expressao .)
    ;               reduce using rule 37 (atribuicao -> ID ASSIGN expressao .)
    ELSE            reduce using rule 37 (atribuicao -> ID ASSIGN expressao .)
    OR              shift and go to state 75
    AND             shift and go to state 76


state 68

    (38) atribuicao -> ID [ expressao . ] ASSIGN expressao
    (51) expressao -> expressao . OR expressao
    (52) expressao -> expressao . AND expressao

    ]               shift and go to state 102
    OR              shift and go to state 75
    AND             shift and go to state 76


state 69

    (39) leitura -> READ ( expressao_simples . )
    (57) expressao_simples -> expressao_simples . + termo
    (58) expressao_simples -> expressao_simples . - termo

    )               shift and go to state 103
    +               shift and go to state 78
    -               shift and go to state 79


state 70

    (40) leitura -> READLN ( expressao_simples . )
    (57) expressao_simples -> expressao_simples . + termo
    (58) expressao_simples -> expressao_simples . - termo

    )               shift and go to state 104
    +               shift and go to state 78
    -               shift and go to state 79


state 71

    (41) escrita -> WRITE ( lista_expressao . )
    (50) lista_expressao -> lista_expressao . , expressao

    )               shift and go to state 105
    ,               shift and go to state 106


state 72

    (49) lista_expressao -> expressao .
    (51) expressao -> expressao . OR expressao
    (52) expressao -> expressao . AND expressao

    )               reduce using rule 49 (lista_expressao -> expressao .)
    ,               reduce using rule 49 (lista_expressao -> expressao .)
    OR              shift and go to state 75
    AND             shift and go to state 76


state 73

    (42) escrita -> WRITELN ( lista_expressao . )
    (50) lista_expressao -> lista_expressao . , expressao

    )               shift and go to state 107
    ,               shift and go to state 106


state 74

    (43) if_statement -> IF expressao THEN . instrucao ELSE instrucao
    (44) if_statement -> IF expressao THEN . instrucao
    (29) instrucao -> . atribuicao
    (30) instrucao -> . leitura
    (31) instrucao -> . escrita
    (32) instrucao -> . if_statement
    (33) instrucao -> . while_statement
    (34) instrucao -> . for_statement
    (35) instrucao -> . bloco
    (36) instrucao -> .
    (37) atribuicao -> . ID ASSIGN expressao
    (38) atribuicao -> . ID [ expressao ] ASSIGN expressao
    (39) leitura -> . READ ( expressao_simples )
    (40) leitura -> . READLN ( expressao_simples )
    (41) escrita -> . WRITE ( lista_expressao )
    (42) escrita -> . WRITELN ( lista_expressao )
    (43) if_statement -> . IF expressao THEN instrucao ELSE instrucao
    (44) if_statement -> . IF expressao THEN instrucao
    (45) while_statement -> . WHILE expressao DO instrucao
    (46) for_statement -> . FOR ID ASSIGN expressao TO expressao DO instrucao
    (47) for_statement -> . FOR ID ASSIGN expressao DOWNTO expressao DO instrucao
    (48) bloco -> . BEGIN lista_instrucoes END

    ELSE            reduce using rule 36 (instrucao -> .)
    END             reduce using rule 36 (instrucao -> .)
    ;               reduce using rule 36 (instrucao -> .)
    ID              shift and go to state 22
    READ            shift and go to state 23
    READLN          shift and go to state 24
    WRITE           shift and go to state 25
    WRITELN         shift and go to state 26
    IF              shift and go to state 27
    WHILE           shift and go to state 28
    FOR             shift and go to state 29
    BEGIN           shift and go to state 12

    instrucao                      shift and go to state 108
    atribuicao                     shift and go to state 15
    leitura                        shift and go to state 16
    escrita                        shift and go to state 17
    if_statement                   shift and go to state 18
    while_statement                shift and go to state 19
    for_statement                  shift and go to state 20
    bloco                          shift and go to state 21

state 75

    (51) expressao -> expressao OR . expressao
    (51) expressao -> . expressao OR expressao
    (52) expressao -> . expressao AND expressao
    (54) expressao -> . expressao_simples operador_relacional expressao_simples
    (55) expressao -> . expressao_simples
    (56) expressao_simples -> . termo
    (57) expressao_simples -> . expressao_simples + termo
    (58) expressao_simples -> . expressao_simples - termo
    (59) termo -> . fator
    (60) termo -> . termo * fator
    (61) termo -> . termo / fator
    (62) termo -> . termo DIV fator
    (63) termo -> . termo MOD fator
    (53) fator -> . NOT fator
    (64) fator -> . - fator
    (65) fator -> . ID [ expressao ]
    (66) fator -> . NUMBER
    (67) fator -> . STRING_LITERAL
    (68) fator -> . ID
    (69) fator -> . TRUE
    (70) fator -> . FALSE
    (71) fator -> . ( expressao )
    (72) fator -> . ID ( expressao )

    NOT             shift and go to state 50
    -               shift and go to state 48
    ID              shift and go to state 51
    NUMBER          shift and go to state 52
    STRING_LITERAL  shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    (               shift and go to state 56

    expressao                      shift and go to state 109
    expressao_simples              shift and go to state 46
    termo                          shift and go to state 47
    fator                          shift and go to state 49

state 76

    (52) expressao -> expressao AND . expressao
    (51) expressao -> . expressao OR expressao
    (52) expressao -> . expressao AND expressao
    (54) expressao -> . expressao_simples operador_relacional expressao_simples
    (55) expressao -> . expressao_simples
    (56) expressao_simples -> . termo
    (57) expressao_simples -> . expressao_simples + termo
    (58) expressao_simples -> . expressao_simples - termo
    (59) termo -> . fator
    (60) termo -> . termo * fator
    (61) termo -> . termo / fator
    (62) termo -> . termo DIV fator
    (63) termo -> . termo MOD fator
    (53) fator -> . NOT fator
    (64) fator -> . - fator
    (65) fator -> . ID [ expressao ]
    (66) fator -> . NUMBER
    (67) fator -> . STRING_LITERAL
    (68) fator -> . ID
    (69) fator -> . TRUE
    (70) fator -> . FALSE
    (71) fator -> . ( expressao )
    (72) fator -> . ID ( expressao )

    NOT             shift and go to state 50
    -               shift and go to state 48
    ID              shift and go to state 51
    NUMBER          shift and go to state 52
    STRING_LITERAL  shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    (               shift and go to state 56

    expressao                      shift and go to state 110
    expressao_simples              shift and go to state 46
    termo                          shift and go to state 47
    fator                          shift and go to state 49

state 77

    (54) expressao -> expressao_simples operador_relacional . expressao_simples
    (56) expressao_simples -> . termo
    (57) expressao_simples -> . expressao_simples + termo
    (58) expressao_simples -> . expressao_simples - termo
    (59) termo -> . fator
    (60) termo -> . termo * fator
    (61) termo -> . termo / fator
    (62) termo -> . termo DIV fator
    (63) termo -> . termo MOD fator
    (53) fator -> . NOT fator
    (64) fator -> . - fator
    (65) fator -> . ID [ expressao ]
    (66) fator -> . NUMBER
    (67) fator -> . STRING_LITERAL
    (68) fator -> . ID
    (69) fator -> . TRUE
    (70) fator -> . FALSE
    (71) fator -> . ( expressao )
    (72) fator -> . ID ( expressao )

    NOT             shift and go to state 50
    -               shift and go to state 48
    ID              shift and go to state 51
    NUMBER          shift and go to state 52
    STRING_LITERAL  shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    (               shift and go to state 56

    expressao_simples              shift and go to state 111
    termo                          shift and go to state 47
    fator                          shift and go to state 49

state 78

    (57) expressao_simples -> expressao_simples + . termo
    (59) termo -> . fator
    (60) termo -> . termo * fator
    (61) termo -> . termo / fator
    (62) termo -> . termo DIV fator
    (63) termo -> . termo MOD fator
    (53) fator -> . NOT fator
    (64) fator -> . - fator
    (65) fator -> . ID [ expressao ]
    (66) fator -> . NUMBER
    (67) fator -> . STRING_LITERAL
    (68) fator -> . ID
    (69) fator -> . TRUE
    (70) fator -> . FALSE
    (71) fator -> . ( expressao )
    (72) fator -> . ID ( expressao )

    NOT             shift and go to state 50
    -               shift and go to state 48
    ID              shift and go to state 51
    NUMBER          shift and go to state 52
    STRING_LITERAL  shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    (               shift and go to state 56

    termo                          shift and go to state 112
    fator                          shift and go to state 49

state 79

    (58) expressao_simples -> expressao_simples - . termo
    (59) termo -> . fator
    (60) termo -> . termo * fator
    (61) termo -> . termo / fator
    (62) termo -> . termo DIV fator
    (63) termo -> . termo MOD fator
    (53) fator -> . NOT fator
    (64) fator -> . - fator
    (65) fator -> . ID [ expressao ]
    (66) fator -> . NUMBER
    (67) fator -> . STRING_LITERAL
    (68) fator -> . ID
    (69) fator -> . TRUE
    (70) fator -> . FALSE
    (71) fator -> . ( expressao )
    (72) fator -> . ID ( expressao )

    NOT             shift and go to state 50
    -               shift and go to state 48
    ID              shift and go to state 51
    NUMBER          shift and go to state 52
    STRING_LITERAL  shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    (               shift and go to state 56

    termo                          shift and go to state 113
    fator                          shift and go to state 49

state 80

    (73) operador_relacional -> EQUALS .

    NOT             reduce using rule 73 (operador_relacional -> EQUALS .)
    -               reduce using rule 73 (operador_relacional -> EQUALS .)
    ID              reduce using rule 73 (operador_relacional -> EQUALS .)
    NUMBER          reduce using rule 73 (operador_relacional -> EQUALS .)
    STRING_LITERAL  reduce using rule 73 (operador_relacional -> EQUALS .)
    TRUE            reduce using rule 73 (operador_relacional -> EQUALS .)
    FALSE           reduce using rule 73 (operador_relacional -> EQUALS .)
    (               reduce using rule 73 (operador_relacional -> EQUALS .)


state 81

    (74) operador_relacional -> NOT_EQUALS .

    NOT             reduce using rule 74 (operador_relacional -> NOT_EQUALS .)
    -               reduce using rule 74 (operador_relacional -> NOT_EQUALS .)
    ID              reduce using rule 74 (operador_relacional -> NOT_EQUALS .)
    NUMBER          reduce using rule 74 (operador_relacional -> NOT_EQUALS .)
    STRING_LITERAL  reduce using rule 74 (operador_relacional -> NOT_EQUALS .)
    TRUE            reduce using rule 74 (operador_relacional -> NOT_EQUALS .)
    FALSE           reduce using rule 74 (operador_relacional -> NOT_EQUALS .)
    (               reduce using rule 74 (operador_relacional -> NOT_EQUALS .)


state 82

    (75) operador_relacional -> LESS_THAN .

    NOT             reduce using rule 75 (operador_relacional -> LESS_THAN .)
    -               reduce using rule 75 (operador_relacional -> LESS_THAN .)
    ID              reduce using rule 75 (operador_relacional -> LESS_THAN .)
    NUMBER          reduce using rule 75 (operador_relacional -> LESS_THAN .)
    STRING_LITERAL  reduce using rule 75 (operador_relacional -> LESS_THAN .)
    TRUE            reduce using rule 75 (operador_relacional -> LESS_THAN .)
    FALSE           reduce using rule 75 (operador_relacional -> LESS_THAN .)
    (               reduce using rule 75 (operador_relacional -> LESS_THAN .)


state 83

    (76) operador_relacional -> LESS_THAN_OR_EQUAL_TO .

    NOT             reduce using rule 76 (operador_relacional -> LESS_THAN_OR_EQUAL_TO .)
    -               reduce using rule 76 (operador_relacional -> LESS_THAN_OR_EQUAL_TO .)
    ID              reduce using rule 76 (operador_relacional -> LESS_THAN_OR_EQUAL_TO .)
    NUMBER          reduce using rule 76 (operador_relacional -> LESS_THAN_OR_EQUAL_TO .)
    STRING_LITERAL  reduce using rule 76 (operador_relacional -> LESS_THAN_OR_EQUAL_TO .)
    TRUE            reduce using rule 76 (operador_relacional -> LESS_THAN_OR_EQUAL_TO .)
    FALSE           reduce using rule 76 (operador_relacional -> LESS_THAN_OR_EQUAL_TO .)
    (               reduce using rule 76 (operador_relacional -> LESS_THAN_OR_EQUAL_TO .)


state 84

    (77) operador_relacional -> GREATER_THAN .

    NOT             reduce using rule 77 (operador_relacional -> GREATER_THAN .)
    -               reduce using rule 77 (operador_relacional -> GREATER_THAN .)
    ID              reduce using rule 77 (operador_relacional -> GREATER_THAN .)
    NUMBER          reduce using rule 77 (operador_relacional -> GREATER_THAN .)
    STRING_LITERAL  reduce using rule 77 (operador_relacional -> GREATER_THAN .)
    TRUE            reduce using rule 77 (operador_relacional -> GREATER_THAN .)
    FALSE           reduce using rule 77 (operador_relacional -> GREATER_THAN .)
    (               reduce using rule 77 (operador_relacional -> GREATER_THAN .)


state 85

    (78) operador_relacional -> GREATER_THAN_OR_EQUAL_TO .

    NOT             reduce using rule 78 (operador_relacional -> GREATER_THAN_OR_EQUAL_TO .)
    -               reduce using rule 78 (operador_relacional -> GREATER_THAN_OR_EQUAL_TO .)
    ID              reduce using rule 78 (operador_relacional -> GREATER_THAN_OR_EQUAL_TO .)
    NUMBER          reduce using rule 78 (operador_relacional -> GREATER_THAN_OR_EQUAL_TO .)
    STRING_LITERAL  reduce using rule 78 (operador_relacional -> GREATER_THAN_OR_EQUAL_TO .)
    TRUE            reduce using rule 78 (operador_relacional -> GREATER_THAN_OR_EQUAL_TO .)
    FALSE           reduce using rule 78 (operador_relacional -> GREATER_THAN_OR_EQUAL_TO .)
    (               reduce using rule 78 (operador_relacional -> GREATER_THAN_OR_EQUAL_TO .)


state 86

    (60) termo -> termo * . fator
    (53) fator -> . NOT fator
    (64) fator -> . - fator
    (65) fator -> . ID [ expressao ]
    (66) fator -> . NUMBER
    (67) fator -> . STRING_LITERAL
    (68) fator -> . ID
    (69) fator -> . TRUE
    (70) fator -> . FALSE
    (71) fator -> . ( expressao )
    (72) fator -> . ID ( expressao )

    NOT             shift and go to state 50
    -               shift and go to state 48
    ID              shift and go to state 51
    NUMBER          shift and go to state 52
    STRING_LITERAL  shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    (               shift and go to state 56

    fator                          shift and go to state 114

state 87

    (61) termo -> termo / . fator
    (53) fator -> . NOT fator
    (64) fator -> . - fator
    (65) fator -> . ID [ expressao ]
    (66) fator -> . NUMBER
    (67) fator -> . STRING_LITERAL
    (68) fator -> . ID
    (69) fator -> . TRUE
    (70) fator -> . FALSE
    (71) fator -> . ( expressao )
    (72) fator -> . ID ( expressao )

    NOT             shift and go to state 50
    -               shift and go to state 48
    ID              shift and go to state 51
    NUMBER          shift and go to state 52
    STRING_LITERAL  shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    (               shift and go to state 56

    fator                          shift and go to state 115

state 88

    (62) termo -> termo DIV . fator
    (53) fator -> . NOT fator
    (64) fator -> . - fator
    (65) fator -> . ID [ expressao ]
    (66) fator -> . NUMBER
    (67) fator -> . STRING_LITERAL
    (68) fator -> . ID
    (69) fator -> . TRUE
    (70) fator -> . FALSE
    (71) fator -> . ( expressao )
    (72) fator -> . ID ( expressao )

    NOT             shift and go to state 50
    -               shift and go to state 48
    ID              shift and go to state 51
    NUMBER          shift and go to state 52
    STRING_LITERAL  shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    (               shift and go to state 56

    fator                          shift and go to state 116

state 89

    (63) termo -> termo MOD . fator
    (53) fator -> . NOT fator
    (64) fator -> . - fator
    (65) fator -> . ID [ expressao ]
    (66) fator -> . NUMBER
    (67) fator -> . STRING_LITERAL
    (68) fator -> . ID
    (69) fator -> . TRUE
    (70) fator -> . FALSE
    (71) fator -> . ( expressao )
    (72) fator -> . ID ( expressao )

    NOT             shift and go to state 50
    -               shift and go to state 48
    ID              shift and go to state 51
    NUMBER          shift and go to state 52
    STRING_LITERAL  shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    (               shift and go to state 56

    fator                          shift and go to state 117

state 90

    (64) fator -> - fator .

    *               reduce using rule 64 (fator -> - fator .)
    /               reduce using rule 64 (fator -> - fator .)
    DIV             reduce using rule 64 (fator -> - fator .)
    MOD             reduce using rule 64 (fator -> - fator .)
    +               reduce using rule 64 (fator -> - fator .)
    -               reduce using rule 64 (fator -> - fator .)
    EQUALS          reduce using rule 64 (fator -> - fator .)
    NOT_EQUALS      reduce using rule 64 (fator -> - fator .)
    LESS_THAN       reduce using rule 64 (fator -> - fator .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 64 (fator -> - fator .)
    GREATER_THAN    reduce using rule 64 (fator -> - fator .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 64 (fator -> - fator .)
    THEN            reduce using rule 64 (fator -> - fator .)
    OR              reduce using rule 64 (fator -> - fator .)
    AND             reduce using rule 64 (fator -> - fator .)
    DO              reduce using rule 64 (fator -> - fator .)
    END             reduce using rule 64 (fator -> - fator .)
    ;               reduce using rule 64 (fator -> - fator .)
    ELSE            reduce using rule 64 (fator -> - fator .)
    ]               reduce using rule 64 (fator -> - fator .)
    )               reduce using rule 64 (fator -> - fator .)
    ,               reduce using rule 64 (fator -> - fator .)
    TO              reduce using rule 64 (fator -> - fator .)
    DOWNTO          reduce using rule 64 (fator -> - fator .)


state 91

    (53) fator -> NOT fator .

    *               reduce using rule 53 (fator -> NOT fator .)
    /               reduce using rule 53 (fator -> NOT fator .)
    DIV             reduce using rule 53 (fator -> NOT fator .)
    MOD             reduce using rule 53 (fator -> NOT fator .)
    +               reduce using rule 53 (fator -> NOT fator .)
    -               reduce using rule 53 (fator -> NOT fator .)
    EQUALS          reduce using rule 53 (fator -> NOT fator .)
    NOT_EQUALS      reduce using rule 53 (fator -> NOT fator .)
    LESS_THAN       reduce using rule 53 (fator -> NOT fator .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 53 (fator -> NOT fator .)
    GREATER_THAN    reduce using rule 53 (fator -> NOT fator .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 53 (fator -> NOT fator .)
    THEN            reduce using rule 53 (fator -> NOT fator .)
    OR              reduce using rule 53 (fator -> NOT fator .)
    AND             reduce using rule 53 (fator -> NOT fator .)
    DO              reduce using rule 53 (fator -> NOT fator .)
    END             reduce using rule 53 (fator -> NOT fator .)
    ;               reduce using rule 53 (fator -> NOT fator .)
    ELSE            reduce using rule 53 (fator -> NOT fator .)
    ]               reduce using rule 53 (fator -> NOT fator .)
    )               reduce using rule 53 (fator -> NOT fator .)
    ,               reduce using rule 53 (fator -> NOT fator .)
    TO              reduce using rule 53 (fator -> NOT fator .)
    DOWNTO          reduce using rule 53 (fator -> NOT fator .)


state 92

    (65) fator -> ID [ . expressao ]
    (51) expressao -> . expressao OR expressao
    (52) expressao -> . expressao AND expressao
    (54) expressao -> . expressao_simples operador_relacional expressao_simples
    (55) expressao -> . expressao_simples
    (56) expressao_simples -> . termo
    (57) expressao_simples -> . expressao_simples + termo
    (58) expressao_simples -> . expressao_simples - termo
    (59) termo -> . fator
    (60) termo -> . termo * fator
    (61) termo -> . termo / fator
    (62) termo -> . termo DIV fator
    (63) termo -> . termo MOD fator
    (53) fator -> . NOT fator
    (64) fator -> . - fator
    (65) fator -> . ID [ expressao ]
    (66) fator -> . NUMBER
    (67) fator -> . STRING_LITERAL
    (68) fator -> . ID
    (69) fator -> . TRUE
    (70) fator -> . FALSE
    (71) fator -> . ( expressao )
    (72) fator -> . ID ( expressao )

    NOT             shift and go to state 50
    -               shift and go to state 48
    ID              shift and go to state 51
    NUMBER          shift and go to state 52
    STRING_LITERAL  shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    (               shift and go to state 56

    expressao                      shift and go to state 118
    expressao_simples              shift and go to state 46
    termo                          shift and go to state 47
    fator                          shift and go to state 49

state 93

    (72) fator -> ID ( . expressao )
    (51) expressao -> . expressao OR expressao
    (52) expressao -> . expressao AND expressao
    (54) expressao -> . expressao_simples operador_relacional expressao_simples
    (55) expressao -> . expressao_simples
    (56) expressao_simples -> . termo
    (57) expressao_simples -> . expressao_simples + termo
    (58) expressao_simples -> . expressao_simples - termo
    (59) termo -> . fator
    (60) termo -> . termo * fator
    (61) termo -> . termo / fator
    (62) termo -> . termo DIV fator
    (63) termo -> . termo MOD fator
    (53) fator -> . NOT fator
    (64) fator -> . - fator
    (65) fator -> . ID [ expressao ]
    (66) fator -> . NUMBER
    (67) fator -> . STRING_LITERAL
    (68) fator -> . ID
    (69) fator -> . TRUE
    (70) fator -> . FALSE
    (71) fator -> . ( expressao )
    (72) fator -> . ID ( expressao )

    NOT             shift and go to state 50
    -               shift and go to state 48
    ID              shift and go to state 51
    NUMBER          shift and go to state 52
    STRING_LITERAL  shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    (               shift and go to state 56

    expressao                      shift and go to state 119
    expressao_simples              shift and go to state 46
    termo                          shift and go to state 47
    fator                          shift and go to state 49

state 94

    (71) fator -> ( expressao . )
    (51) expressao -> expressao . OR expressao
    (52) expressao -> expressao . AND expressao

    )               shift and go to state 120
    OR              shift and go to state 75
    AND             shift and go to state 76


state 95

    (45) while_statement -> WHILE expressao DO . instrucao
    (29) instrucao -> . atribuicao
    (30) instrucao -> . leitura
    (31) instrucao -> . escrita
    (32) instrucao -> . if_statement
    (33) instrucao -> . while_statement
    (34) instrucao -> . for_statement
    (35) instrucao -> . bloco
    (36) instrucao -> .
    (37) atribuicao -> . ID ASSIGN expressao
    (38) atribuicao -> . ID [ expressao ] ASSIGN expressao
    (39) leitura -> . READ ( expressao_simples )
    (40) leitura -> . READLN ( expressao_simples )
    (41) escrita -> . WRITE ( lista_expressao )
    (42) escrita -> . WRITELN ( lista_expressao )
    (43) if_statement -> . IF expressao THEN instrucao ELSE instrucao
    (44) if_statement -> . IF expressao THEN instrucao
    (45) while_statement -> . WHILE expressao DO instrucao
    (46) for_statement -> . FOR ID ASSIGN expressao TO expressao DO instrucao
    (47) for_statement -> . FOR ID ASSIGN expressao DOWNTO expressao DO instrucao
    (48) bloco -> . BEGIN lista_instrucoes END

    ELSE            reduce using rule 36 (instrucao -> .)
    END             reduce using rule 36 (instrucao -> .)
    ;               reduce using rule 36 (instrucao -> .)
    ID              shift and go to state 22
    READ            shift and go to state 23
    READLN          shift and go to state 24
    WRITE           shift and go to state 25
    WRITELN         shift and go to state 26
    IF              shift and go to state 27
    WHILE           shift and go to state 28
    FOR             shift and go to state 29
    BEGIN           shift and go to state 12

    instrucao                      shift and go to state 121
    atribuicao                     shift and go to state 15
    leitura                        shift and go to state 16
    escrita                        shift and go to state 17
    if_statement                   shift and go to state 18
    while_statement                shift and go to state 19
    for_statement                  shift and go to state 20
    bloco                          shift and go to state 21

state 96

    (46) for_statement -> FOR ID ASSIGN . expressao TO expressao DO instrucao
    (47) for_statement -> FOR ID ASSIGN . expressao DOWNTO expressao DO instrucao
    (51) expressao -> . expressao OR expressao
    (52) expressao -> . expressao AND expressao
    (54) expressao -> . expressao_simples operador_relacional expressao_simples
    (55) expressao -> . expressao_simples
    (56) expressao_simples -> . termo
    (57) expressao_simples -> . expressao_simples + termo
    (58) expressao_simples -> . expressao_simples - termo
    (59) termo -> . fator
    (60) termo -> . termo * fator
    (61) termo -> . termo / fator
    (62) termo -> . termo DIV fator
    (63) termo -> . termo MOD fator
    (53) fator -> . NOT fator
    (64) fator -> . - fator
    (65) fator -> . ID [ expressao ]
    (66) fator -> . NUMBER
    (67) fator -> . STRING_LITERAL
    (68) fator -> . ID
    (69) fator -> . TRUE
    (70) fator -> . FALSE
    (71) fator -> . ( expressao )
    (72) fator -> . ID ( expressao )

    NOT             shift and go to state 50
    -               shift and go to state 48
    ID              shift and go to state 51
    NUMBER          shift and go to state 52
    STRING_LITERAL  shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    (               shift and go to state 56

    expressao                      shift and go to state 122
    expressao_simples              shift and go to state 46
    termo                          shift and go to state 47
    fator                          shift and go to state 49

state 97

    (16) declaracoes -> declaracao declaracoes .

    BEGIN           reduce using rule 16 (declaracoes -> declaracao declaracoes .)


state 98

    (17) declaracao -> lista_id : . tipo ;
    (20) tipo -> . INTEGER
    (21) tipo -> . REAL
    (22) tipo -> . BOOLEAN
    (23) tipo -> . CHAR
    (24) tipo -> . STRING
    (25) tipo -> . ARRAY [ NUMBER RANGE NUMBER ] OF tipo

    INTEGER         shift and go to state 124
    REAL            shift and go to state 125
    BOOLEAN         shift and go to state 126
    CHAR            shift and go to state 127
    STRING          shift and go to state 128
    ARRAY           shift and go to state 129

    tipo                           shift and go to state 123

state 99

    (19) lista_id -> lista_id , . ID

    ID              shift and go to state 130


state 100

    (9) funcao -> ID ( parametros . ) : tipo ; bloco_funcao ;

    )               shift and go to state 131


state 101

    (11) parametros -> lista_id . : tipo
    (12) parametros -> lista_id . : tipo ; parametros
    (19) lista_id -> lista_id . , ID

    :               shift and go to state 132
    ,               shift and go to state 99


state 102

    (38) atribuicao -> ID [ expressao ] . ASSIGN expressao

    ASSIGN          shift and go to state 133


state 103

    (39) leitura -> READ ( expressao_simples ) .

    END             reduce using rule 39 (leitura -> READ ( expressao_simples ) .)
    ;               reduce using rule 39 (leitura -> READ ( expressao_simples ) .)
    ELSE            reduce using rule 39 (leitura -> READ ( expressao_simples ) .)


state 104

    (40) leitura -> READLN ( expressao_simples ) .

    END             reduce using rule 40 (leitura -> READLN ( expressao_simples ) .)
    ;               reduce using rule 40 (leitura -> READLN ( expressao_simples ) .)
    ELSE            reduce using rule 40 (leitura -> READLN ( expressao_simples ) .)


state 105

    (41) escrita -> WRITE ( lista_expressao ) .

    END             reduce using rule 41 (escrita -> WRITE ( lista_expressao ) .)
    ;               reduce using rule 41 (escrita -> WRITE ( lista_expressao ) .)
    ELSE            reduce using rule 41 (escrita -> WRITE ( lista_expressao ) .)


state 106

    (50) lista_expressao -> lista_expressao , . expressao
    (51) expressao -> . expressao OR expressao
    (52) expressao -> . expressao AND expressao
    (54) expressao -> . expressao_simples operador_relacional expressao_simples
    (55) expressao -> . expressao_simples
    (56) expressao_simples -> . termo
    (57) expressao_simples -> . expressao_simples + termo
    (58) expressao_simples -> . expressao_simples - termo
    (59) termo -> . fator
    (60) termo -> . termo * fator
    (61) termo -> . termo / fator
    (62) termo -> . termo DIV fator
    (63) termo -> . termo MOD fator
    (53) fator -> . NOT fator
    (64) fator -> . - fator
    (65) fator -> . ID [ expressao ]
    (66) fator -> . NUMBER
    (67) fator -> . STRING_LITERAL
    (68) fator -> . ID
    (69) fator -> . TRUE
    (70) fator -> . FALSE
    (71) fator -> . ( expressao )
    (72) fator -> . ID ( expressao )

    NOT             shift and go to state 50
    -               shift and go to state 48
    ID              shift and go to state 51
    NUMBER          shift and go to state 52
    STRING_LITERAL  shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    (               shift and go to state 56

    expressao                      shift and go to state 134
    expressao_simples              shift and go to state 46
    termo                          shift and go to state 47
    fator                          shift and go to state 49

state 107

    (42) escrita -> WRITELN ( lista_expressao ) .

    END             reduce using rule 42 (escrita -> WRITELN ( lista_expressao ) .)
    ;               reduce using rule 42 (escrita -> WRITELN ( lista_expressao ) .)
    ELSE            reduce using rule 42 (escrita -> WRITELN ( lista_expressao ) .)


state 108

    (43) if_statement -> IF expressao THEN instrucao . ELSE instrucao
    (44) if_statement -> IF expressao THEN instrucao .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 135
    END             reduce using rule 44 (if_statement -> IF expressao THEN instrucao .)
    ;               reduce using rule 44 (if_statement -> IF expressao THEN instrucao .)

  ! ELSE            [ reduce using rule 44 (if_statement -> IF expressao THEN instrucao .) ]


state 109

    (51) expressao -> expressao OR expressao .
    (51) expressao -> expressao . OR expressao
    (52) expressao -> expressao . AND expressao

    THEN            reduce using rule 51 (expressao -> expressao OR expressao .)
    OR              reduce using rule 51 (expressao -> expressao OR expressao .)
    DO              reduce using rule 51 (expressao -> expressao OR expressao .)
    END             reduce using rule 51 (expressao -> expressao OR expressao .)
    ;               reduce using rule 51 (expressao -> expressao OR expressao .)
    ELSE            reduce using rule 51 (expressao -> expressao OR expressao .)
    ]               reduce using rule 51 (expressao -> expressao OR expressao .)
    )               reduce using rule 51 (expressao -> expressao OR expressao .)
    ,               reduce using rule 51 (expressao -> expressao OR expressao .)
    TO              reduce using rule 51 (expressao -> expressao OR expressao .)
    DOWNTO          reduce using rule 51 (expressao -> expressao OR expressao .)
    AND             shift and go to state 76

  ! AND             [ reduce using rule 51 (expressao -> expressao OR expressao .) ]
  ! OR              [ shift and go to state 75 ]


state 110

    (52) expressao -> expressao AND expressao .
    (51) expressao -> expressao . OR expressao
    (52) expressao -> expressao . AND expressao

    THEN            reduce using rule 52 (expressao -> expressao AND expressao .)
    OR              reduce using rule 52 (expressao -> expressao AND expressao .)
    AND             reduce using rule 52 (expressao -> expressao AND expressao .)
    DO              reduce using rule 52 (expressao -> expressao AND expressao .)
    END             reduce using rule 52 (expressao -> expressao AND expressao .)
    ;               reduce using rule 52 (expressao -> expressao AND expressao .)
    ELSE            reduce using rule 52 (expressao -> expressao AND expressao .)
    ]               reduce using rule 52 (expressao -> expressao AND expressao .)
    )               reduce using rule 52 (expressao -> expressao AND expressao .)
    ,               reduce using rule 52 (expressao -> expressao AND expressao .)
    TO              reduce using rule 52 (expressao -> expressao AND expressao .)
    DOWNTO          reduce using rule 52 (expressao -> expressao AND expressao .)

  ! OR              [ shift and go to state 75 ]
  ! AND             [ shift and go to state 76 ]


state 111

    (54) expressao -> expressao_simples operador_relacional expressao_simples .
    (57) expressao_simples -> expressao_simples . + termo
    (58) expressao_simples -> expressao_simples . - termo

    THEN            reduce using rule 54 (expressao -> expressao_simples operador_relacional expressao_simples .)
    OR              reduce using rule 54 (expressao -> expressao_simples operador_relacional expressao_simples .)
    AND             reduce using rule 54 (expressao -> expressao_simples operador_relacional expressao_simples .)
    DO              reduce using rule 54 (expressao -> expressao_simples operador_relacional expressao_simples .)
    END             reduce using rule 54 (expressao -> expressao_simples operador_relacional expressao_simples .)
    ;               reduce using rule 54 (expressao -> expressao_simples operador_relacional expressao_simples .)
    ELSE            reduce using rule 54 (expressao -> expressao_simples operador_relacional expressao_simples .)
    ]               reduce using rule 54 (expressao -> expressao_simples operador_relacional expressao_simples .)
    )               reduce using rule 54 (expressao -> expressao_simples operador_relacional expressao_simples .)
    ,               reduce using rule 54 (expressao -> expressao_simples operador_relacional expressao_simples .)
    TO              reduce using rule 54 (expressao -> expressao_simples operador_relacional expressao_simples .)
    DOWNTO          reduce using rule 54 (expressao -> expressao_simples operador_relacional expressao_simples .)
    +               shift and go to state 78
    -               shift and go to state 79


state 112

    (57) expressao_simples -> expressao_simples + termo .
    (60) termo -> termo . * fator
    (61) termo -> termo . / fator
    (62) termo -> termo . DIV fator
    (63) termo -> termo . MOD fator

    +               reduce using rule 57 (expressao_simples -> expressao_simples + termo .)
    -               reduce using rule 57 (expressao_simples -> expressao_simples + termo .)
    EQUALS          reduce using rule 57 (expressao_simples -> expressao_simples + termo .)
    NOT_EQUALS      reduce using rule 57 (expressao_simples -> expressao_simples + termo .)
    LESS_THAN       reduce using rule 57 (expressao_simples -> expressao_simples + termo .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 57 (expressao_simples -> expressao_simples + termo .)
    GREATER_THAN    reduce using rule 57 (expressao_simples -> expressao_simples + termo .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 57 (expressao_simples -> expressao_simples + termo .)
    THEN            reduce using rule 57 (expressao_simples -> expressao_simples + termo .)
    OR              reduce using rule 57 (expressao_simples -> expressao_simples + termo .)
    AND             reduce using rule 57 (expressao_simples -> expressao_simples + termo .)
    DO              reduce using rule 57 (expressao_simples -> expressao_simples + termo .)
    END             reduce using rule 57 (expressao_simples -> expressao_simples + termo .)
    ;               reduce using rule 57 (expressao_simples -> expressao_simples + termo .)
    ELSE            reduce using rule 57 (expressao_simples -> expressao_simples + termo .)
    ]               reduce using rule 57 (expressao_simples -> expressao_simples + termo .)
    )               reduce using rule 57 (expressao_simples -> expressao_simples + termo .)
    ,               reduce using rule 57 (expressao_simples -> expressao_simples + termo .)
    TO              reduce using rule 57 (expressao_simples -> expressao_simples + termo .)
    DOWNTO          reduce using rule 57 (expressao_simples -> expressao_simples + termo .)
    *               shift and go to state 86
    /               shift and go to state 87
    DIV             shift and go to state 88
    MOD             shift and go to state 89


state 113

    (58) expressao_simples -> expressao_simples - termo .
    (60) termo -> termo . * fator
    (61) termo -> termo . / fator
    (62) termo -> termo . DIV fator
    (63) termo -> termo . MOD fator

    +               reduce using rule 58 (expressao_simples -> expressao_simples - termo .)
    -               reduce using rule 58 (expressao_simples -> expressao_simples - termo .)
    EQUALS          reduce using rule 58 (expressao_simples -> expressao_simples - termo .)
    NOT_EQUALS      reduce using rule 58 (expressao_simples -> expressao_simples - termo .)
    LESS_THAN       reduce using rule 58 (expressao_simples -> expressao_simples - termo .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 58 (expressao_simples -> expressao_simples - termo .)
    GREATER_THAN    reduce using rule 58 (expressao_simples -> expressao_simples - termo .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 58 (expressao_simples -> expressao_simples - termo .)
    THEN            reduce using rule 58 (expressao_simples -> expressao_simples - termo .)
    OR              reduce using rule 58 (expressao_simples -> expressao_simples - termo .)
    AND             reduce using rule 58 (expressao_simples -> expressao_simples - termo .)
    DO              reduce using rule 58 (expressao_simples -> expressao_simples - termo .)
    END             reduce using rule 58 (expressao_simples -> expressao_simples - termo .)
    ;               reduce using rule 58 (expressao_simples -> expressao_simples - termo .)
    ELSE            reduce using rule 58 (expressao_simples -> expressao_simples - termo .)
    ]               reduce using rule 58 (expressao_simples -> expressao_simples - termo .)
    )               reduce using rule 58 (expressao_simples -> expressao_simples - termo .)
    ,               reduce using rule 58 (expressao_simples -> expressao_simples - termo .)
    TO              reduce using rule 58 (expressao_simples -> expressao_simples - termo .)
    DOWNTO          reduce using rule 58 (expressao_simples -> expressao_simples - termo .)
    *               shift and go to state 86
    /               shift and go to state 87
    DIV             shift and go to state 88
    MOD             shift and go to state 89


state 114

    (60) termo -> termo * fator .

    *               reduce using rule 60 (termo -> termo * fator .)
    /               reduce using rule 60 (termo -> termo * fator .)
    DIV             reduce using rule 60 (termo -> termo * fator .)
    MOD             reduce using rule 60 (termo -> termo * fator .)
    +               reduce using rule 60 (termo -> termo * fator .)
    -               reduce using rule 60 (termo -> termo * fator .)
    EQUALS          reduce using rule 60 (termo -> termo * fator .)
    NOT_EQUALS      reduce using rule 60 (termo -> termo * fator .)
    LESS_THAN       reduce using rule 60 (termo -> termo * fator .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 60 (termo -> termo * fator .)
    GREATER_THAN    reduce using rule 60 (termo -> termo * fator .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 60 (termo -> termo * fator .)
    THEN            reduce using rule 60 (termo -> termo * fator .)
    OR              reduce using rule 60 (termo -> termo * fator .)
    AND             reduce using rule 60 (termo -> termo * fator .)
    DO              reduce using rule 60 (termo -> termo * fator .)
    END             reduce using rule 60 (termo -> termo * fator .)
    ;               reduce using rule 60 (termo -> termo * fator .)
    ELSE            reduce using rule 60 (termo -> termo * fator .)
    ]               reduce using rule 60 (termo -> termo * fator .)
    )               reduce using rule 60 (termo -> termo * fator .)
    ,               reduce using rule 60 (termo -> termo * fator .)
    TO              reduce using rule 60 (termo -> termo * fator .)
    DOWNTO          reduce using rule 60 (termo -> termo * fator .)


state 115

    (61) termo -> termo / fator .

    *               reduce using rule 61 (termo -> termo / fator .)
    /               reduce using rule 61 (termo -> termo / fator .)
    DIV             reduce using rule 61 (termo -> termo / fator .)
    MOD             reduce using rule 61 (termo -> termo / fator .)
    +               reduce using rule 61 (termo -> termo / fator .)
    -               reduce using rule 61 (termo -> termo / fator .)
    EQUALS          reduce using rule 61 (termo -> termo / fator .)
    NOT_EQUALS      reduce using rule 61 (termo -> termo / fator .)
    LESS_THAN       reduce using rule 61 (termo -> termo / fator .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 61 (termo -> termo / fator .)
    GREATER_THAN    reduce using rule 61 (termo -> termo / fator .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 61 (termo -> termo / fator .)
    THEN            reduce using rule 61 (termo -> termo / fator .)
    OR              reduce using rule 61 (termo -> termo / fator .)
    AND             reduce using rule 61 (termo -> termo / fator .)
    DO              reduce using rule 61 (termo -> termo / fator .)
    END             reduce using rule 61 (termo -> termo / fator .)
    ;               reduce using rule 61 (termo -> termo / fator .)
    ELSE            reduce using rule 61 (termo -> termo / fator .)
    ]               reduce using rule 61 (termo -> termo / fator .)
    )               reduce using rule 61 (termo -> termo / fator .)
    ,               reduce using rule 61 (termo -> termo / fator .)
    TO              reduce using rule 61 (termo -> termo / fator .)
    DOWNTO          reduce using rule 61 (termo -> termo / fator .)


state 116

    (62) termo -> termo DIV fator .

    *               reduce using rule 62 (termo -> termo DIV fator .)
    /               reduce using rule 62 (termo -> termo DIV fator .)
    DIV             reduce using rule 62 (termo -> termo DIV fator .)
    MOD             reduce using rule 62 (termo -> termo DIV fator .)
    +               reduce using rule 62 (termo -> termo DIV fator .)
    -               reduce using rule 62 (termo -> termo DIV fator .)
    EQUALS          reduce using rule 62 (termo -> termo DIV fator .)
    NOT_EQUALS      reduce using rule 62 (termo -> termo DIV fator .)
    LESS_THAN       reduce using rule 62 (termo -> termo DIV fator .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 62 (termo -> termo DIV fator .)
    GREATER_THAN    reduce using rule 62 (termo -> termo DIV fator .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 62 (termo -> termo DIV fator .)
    THEN            reduce using rule 62 (termo -> termo DIV fator .)
    OR              reduce using rule 62 (termo -> termo DIV fator .)
    AND             reduce using rule 62 (termo -> termo DIV fator .)
    DO              reduce using rule 62 (termo -> termo DIV fator .)
    END             reduce using rule 62 (termo -> termo DIV fator .)
    ;               reduce using rule 62 (termo -> termo DIV fator .)
    ELSE            reduce using rule 62 (termo -> termo DIV fator .)
    ]               reduce using rule 62 (termo -> termo DIV fator .)
    )               reduce using rule 62 (termo -> termo DIV fator .)
    ,               reduce using rule 62 (termo -> termo DIV fator .)
    TO              reduce using rule 62 (termo -> termo DIV fator .)
    DOWNTO          reduce using rule 62 (termo -> termo DIV fator .)


state 117

    (63) termo -> termo MOD fator .

    *               reduce using rule 63 (termo -> termo MOD fator .)
    /               reduce using rule 63 (termo -> termo MOD fator .)
    DIV             reduce using rule 63 (termo -> termo MOD fator .)
    MOD             reduce using rule 63 (termo -> termo MOD fator .)
    +               reduce using rule 63 (termo -> termo MOD fator .)
    -               reduce using rule 63 (termo -> termo MOD fator .)
    EQUALS          reduce using rule 63 (termo -> termo MOD fator .)
    NOT_EQUALS      reduce using rule 63 (termo -> termo MOD fator .)
    LESS_THAN       reduce using rule 63 (termo -> termo MOD fator .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 63 (termo -> termo MOD fator .)
    GREATER_THAN    reduce using rule 63 (termo -> termo MOD fator .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 63 (termo -> termo MOD fator .)
    THEN            reduce using rule 63 (termo -> termo MOD fator .)
    OR              reduce using rule 63 (termo -> termo MOD fator .)
    AND             reduce using rule 63 (termo -> termo MOD fator .)
    DO              reduce using rule 63 (termo -> termo MOD fator .)
    END             reduce using rule 63 (termo -> termo MOD fator .)
    ;               reduce using rule 63 (termo -> termo MOD fator .)
    ELSE            reduce using rule 63 (termo -> termo MOD fator .)
    ]               reduce using rule 63 (termo -> termo MOD fator .)
    )               reduce using rule 63 (termo -> termo MOD fator .)
    ,               reduce using rule 63 (termo -> termo MOD fator .)
    TO              reduce using rule 63 (termo -> termo MOD fator .)
    DOWNTO          reduce using rule 63 (termo -> termo MOD fator .)


state 118

    (65) fator -> ID [ expressao . ]
    (51) expressao -> expressao . OR expressao
    (52) expressao -> expressao . AND expressao

    ]               shift and go to state 136
    OR              shift and go to state 75
    AND             shift and go to state 76


state 119

    (72) fator -> ID ( expressao . )
    (51) expressao -> expressao . OR expressao
    (52) expressao -> expressao . AND expressao

    )               shift and go to state 137
    OR              shift and go to state 75
    AND             shift and go to state 76


state 120

    (71) fator -> ( expressao ) .

    *               reduce using rule 71 (fator -> ( expressao ) .)
    /               reduce using rule 71 (fator -> ( expressao ) .)
    DIV             reduce using rule 71 (fator -> ( expressao ) .)
    MOD             reduce using rule 71 (fator -> ( expressao ) .)
    +               reduce using rule 71 (fator -> ( expressao ) .)
    -               reduce using rule 71 (fator -> ( expressao ) .)
    EQUALS          reduce using rule 71 (fator -> ( expressao ) .)
    NOT_EQUALS      reduce using rule 71 (fator -> ( expressao ) .)
    LESS_THAN       reduce using rule 71 (fator -> ( expressao ) .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 71 (fator -> ( expressao ) .)
    GREATER_THAN    reduce using rule 71 (fator -> ( expressao ) .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 71 (fator -> ( expressao ) .)
    THEN            reduce using rule 71 (fator -> ( expressao ) .)
    OR              reduce using rule 71 (fator -> ( expressao ) .)
    AND             reduce using rule 71 (fator -> ( expressao ) .)
    DO              reduce using rule 71 (fator -> ( expressao ) .)
    END             reduce using rule 71 (fator -> ( expressao ) .)
    ;               reduce using rule 71 (fator -> ( expressao ) .)
    ELSE            reduce using rule 71 (fator -> ( expressao ) .)
    ]               reduce using rule 71 (fator -> ( expressao ) .)
    )               reduce using rule 71 (fator -> ( expressao ) .)
    ,               reduce using rule 71 (fator -> ( expressao ) .)
    TO              reduce using rule 71 (fator -> ( expressao ) .)
    DOWNTO          reduce using rule 71 (fator -> ( expressao ) .)


state 121

    (45) while_statement -> WHILE expressao DO instrucao .

    END             reduce using rule 45 (while_statement -> WHILE expressao DO instrucao .)
    ;               reduce using rule 45 (while_statement -> WHILE expressao DO instrucao .)
    ELSE            reduce using rule 45 (while_statement -> WHILE expressao DO instrucao .)


state 122

    (46) for_statement -> FOR ID ASSIGN expressao . TO expressao DO instrucao
    (47) for_statement -> FOR ID ASSIGN expressao . DOWNTO expressao DO instrucao
    (51) expressao -> expressao . OR expressao
    (52) expressao -> expressao . AND expressao

    TO              shift and go to state 138
    DOWNTO          shift and go to state 139
    OR              shift and go to state 75
    AND             shift and go to state 76


state 123

    (17) declaracao -> lista_id : tipo . ;

    ;               shift and go to state 140


state 124

    (20) tipo -> INTEGER .

    ;               reduce using rule 20 (tipo -> INTEGER .)
    )               reduce using rule 20 (tipo -> INTEGER .)


state 125

    (21) tipo -> REAL .

    ;               reduce using rule 21 (tipo -> REAL .)
    )               reduce using rule 21 (tipo -> REAL .)


state 126

    (22) tipo -> BOOLEAN .

    ;               reduce using rule 22 (tipo -> BOOLEAN .)
    )               reduce using rule 22 (tipo -> BOOLEAN .)


state 127

    (23) tipo -> CHAR .

    ;               reduce using rule 23 (tipo -> CHAR .)
    )               reduce using rule 23 (tipo -> CHAR .)


state 128

    (24) tipo -> STRING .

    ;               reduce using rule 24 (tipo -> STRING .)
    )               reduce using rule 24 (tipo -> STRING .)


state 129

    (25) tipo -> ARRAY . [ NUMBER RANGE NUMBER ] OF tipo

    [               shift and go to state 141


state 130

    (19) lista_id -> lista_id , ID .

    :               reduce using rule 19 (lista_id -> lista_id , ID .)
    ,               reduce using rule 19 (lista_id -> lista_id , ID .)


state 131

    (9) funcao -> ID ( parametros ) . : tipo ; bloco_funcao ;

    :               shift and go to state 142


state 132

    (11) parametros -> lista_id : . tipo
    (12) parametros -> lista_id : . tipo ; parametros
    (20) tipo -> . INTEGER
    (21) tipo -> . REAL
    (22) tipo -> . BOOLEAN
    (23) tipo -> . CHAR
    (24) tipo -> . STRING
    (25) tipo -> . ARRAY [ NUMBER RANGE NUMBER ] OF tipo

    INTEGER         shift and go to state 124
    REAL            shift and go to state 125
    BOOLEAN         shift and go to state 126
    CHAR            shift and go to state 127
    STRING          shift and go to state 128
    ARRAY           shift and go to state 129

    tipo                           shift and go to state 143

state 133

    (38) atribuicao -> ID [ expressao ] ASSIGN . expressao
    (51) expressao -> . expressao OR expressao
    (52) expressao -> . expressao AND expressao
    (54) expressao -> . expressao_simples operador_relacional expressao_simples
    (55) expressao -> . expressao_simples
    (56) expressao_simples -> . termo
    (57) expressao_simples -> . expressao_simples + termo
    (58) expressao_simples -> . expressao_simples - termo
    (59) termo -> . fator
    (60) termo -> . termo * fator
    (61) termo -> . termo / fator
    (62) termo -> . termo DIV fator
    (63) termo -> . termo MOD fator
    (53) fator -> . NOT fator
    (64) fator -> . - fator
    (65) fator -> . ID [ expressao ]
    (66) fator -> . NUMBER
    (67) fator -> . STRING_LITERAL
    (68) fator -> . ID
    (69) fator -> . TRUE
    (70) fator -> . FALSE
    (71) fator -> . ( expressao )
    (72) fator -> . ID ( expressao )

    NOT             shift and go to state 50
    -               shift and go to state 48
    ID              shift and go to state 51
    NUMBER          shift and go to state 52
    STRING_LITERAL  shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    (               shift and go to state 56

    expressao                      shift and go to state 144
    expressao_simples              shift and go to state 46
    termo                          shift and go to state 47
    fator                          shift and go to state 49

state 134

    (50) lista_expressao -> lista_expressao , expressao .
    (51) expressao -> expressao . OR expressao
    (52) expressao -> expressao . AND expressao

    )               reduce using rule 50 (lista_expressao -> lista_expressao , expressao .)
    ,               reduce using rule 50 (lista_expressao -> lista_expressao , expressao .)
    OR              shift and go to state 75
    AND             shift and go to state 76


state 135

    (43) if_statement -> IF expressao THEN instrucao ELSE . instrucao
    (29) instrucao -> . atribuicao
    (30) instrucao -> . leitura
    (31) instrucao -> . escrita
    (32) instrucao -> . if_statement
    (33) instrucao -> . while_statement
    (34) instrucao -> . for_statement
    (35) instrucao -> . bloco
    (36) instrucao -> .
    (37) atribuicao -> . ID ASSIGN expressao
    (38) atribuicao -> . ID [ expressao ] ASSIGN expressao
    (39) leitura -> . READ ( expressao_simples )
    (40) leitura -> . READLN ( expressao_simples )
    (41) escrita -> . WRITE ( lista_expressao )
    (42) escrita -> . WRITELN ( lista_expressao )
    (43) if_statement -> . IF expressao THEN instrucao ELSE instrucao
    (44) if_statement -> . IF expressao THEN instrucao
    (45) while_statement -> . WHILE expressao DO instrucao
    (46) for_statement -> . FOR ID ASSIGN expressao TO expressao DO instrucao
    (47) for_statement -> . FOR ID ASSIGN expressao DOWNTO expressao DO instrucao
    (48) bloco -> . BEGIN lista_instrucoes END

    ELSE            reduce using rule 36 (instrucao -> .)
    END             reduce using rule 36 (instrucao -> .)
    ;               reduce using rule 36 (instrucao -> .)
    ID              shift and go to state 22
    READ            shift and go to state 23
    READLN          shift and go to state 24
    WRITE           shift and go to state 25
    WRITELN         shift and go to state 26
    IF              shift and go to state 27
    WHILE           shift and go to state 28
    FOR             shift and go to state 29
    BEGIN           shift and go to state 12

    instrucao                      shift and go to state 145
    atribuicao                     shift and go to state 15
    leitura                        shift and go to state 16
    escrita                        shift and go to state 17
    if_statement                   shift and go to state 18
    while_statement                shift and go to state 19
    for_statement                  shift and go to state 20
    bloco                          shift and go to state 21

state 136

    (65) fator -> ID [ expressao ] .

    *               reduce using rule 65 (fator -> ID [ expressao ] .)
    /               reduce using rule 65 (fator -> ID [ expressao ] .)
    DIV             reduce using rule 65 (fator -> ID [ expressao ] .)
    MOD             reduce using rule 65 (fator -> ID [ expressao ] .)
    +               reduce using rule 65 (fator -> ID [ expressao ] .)
    -               reduce using rule 65 (fator -> ID [ expressao ] .)
    EQUALS          reduce using rule 65 (fator -> ID [ expressao ] .)
    NOT_EQUALS      reduce using rule 65 (fator -> ID [ expressao ] .)
    LESS_THAN       reduce using rule 65 (fator -> ID [ expressao ] .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 65 (fator -> ID [ expressao ] .)
    GREATER_THAN    reduce using rule 65 (fator -> ID [ expressao ] .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 65 (fator -> ID [ expressao ] .)
    THEN            reduce using rule 65 (fator -> ID [ expressao ] .)
    OR              reduce using rule 65 (fator -> ID [ expressao ] .)
    AND             reduce using rule 65 (fator -> ID [ expressao ] .)
    DO              reduce using rule 65 (fator -> ID [ expressao ] .)
    END             reduce using rule 65 (fator -> ID [ expressao ] .)
    ;               reduce using rule 65 (fator -> ID [ expressao ] .)
    ELSE            reduce using rule 65 (fator -> ID [ expressao ] .)
    ]               reduce using rule 65 (fator -> ID [ expressao ] .)
    )               reduce using rule 65 (fator -> ID [ expressao ] .)
    ,               reduce using rule 65 (fator -> ID [ expressao ] .)
    TO              reduce using rule 65 (fator -> ID [ expressao ] .)
    DOWNTO          reduce using rule 65 (fator -> ID [ expressao ] .)


state 137

    (72) fator -> ID ( expressao ) .

    *               reduce using rule 72 (fator -> ID ( expressao ) .)
    /               reduce using rule 72 (fator -> ID ( expressao ) .)
    DIV             reduce using rule 72 (fator -> ID ( expressao ) .)
    MOD             reduce using rule 72 (fator -> ID ( expressao ) .)
    +               reduce using rule 72 (fator -> ID ( expressao ) .)
    -               reduce using rule 72 (fator -> ID ( expressao ) .)
    EQUALS          reduce using rule 72 (fator -> ID ( expressao ) .)
    NOT_EQUALS      reduce using rule 72 (fator -> ID ( expressao ) .)
    LESS_THAN       reduce using rule 72 (fator -> ID ( expressao ) .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 72 (fator -> ID ( expressao ) .)
    GREATER_THAN    reduce using rule 72 (fator -> ID ( expressao ) .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 72 (fator -> ID ( expressao ) .)
    THEN            reduce using rule 72 (fator -> ID ( expressao ) .)
    OR              reduce using rule 72 (fator -> ID ( expressao ) .)
    AND             reduce using rule 72 (fator -> ID ( expressao ) .)
    DO              reduce using rule 72 (fator -> ID ( expressao ) .)
    END             reduce using rule 72 (fator -> ID ( expressao ) .)
    ;               reduce using rule 72 (fator -> ID ( expressao ) .)
    ELSE            reduce using rule 72 (fator -> ID ( expressao ) .)
    ]               reduce using rule 72 (fator -> ID ( expressao ) .)
    )               reduce using rule 72 (fator -> ID ( expressao ) .)
    ,               reduce using rule 72 (fator -> ID ( expressao ) .)
    TO              reduce using rule 72 (fator -> ID ( expressao ) .)
    DOWNTO          reduce using rule 72 (fator -> ID ( expressao ) .)


state 138

    (46) for_statement -> FOR ID ASSIGN expressao TO . expressao DO instrucao
    (51) expressao -> . expressao OR expressao
    (52) expressao -> . expressao AND expressao
    (54) expressao -> . expressao_simples operador_relacional expressao_simples
    (55) expressao -> . expressao_simples
    (56) expressao_simples -> . termo
    (57) expressao_simples -> . expressao_simples + termo
    (58) expressao_simples -> . expressao_simples - termo
    (59) termo -> . fator
    (60) termo -> . termo * fator
    (61) termo -> . termo / fator
    (62) termo -> . termo DIV fator
    (63) termo -> . termo MOD fator
    (53) fator -> . NOT fator
    (64) fator -> . - fator
    (65) fator -> . ID [ expressao ]
    (66) fator -> . NUMBER
    (67) fator -> . STRING_LITERAL
    (68) fator -> . ID
    (69) fator -> . TRUE
    (70) fator -> . FALSE
    (71) fator -> . ( expressao )
    (72) fator -> . ID ( expressao )

    NOT             shift and go to state 50
    -               shift and go to state 48
    ID              shift and go to state 51
    NUMBER          shift and go to state 52
    STRING_LITERAL  shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    (               shift and go to state 56

    expressao                      shift and go to state 146
    expressao_simples              shift and go to state 46
    termo                          shift and go to state 47
    fator                          shift and go to state 49

state 139

    (47) for_statement -> FOR ID ASSIGN expressao DOWNTO . expressao DO instrucao
    (51) expressao -> . expressao OR expressao
    (52) expressao -> . expressao AND expressao
    (54) expressao -> . expressao_simples operador_relacional expressao_simples
    (55) expressao -> . expressao_simples
    (56) expressao_simples -> . termo
    (57) expressao_simples -> . expressao_simples + termo
    (58) expressao_simples -> . expressao_simples - termo
    (59) termo -> . fator
    (60) termo -> . termo * fator
    (61) termo -> . termo / fator
    (62) termo -> . termo DIV fator
    (63) termo -> . termo MOD fator
    (53) fator -> . NOT fator
    (64) fator -> . - fator
    (65) fator -> . ID [ expressao ]
    (66) fator -> . NUMBER
    (67) fator -> . STRING_LITERAL
    (68) fator -> . ID
    (69) fator -> . TRUE
    (70) fator -> . FALSE
    (71) fator -> . ( expressao )
    (72) fator -> . ID ( expressao )

    NOT             shift and go to state 50
    -               shift and go to state 48
    ID              shift and go to state 51
    NUMBER          shift and go to state 52
    STRING_LITERAL  shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    (               shift and go to state 56

    expressao                      shift and go to state 147
    expressao_simples              shift and go to state 46
    termo                          shift and go to state 47
    fator                          shift and go to state 49

state 140

    (17) declaracao -> lista_id : tipo ; .

    ID              reduce using rule 17 (declaracao -> lista_id : tipo ; .)
    BEGIN           reduce using rule 17 (declaracao -> lista_id : tipo ; .)


state 141

    (25) tipo -> ARRAY [ . NUMBER RANGE NUMBER ] OF tipo

    NUMBER          shift and go to state 148


state 142

    (9) funcao -> ID ( parametros ) : . tipo ; bloco_funcao ;
    (20) tipo -> . INTEGER
    (21) tipo -> . REAL
    (22) tipo -> . BOOLEAN
    (23) tipo -> . CHAR
    (24) tipo -> . STRING
    (25) tipo -> . ARRAY [ NUMBER RANGE NUMBER ] OF tipo

    INTEGER         shift and go to state 124
    REAL            shift and go to state 125
    BOOLEAN         shift and go to state 126
    CHAR            shift and go to state 127
    STRING          shift and go to state 128
    ARRAY           shift and go to state 129

    tipo                           shift and go to state 149

state 143

    (11) parametros -> lista_id : tipo .
    (12) parametros -> lista_id : tipo . ; parametros

    )               reduce using rule 11 (parametros -> lista_id : tipo .)
    ;               shift and go to state 150


state 144

    (38) atribuicao -> ID [ expressao ] ASSIGN expressao .
    (51) expressao -> expressao . OR expressao
    (52) expressao -> expressao . AND expressao

    END             reduce using rule 38 (atribuicao -> ID [ expressao ] ASSIGN expressao .)
    ;               reduce using rule 38 (atribuicao -> ID [ expressao ] ASSIGN expressao .)
    ELSE            reduce using rule 38 (atribuicao -> ID [ expressao ] ASSIGN expressao .)
    OR              shift and go to state 75
    AND             shift and go to state 76


state 145

    (43) if_statement -> IF expressao THEN instrucao ELSE instrucao .

    END             reduce using rule 43 (if_statement -> IF expressao THEN instrucao ELSE instrucao .)
    ;               reduce using rule 43 (if_statement -> IF expressao THEN instrucao ELSE instrucao .)
    ELSE            reduce using rule 43 (if_statement -> IF expressao THEN instrucao ELSE instrucao .)


state 146

    (46) for_statement -> FOR ID ASSIGN expressao TO expressao . DO instrucao
    (51) expressao -> expressao . OR expressao
    (52) expressao -> expressao . AND expressao

    DO              shift and go to state 151
    OR              shift and go to state 75
    AND             shift and go to state 76


state 147

    (47) for_statement -> FOR ID ASSIGN expressao DOWNTO expressao . DO instrucao
    (51) expressao -> expressao . OR expressao
    (52) expressao -> expressao . AND expressao

    DO              shift and go to state 152
    OR              shift and go to state 75
    AND             shift and go to state 76


state 148

    (25) tipo -> ARRAY [ NUMBER . RANGE NUMBER ] OF tipo

    RANGE           shift and go to state 153


state 149

    (9) funcao -> ID ( parametros ) : tipo . ; bloco_funcao ;

    ;               shift and go to state 154


state 150

    (12) parametros -> lista_id : tipo ; . parametros
    (11) parametros -> . lista_id : tipo
    (12) parametros -> . lista_id : tipo ; parametros
    (18) lista_id -> . ID
    (19) lista_id -> . lista_id , ID

    ID              shift and go to state 62

    lista_id                       shift and go to state 101
    parametros                     shift and go to state 155

state 151

    (46) for_statement -> FOR ID ASSIGN expressao TO expressao DO . instrucao
    (29) instrucao -> . atribuicao
    (30) instrucao -> . leitura
    (31) instrucao -> . escrita
    (32) instrucao -> . if_statement
    (33) instrucao -> . while_statement
    (34) instrucao -> . for_statement
    (35) instrucao -> . bloco
    (36) instrucao -> .
    (37) atribuicao -> . ID ASSIGN expressao
    (38) atribuicao -> . ID [ expressao ] ASSIGN expressao
    (39) leitura -> . READ ( expressao_simples )
    (40) leitura -> . READLN ( expressao_simples )
    (41) escrita -> . WRITE ( lista_expressao )
    (42) escrita -> . WRITELN ( lista_expressao )
    (43) if_statement -> . IF expressao THEN instrucao ELSE instrucao
    (44) if_statement -> . IF expressao THEN instrucao
    (45) while_statement -> . WHILE expressao DO instrucao
    (46) for_statement -> . FOR ID ASSIGN expressao TO expressao DO instrucao
    (47) for_statement -> . FOR ID ASSIGN expressao DOWNTO expressao DO instrucao
    (48) bloco -> . BEGIN lista_instrucoes END

    ELSE            reduce using rule 36 (instrucao -> .)
    END             reduce using rule 36 (instrucao -> .)
    ;               reduce using rule 36 (instrucao -> .)
    ID              shift and go to state 22
    READ            shift and go to state 23
    READLN          shift and go to state 24
    WRITE           shift and go to state 25
    WRITELN         shift and go to state 26
    IF              shift and go to state 27
    WHILE           shift and go to state 28
    FOR             shift and go to state 29
    BEGIN           shift and go to state 12

    instrucao                      shift and go to state 156
    atribuicao                     shift and go to state 15
    leitura                        shift and go to state 16
    escrita                        shift and go to state 17
    if_statement                   shift and go to state 18
    while_statement                shift and go to state 19
    for_statement                  shift and go to state 20
    bloco                          shift and go to state 21

state 152

    (47) for_statement -> FOR ID ASSIGN expressao DOWNTO expressao DO . instrucao
    (29) instrucao -> . atribuicao
    (30) instrucao -> . leitura
    (31) instrucao -> . escrita
    (32) instrucao -> . if_statement
    (33) instrucao -> . while_statement
    (34) instrucao -> . for_statement
    (35) instrucao -> . bloco
    (36) instrucao -> .
    (37) atribuicao -> . ID ASSIGN expressao
    (38) atribuicao -> . ID [ expressao ] ASSIGN expressao
    (39) leitura -> . READ ( expressao_simples )
    (40) leitura -> . READLN ( expressao_simples )
    (41) escrita -> . WRITE ( lista_expressao )
    (42) escrita -> . WRITELN ( lista_expressao )
    (43) if_statement -> . IF expressao THEN instrucao ELSE instrucao
    (44) if_statement -> . IF expressao THEN instrucao
    (45) while_statement -> . WHILE expressao DO instrucao
    (46) for_statement -> . FOR ID ASSIGN expressao TO expressao DO instrucao
    (47) for_statement -> . FOR ID ASSIGN expressao DOWNTO expressao DO instrucao
    (48) bloco -> . BEGIN lista_instrucoes END

    ELSE            reduce using rule 36 (instrucao -> .)
    END             reduce using rule 36 (instrucao -> .)
    ;               reduce using rule 36 (instrucao -> .)
    ID              shift and go to state 22
    READ            shift and go to state 23
    READLN          shift and go to state 24
    WRITE           shift and go to state 25
    WRITELN         shift and go to state 26
    IF              shift and go to state 27
    WHILE           shift and go to state 28
    FOR             shift and go to state 29
    BEGIN           shift and go to state 12

    instrucao                      shift and go to state 157
    atribuicao                     shift and go to state 15
    leitura                        shift and go to state 16
    escrita                        shift and go to state 17
    if_statement                   shift and go to state 18
    while_statement                shift and go to state 19
    for_statement                  shift and go to state 20
    bloco                          shift and go to state 21

state 153

    (25) tipo -> ARRAY [ NUMBER RANGE . NUMBER ] OF tipo

    NUMBER          shift and go to state 158


state 154

    (9) funcao -> ID ( parametros ) : tipo ; . bloco_funcao ;
    (10) bloco_funcao -> . declaracoes_variaveis corpo
    (13) declaracoes_variaveis -> . VAR declaracoes
    (14) declaracoes_variaveis -> .

    VAR             shift and go to state 31
    BEGIN           reduce using rule 14 (declaracoes_variaveis -> .)

    bloco_funcao                   shift and go to state 159
    declaracoes_variaveis          shift and go to state 160

state 155

    (12) parametros -> lista_id : tipo ; parametros .

    )               reduce using rule 12 (parametros -> lista_id : tipo ; parametros .)


state 156

    (46) for_statement -> FOR ID ASSIGN expressao TO expressao DO instrucao .

    END             reduce using rule 46 (for_statement -> FOR ID ASSIGN expressao TO expressao DO instrucao .)
    ;               reduce using rule 46 (for_statement -> FOR ID ASSIGN expressao TO expressao DO instrucao .)
    ELSE            reduce using rule 46 (for_statement -> FOR ID ASSIGN expressao TO expressao DO instrucao .)


state 157

    (47) for_statement -> FOR ID ASSIGN expressao DOWNTO expressao DO instrucao .

    END             reduce using rule 47 (for_statement -> FOR ID ASSIGN expressao DOWNTO expressao DO instrucao .)
    ;               reduce using rule 47 (for_statement -> FOR ID ASSIGN expressao DOWNTO expressao DO instrucao .)
    ELSE            reduce using rule 47 (for_statement -> FOR ID ASSIGN expressao DOWNTO expressao DO instrucao .)


state 158

    (25) tipo -> ARRAY [ NUMBER RANGE NUMBER . ] OF tipo

    ]               shift and go to state 161


state 159

    (9) funcao -> ID ( parametros ) : tipo ; bloco_funcao . ;

    ;               shift and go to state 162


state 160

    (10) bloco_funcao -> declaracoes_variaveis . corpo
    (26) corpo -> . BEGIN lista_instrucoes END

    BEGIN           shift and go to state 8

    corpo                          shift and go to state 163

state 161

    (25) tipo -> ARRAY [ NUMBER RANGE NUMBER ] . OF tipo

    OF              shift and go to state 164


state 162

    (9) funcao -> ID ( parametros ) : tipo ; bloco_funcao ; .

    ID              reduce using rule 9 (funcao -> ID ( parametros ) : tipo ; bloco_funcao ; .)
    VAR             reduce using rule 9 (funcao -> ID ( parametros ) : tipo ; bloco_funcao ; .)
    BEGIN           reduce using rule 9 (funcao -> ID ( parametros ) : tipo ; bloco_funcao ; .)


state 163

    (10) bloco_funcao -> declaracoes_variaveis corpo .

    ;               reduce using rule 10 (bloco_funcao -> declaracoes_variaveis corpo .)


state 164

    (25) tipo -> ARRAY [ NUMBER RANGE NUMBER ] OF . tipo
    (20) tipo -> . INTEGER
    (21) tipo -> . REAL
    (22) tipo -> . BOOLEAN
    (23) tipo -> . CHAR
    (24) tipo -> . STRING
    (25) tipo -> . ARRAY [ NUMBER RANGE NUMBER ] OF tipo

    INTEGER         shift and go to state 124
    REAL            shift and go to state 125
    BOOLEAN         shift and go to state 126
    CHAR            shift and go to state 127
    STRING          shift and go to state 128
    ARRAY           shift and go to state 129

    tipo                           shift and go to state 165

state 165

    (25) tipo -> ARRAY [ NUMBER RANGE NUMBER ] OF tipo .

    ;               reduce using rule 25 (tipo -> ARRAY [ NUMBER RANGE NUMBER ] OF tipo .)
    )               reduce using rule 25 (tipo -> ARRAY [ NUMBER RANGE NUMBER ] OF tipo .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ELSE in state 108 resolved as shift
