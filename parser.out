Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> gramatica
Rule 1     gramatica -> programa .
Rule 2     programa -> cabecalho corpo
Rule 3     cabecalho -> titulo declaracao_funcoes declaracoes_variaveis
Rule 4     titulo -> PROGRAM ID ;
Rule 5     declaracao_funcoes -> FUNCTION funcoes
Rule 6     declaracao_funcoes -> <empty>
Rule 7     funcoes -> funcao
Rule 8     funcoes -> funcao funcoes
Rule 9     funcao -> ID ( parametros ) : tipo ; bloco_funcao ;
Rule 10    bloco_funcao -> declaracoes_variaveis corpo
Rule 11    parametros -> lista_id : tipo
Rule 12    parametros -> lista_id : tipo ; parametros
Rule 13    parametros -> <empty>
Rule 14    declaracoes_variaveis -> VAR declaracoes
Rule 15    declaracoes_variaveis -> <empty>
Rule 16    declaracoes -> declaracao
Rule 17    declaracoes -> declaracao declaracoes
Rule 18    declaracao -> lista_id : tipo ;
Rule 19    lista_id -> ID
Rule 20    lista_id -> lista_id , ID
Rule 21    tipo -> INTEGER
Rule 22    tipo -> REAL
Rule 23    tipo -> BOOLEAN
Rule 24    tipo -> CHAR
Rule 25    tipo -> STRING
Rule 26    tipo -> ARRAY [ NUMBER RANGE NUMBER ] OF tipo
Rule 27    corpo -> BEGIN lista_instrucoes END
Rule 28    lista_instrucoes -> instrucao
Rule 29    lista_instrucoes -> lista_instrucoes ; instrucao
Rule 30    instrucao -> atribuicao
Rule 31    instrucao -> leitura
Rule 32    instrucao -> escrita
Rule 33    instrucao -> if_statement
Rule 34    instrucao -> while_statement
Rule 35    instrucao -> for_statement
Rule 36    instrucao -> bloco
Rule 37    instrucao -> <empty>
Rule 38    atribuicao -> ID ASSIGN expressao
Rule 39    atribuicao -> ID [ expressao ] ASSIGN expressao
Rule 40    leitura -> READ ( expressao )
Rule 41    leitura -> READLN ( expressao )
Rule 42    escrita -> WRITELN
Rule 43    escrita -> WRITELN ( lista_expressao )
Rule 44    escrita -> WRITE ( lista_expressao )
Rule 45    if_statement -> IF expressao THEN instrucao ELSE instrucao
Rule 46    if_statement -> IF expressao THEN instrucao
Rule 47    while_statement -> WHILE expressao DO instrucao
Rule 48    for_statement -> FOR ID ASSIGN expressao TO expressao DO instrucao
Rule 49    for_statement -> FOR ID ASSIGN expressao DOWNTO expressao DO instrucao
Rule 50    bloco -> BEGIN lista_instrucoes END
Rule 51    lista_expressao -> expressao
Rule 52    lista_expressao -> lista_expressao , expressao
Rule 53    expressao -> expressao_logica
Rule 54    expressao_logica -> expressao_logica OR expressao_relacional
Rule 55    expressao_logica -> expressao_logica AND expressao_relacional
Rule 56    expressao_logica -> expressao_relacional
Rule 57    expressao_relacional -> expressao_aritmetica operador_relacional expressao_aritmetica
Rule 58    expressao_relacional -> expressao_aritmetica
Rule 59    operador_relacional -> EQUALS
Rule 60    operador_relacional -> NOT_EQUALS
Rule 61    operador_relacional -> LESS_THAN
Rule 62    operador_relacional -> LESS_THAN_OR_EQUAL_TO
Rule 63    operador_relacional -> GREATER_THAN
Rule 64    operador_relacional -> GREATER_THAN_OR_EQUAL_TO
Rule 65    expressao_aritmetica -> expressao_aritmetica + termo
Rule 66    expressao_aritmetica -> expressao_aritmetica - termo
Rule 67    expressao_aritmetica -> termo
Rule 68    termo -> termo * fator
Rule 69    termo -> termo / fator
Rule 70    termo -> termo DIV fator
Rule 71    termo -> termo MOD fator
Rule 72    termo -> fator
Rule 73    fator -> NUMBER
Rule 74    fator -> REAL_NUMBER
Rule 75    fator -> STRING_LITERAL
Rule 76    fator -> ID
Rule 77    fator -> ID [ expressao ]
Rule 78    fator -> ID ( expressao )
Rule 79    fator -> TRUE
Rule 80    fator -> FALSE
Rule 81    fator -> ( expressao )
Rule 82    fator -> NOT fator
Rule 83    fator -> - fator

Terminals, with rules where they appear

(                    : 9 40 41 43 44 78 81
)                    : 9 40 41 43 44 78 81
*                    : 68
+                    : 65
,                    : 20 52
-                    : 66 83
.                    : 1
/                    : 69
:                    : 9 11 12 18
;                    : 4 9 9 12 18 29
AND                  : 55
ARRAY                : 26
ASSIGN               : 38 39 48 49
BEGIN                : 27 50
BOOLEAN              : 23
CHAR                 : 24
DIV                  : 70
DO                   : 47 48 49
DOWNTO               : 49
ELSE                 : 45
END                  : 27 50
EQUALS               : 59
FALSE                : 80
FOR                  : 48 49
FUNCTION             : 5
GREATER_THAN         : 63
GREATER_THAN_OR_EQUAL_TO : 64
ID                   : 4 9 19 20 38 39 48 49 76 77 78
IF                   : 45 46
INTEGER              : 21
LESS_THAN            : 61
LESS_THAN_OR_EQUAL_TO : 62
MOD                  : 71
NOT                  : 82
NOT_EQUALS           : 60
NUMBER               : 26 26 73
OF                   : 26
OR                   : 54
PROGRAM              : 4
RANGE                : 26
READ                 : 40
READLN               : 41
REAL                 : 22
REAL_NUMBER          : 74
STRING               : 25
STRING_LITERAL       : 75
THEN                 : 45 46
TO                   : 48
TRUE                 : 79
VAR                  : 14
WHILE                : 47
WRITE                : 44
WRITELN              : 42 43
[                    : 26 39 77
]                    : 26 39 77
error                : 

Nonterminals, with rules where they appear

atribuicao           : 30
bloco                : 36
bloco_funcao         : 9
cabecalho            : 2
corpo                : 2 10
declaracao           : 16 17
declaracao_funcoes   : 3
declaracoes          : 14 17
declaracoes_variaveis : 3 10
escrita              : 32
expressao            : 38 39 39 40 41 45 46 47 48 48 49 49 51 52 77 78 81
expressao_aritmetica : 57 57 58 65 66
expressao_logica     : 53 54 55
expressao_relacional : 54 55 56
fator                : 68 69 70 71 72 82 83
for_statement        : 35
funcao               : 7 8
funcoes              : 5 8
gramatica            : 0
if_statement         : 33
instrucao            : 28 29 45 45 46 47 48 49
leitura              : 31
lista_expressao      : 43 44 52
lista_id             : 11 12 18 20
lista_instrucoes     : 27 29 50
operador_relacional  : 57
parametros           : 9 12
programa             : 1
termo                : 65 66 67 68 69 70 71
tipo                 : 9 11 12 18 26
titulo               : 3
while_statement      : 34

Parsing method: LALR

state 0

    (0) S' -> . gramatica
    (1) gramatica -> . programa .
    (2) programa -> . cabecalho corpo
    (3) cabecalho -> . titulo declaracao_funcoes declaracoes_variaveis
    (4) titulo -> . PROGRAM ID ;

    PROGRAM         shift and go to state 5

    gramatica                      shift and go to state 1
    programa                       shift and go to state 2
    cabecalho                      shift and go to state 3
    titulo                         shift and go to state 4

state 1

    (0) S' -> gramatica .



state 2

    (1) gramatica -> programa . .

    .               shift and go to state 6


state 3

    (2) programa -> cabecalho . corpo
    (27) corpo -> . BEGIN lista_instrucoes END

    BEGIN           shift and go to state 8

    corpo                          shift and go to state 7

state 4

    (3) cabecalho -> titulo . declaracao_funcoes declaracoes_variaveis
    (5) declaracao_funcoes -> . FUNCTION funcoes
    (6) declaracao_funcoes -> .

    FUNCTION        shift and go to state 10
    VAR             reduce using rule 6 (declaracao_funcoes -> .)
    BEGIN           reduce using rule 6 (declaracao_funcoes -> .)

    declaracao_funcoes             shift and go to state 9

state 5

    (4) titulo -> PROGRAM . ID ;

    ID              shift and go to state 11


state 6

    (1) gramatica -> programa . .

    $end            reduce using rule 1 (gramatica -> programa . .)


state 7

    (2) programa -> cabecalho corpo .

    .               reduce using rule 2 (programa -> cabecalho corpo .)


state 8

    (27) corpo -> BEGIN . lista_instrucoes END
    (28) lista_instrucoes -> . instrucao
    (29) lista_instrucoes -> . lista_instrucoes ; instrucao
    (30) instrucao -> . atribuicao
    (31) instrucao -> . leitura
    (32) instrucao -> . escrita
    (33) instrucao -> . if_statement
    (34) instrucao -> . while_statement
    (35) instrucao -> . for_statement
    (36) instrucao -> . bloco
    (37) instrucao -> .
    (38) atribuicao -> . ID ASSIGN expressao
    (39) atribuicao -> . ID [ expressao ] ASSIGN expressao
    (40) leitura -> . READ ( expressao )
    (41) leitura -> . READLN ( expressao )
    (42) escrita -> . WRITELN
    (43) escrita -> . WRITELN ( lista_expressao )
    (44) escrita -> . WRITE ( lista_expressao )
    (45) if_statement -> . IF expressao THEN instrucao ELSE instrucao
    (46) if_statement -> . IF expressao THEN instrucao
    (47) while_statement -> . WHILE expressao DO instrucao
    (48) for_statement -> . FOR ID ASSIGN expressao TO expressao DO instrucao
    (49) for_statement -> . FOR ID ASSIGN expressao DOWNTO expressao DO instrucao
    (50) bloco -> . BEGIN lista_instrucoes END

    END             reduce using rule 37 (instrucao -> .)
    ;               reduce using rule 37 (instrucao -> .)
    ID              shift and go to state 22
    READ            shift and go to state 23
    READLN          shift and go to state 24
    WRITELN         shift and go to state 25
    WRITE           shift and go to state 26
    IF              shift and go to state 27
    WHILE           shift and go to state 28
    FOR             shift and go to state 29
    BEGIN           shift and go to state 12

    lista_instrucoes               shift and go to state 13
    instrucao                      shift and go to state 14
    atribuicao                     shift and go to state 15
    leitura                        shift and go to state 16
    escrita                        shift and go to state 17
    if_statement                   shift and go to state 18
    while_statement                shift and go to state 19
    for_statement                  shift and go to state 20
    bloco                          shift and go to state 21

state 9

    (3) cabecalho -> titulo declaracao_funcoes . declaracoes_variaveis
    (14) declaracoes_variaveis -> . VAR declaracoes
    (15) declaracoes_variaveis -> .

    VAR             shift and go to state 31
    BEGIN           reduce using rule 15 (declaracoes_variaveis -> .)

    declaracoes_variaveis          shift and go to state 30

state 10

    (5) declaracao_funcoes -> FUNCTION . funcoes
    (7) funcoes -> . funcao
    (8) funcoes -> . funcao funcoes
    (9) funcao -> . ID ( parametros ) : tipo ; bloco_funcao ;

    ID              shift and go to state 34

    funcoes                        shift and go to state 32
    funcao                         shift and go to state 33

state 11

    (4) titulo -> PROGRAM ID . ;

    ;               shift and go to state 35


state 12

    (50) bloco -> BEGIN . lista_instrucoes END
    (28) lista_instrucoes -> . instrucao
    (29) lista_instrucoes -> . lista_instrucoes ; instrucao
    (30) instrucao -> . atribuicao
    (31) instrucao -> . leitura
    (32) instrucao -> . escrita
    (33) instrucao -> . if_statement
    (34) instrucao -> . while_statement
    (35) instrucao -> . for_statement
    (36) instrucao -> . bloco
    (37) instrucao -> .
    (38) atribuicao -> . ID ASSIGN expressao
    (39) atribuicao -> . ID [ expressao ] ASSIGN expressao
    (40) leitura -> . READ ( expressao )
    (41) leitura -> . READLN ( expressao )
    (42) escrita -> . WRITELN
    (43) escrita -> . WRITELN ( lista_expressao )
    (44) escrita -> . WRITE ( lista_expressao )
    (45) if_statement -> . IF expressao THEN instrucao ELSE instrucao
    (46) if_statement -> . IF expressao THEN instrucao
    (47) while_statement -> . WHILE expressao DO instrucao
    (48) for_statement -> . FOR ID ASSIGN expressao TO expressao DO instrucao
    (49) for_statement -> . FOR ID ASSIGN expressao DOWNTO expressao DO instrucao
    (50) bloco -> . BEGIN lista_instrucoes END

    END             reduce using rule 37 (instrucao -> .)
    ;               reduce using rule 37 (instrucao -> .)
    ID              shift and go to state 22
    READ            shift and go to state 23
    READLN          shift and go to state 24
    WRITELN         shift and go to state 25
    WRITE           shift and go to state 26
    IF              shift and go to state 27
    WHILE           shift and go to state 28
    FOR             shift and go to state 29
    BEGIN           shift and go to state 12

    lista_instrucoes               shift and go to state 36
    instrucao                      shift and go to state 14
    atribuicao                     shift and go to state 15
    leitura                        shift and go to state 16
    escrita                        shift and go to state 17
    if_statement                   shift and go to state 18
    while_statement                shift and go to state 19
    for_statement                  shift and go to state 20
    bloco                          shift and go to state 21

state 13

    (27) corpo -> BEGIN lista_instrucoes . END
    (29) lista_instrucoes -> lista_instrucoes . ; instrucao

    END             shift and go to state 37
    ;               shift and go to state 38


state 14

    (28) lista_instrucoes -> instrucao .

    END             reduce using rule 28 (lista_instrucoes -> instrucao .)
    ;               reduce using rule 28 (lista_instrucoes -> instrucao .)


state 15

    (30) instrucao -> atribuicao .

    END             reduce using rule 30 (instrucao -> atribuicao .)
    ;               reduce using rule 30 (instrucao -> atribuicao .)
    ELSE            reduce using rule 30 (instrucao -> atribuicao .)


state 16

    (31) instrucao -> leitura .

    END             reduce using rule 31 (instrucao -> leitura .)
    ;               reduce using rule 31 (instrucao -> leitura .)
    ELSE            reduce using rule 31 (instrucao -> leitura .)


state 17

    (32) instrucao -> escrita .

    END             reduce using rule 32 (instrucao -> escrita .)
    ;               reduce using rule 32 (instrucao -> escrita .)
    ELSE            reduce using rule 32 (instrucao -> escrita .)


state 18

    (33) instrucao -> if_statement .

    END             reduce using rule 33 (instrucao -> if_statement .)
    ;               reduce using rule 33 (instrucao -> if_statement .)
    ELSE            reduce using rule 33 (instrucao -> if_statement .)


state 19

    (34) instrucao -> while_statement .

    END             reduce using rule 34 (instrucao -> while_statement .)
    ;               reduce using rule 34 (instrucao -> while_statement .)
    ELSE            reduce using rule 34 (instrucao -> while_statement .)


state 20

    (35) instrucao -> for_statement .

    END             reduce using rule 35 (instrucao -> for_statement .)
    ;               reduce using rule 35 (instrucao -> for_statement .)
    ELSE            reduce using rule 35 (instrucao -> for_statement .)


state 21

    (36) instrucao -> bloco .

    END             reduce using rule 36 (instrucao -> bloco .)
    ;               reduce using rule 36 (instrucao -> bloco .)
    ELSE            reduce using rule 36 (instrucao -> bloco .)


state 22

    (38) atribuicao -> ID . ASSIGN expressao
    (39) atribuicao -> ID . [ expressao ] ASSIGN expressao

    ASSIGN          shift and go to state 39
    [               shift and go to state 40


state 23

    (40) leitura -> READ . ( expressao )

    (               shift and go to state 41


state 24

    (41) leitura -> READLN . ( expressao )

    (               shift and go to state 42


state 25

    (42) escrita -> WRITELN .
    (43) escrita -> WRITELN . ( lista_expressao )

    END             reduce using rule 42 (escrita -> WRITELN .)
    ;               reduce using rule 42 (escrita -> WRITELN .)
    ELSE            reduce using rule 42 (escrita -> WRITELN .)
    (               shift and go to state 43


state 26

    (44) escrita -> WRITE . ( lista_expressao )

    (               shift and go to state 44


state 27

    (45) if_statement -> IF . expressao THEN instrucao ELSE instrucao
    (46) if_statement -> IF . expressao THEN instrucao
    (53) expressao -> . expressao_logica
    (54) expressao_logica -> . expressao_logica OR expressao_relacional
    (55) expressao_logica -> . expressao_logica AND expressao_relacional
    (56) expressao_logica -> . expressao_relacional
    (57) expressao_relacional -> . expressao_aritmetica operador_relacional expressao_aritmetica
    (58) expressao_relacional -> . expressao_aritmetica
    (65) expressao_aritmetica -> . expressao_aritmetica + termo
    (66) expressao_aritmetica -> . expressao_aritmetica - termo
    (67) expressao_aritmetica -> . termo
    (68) termo -> . termo * fator
    (69) termo -> . termo / fator
    (70) termo -> . termo DIV fator
    (71) termo -> . termo MOD fator
    (72) termo -> . fator
    (73) fator -> . NUMBER
    (74) fator -> . REAL_NUMBER
    (75) fator -> . STRING_LITERAL
    (76) fator -> . ID
    (77) fator -> . ID [ expressao ]
    (78) fator -> . ID ( expressao )
    (79) fator -> . TRUE
    (80) fator -> . FALSE
    (81) fator -> . ( expressao )
    (82) fator -> . NOT fator
    (83) fator -> . - fator

    NUMBER          shift and go to state 52
    REAL_NUMBER     shift and go to state 53
    STRING_LITERAL  shift and go to state 54
    ID              shift and go to state 55
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    (               shift and go to state 56
    NOT             shift and go to state 59
    -               shift and go to state 50

    expressao                      shift and go to state 45
    expressao_logica               shift and go to state 46
    expressao_relacional           shift and go to state 47
    expressao_aritmetica           shift and go to state 48
    termo                          shift and go to state 49
    fator                          shift and go to state 51

state 28

    (47) while_statement -> WHILE . expressao DO instrucao
    (53) expressao -> . expressao_logica
    (54) expressao_logica -> . expressao_logica OR expressao_relacional
    (55) expressao_logica -> . expressao_logica AND expressao_relacional
    (56) expressao_logica -> . expressao_relacional
    (57) expressao_relacional -> . expressao_aritmetica operador_relacional expressao_aritmetica
    (58) expressao_relacional -> . expressao_aritmetica
    (65) expressao_aritmetica -> . expressao_aritmetica + termo
    (66) expressao_aritmetica -> . expressao_aritmetica - termo
    (67) expressao_aritmetica -> . termo
    (68) termo -> . termo * fator
    (69) termo -> . termo / fator
    (70) termo -> . termo DIV fator
    (71) termo -> . termo MOD fator
    (72) termo -> . fator
    (73) fator -> . NUMBER
    (74) fator -> . REAL_NUMBER
    (75) fator -> . STRING_LITERAL
    (76) fator -> . ID
    (77) fator -> . ID [ expressao ]
    (78) fator -> . ID ( expressao )
    (79) fator -> . TRUE
    (80) fator -> . FALSE
    (81) fator -> . ( expressao )
    (82) fator -> . NOT fator
    (83) fator -> . - fator

    NUMBER          shift and go to state 52
    REAL_NUMBER     shift and go to state 53
    STRING_LITERAL  shift and go to state 54
    ID              shift and go to state 55
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    (               shift and go to state 56
    NOT             shift and go to state 59
    -               shift and go to state 50

    expressao                      shift and go to state 60
    expressao_logica               shift and go to state 46
    expressao_relacional           shift and go to state 47
    expressao_aritmetica           shift and go to state 48
    termo                          shift and go to state 49
    fator                          shift and go to state 51

state 29

    (48) for_statement -> FOR . ID ASSIGN expressao TO expressao DO instrucao
    (49) for_statement -> FOR . ID ASSIGN expressao DOWNTO expressao DO instrucao

    ID              shift and go to state 61


state 30

    (3) cabecalho -> titulo declaracao_funcoes declaracoes_variaveis .

    BEGIN           reduce using rule 3 (cabecalho -> titulo declaracao_funcoes declaracoes_variaveis .)


state 31

    (14) declaracoes_variaveis -> VAR . declaracoes
    (16) declaracoes -> . declaracao
    (17) declaracoes -> . declaracao declaracoes
    (18) declaracao -> . lista_id : tipo ;
    (19) lista_id -> . ID
    (20) lista_id -> . lista_id , ID

    ID              shift and go to state 65

    declaracoes                    shift and go to state 62
    declaracao                     shift and go to state 63
    lista_id                       shift and go to state 64

state 32

    (5) declaracao_funcoes -> FUNCTION funcoes .

    VAR             reduce using rule 5 (declaracao_funcoes -> FUNCTION funcoes .)
    BEGIN           reduce using rule 5 (declaracao_funcoes -> FUNCTION funcoes .)


state 33

    (7) funcoes -> funcao .
    (8) funcoes -> funcao . funcoes
    (7) funcoes -> . funcao
    (8) funcoes -> . funcao funcoes
    (9) funcao -> . ID ( parametros ) : tipo ; bloco_funcao ;

    VAR             reduce using rule 7 (funcoes -> funcao .)
    BEGIN           reduce using rule 7 (funcoes -> funcao .)
    ID              shift and go to state 34

    funcao                         shift and go to state 33
    funcoes                        shift and go to state 66

state 34

    (9) funcao -> ID . ( parametros ) : tipo ; bloco_funcao ;

    (               shift and go to state 67


state 35

    (4) titulo -> PROGRAM ID ; .

    FUNCTION        reduce using rule 4 (titulo -> PROGRAM ID ; .)
    VAR             reduce using rule 4 (titulo -> PROGRAM ID ; .)
    BEGIN           reduce using rule 4 (titulo -> PROGRAM ID ; .)


state 36

    (50) bloco -> BEGIN lista_instrucoes . END
    (29) lista_instrucoes -> lista_instrucoes . ; instrucao

    END             shift and go to state 68
    ;               shift and go to state 38


state 37

    (27) corpo -> BEGIN lista_instrucoes END .

    .               reduce using rule 27 (corpo -> BEGIN lista_instrucoes END .)
    ;               reduce using rule 27 (corpo -> BEGIN lista_instrucoes END .)


state 38

    (29) lista_instrucoes -> lista_instrucoes ; . instrucao
    (30) instrucao -> . atribuicao
    (31) instrucao -> . leitura
    (32) instrucao -> . escrita
    (33) instrucao -> . if_statement
    (34) instrucao -> . while_statement
    (35) instrucao -> . for_statement
    (36) instrucao -> . bloco
    (37) instrucao -> .
    (38) atribuicao -> . ID ASSIGN expressao
    (39) atribuicao -> . ID [ expressao ] ASSIGN expressao
    (40) leitura -> . READ ( expressao )
    (41) leitura -> . READLN ( expressao )
    (42) escrita -> . WRITELN
    (43) escrita -> . WRITELN ( lista_expressao )
    (44) escrita -> . WRITE ( lista_expressao )
    (45) if_statement -> . IF expressao THEN instrucao ELSE instrucao
    (46) if_statement -> . IF expressao THEN instrucao
    (47) while_statement -> . WHILE expressao DO instrucao
    (48) for_statement -> . FOR ID ASSIGN expressao TO expressao DO instrucao
    (49) for_statement -> . FOR ID ASSIGN expressao DOWNTO expressao DO instrucao
    (50) bloco -> . BEGIN lista_instrucoes END

    END             reduce using rule 37 (instrucao -> .)
    ;               reduce using rule 37 (instrucao -> .)
    ID              shift and go to state 22
    READ            shift and go to state 23
    READLN          shift and go to state 24
    WRITELN         shift and go to state 25
    WRITE           shift and go to state 26
    IF              shift and go to state 27
    WHILE           shift and go to state 28
    FOR             shift and go to state 29
    BEGIN           shift and go to state 12

    instrucao                      shift and go to state 69
    atribuicao                     shift and go to state 15
    leitura                        shift and go to state 16
    escrita                        shift and go to state 17
    if_statement                   shift and go to state 18
    while_statement                shift and go to state 19
    for_statement                  shift and go to state 20
    bloco                          shift and go to state 21

state 39

    (38) atribuicao -> ID ASSIGN . expressao
    (53) expressao -> . expressao_logica
    (54) expressao_logica -> . expressao_logica OR expressao_relacional
    (55) expressao_logica -> . expressao_logica AND expressao_relacional
    (56) expressao_logica -> . expressao_relacional
    (57) expressao_relacional -> . expressao_aritmetica operador_relacional expressao_aritmetica
    (58) expressao_relacional -> . expressao_aritmetica
    (65) expressao_aritmetica -> . expressao_aritmetica + termo
    (66) expressao_aritmetica -> . expressao_aritmetica - termo
    (67) expressao_aritmetica -> . termo
    (68) termo -> . termo * fator
    (69) termo -> . termo / fator
    (70) termo -> . termo DIV fator
    (71) termo -> . termo MOD fator
    (72) termo -> . fator
    (73) fator -> . NUMBER
    (74) fator -> . REAL_NUMBER
    (75) fator -> . STRING_LITERAL
    (76) fator -> . ID
    (77) fator -> . ID [ expressao ]
    (78) fator -> . ID ( expressao )
    (79) fator -> . TRUE
    (80) fator -> . FALSE
    (81) fator -> . ( expressao )
    (82) fator -> . NOT fator
    (83) fator -> . - fator

    NUMBER          shift and go to state 52
    REAL_NUMBER     shift and go to state 53
    STRING_LITERAL  shift and go to state 54
    ID              shift and go to state 55
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    (               shift and go to state 56
    NOT             shift and go to state 59
    -               shift and go to state 50

    expressao                      shift and go to state 70
    expressao_logica               shift and go to state 46
    expressao_relacional           shift and go to state 47
    expressao_aritmetica           shift and go to state 48
    termo                          shift and go to state 49
    fator                          shift and go to state 51

state 40

    (39) atribuicao -> ID [ . expressao ] ASSIGN expressao
    (53) expressao -> . expressao_logica
    (54) expressao_logica -> . expressao_logica OR expressao_relacional
    (55) expressao_logica -> . expressao_logica AND expressao_relacional
    (56) expressao_logica -> . expressao_relacional
    (57) expressao_relacional -> . expressao_aritmetica operador_relacional expressao_aritmetica
    (58) expressao_relacional -> . expressao_aritmetica
    (65) expressao_aritmetica -> . expressao_aritmetica + termo
    (66) expressao_aritmetica -> . expressao_aritmetica - termo
    (67) expressao_aritmetica -> . termo
    (68) termo -> . termo * fator
    (69) termo -> . termo / fator
    (70) termo -> . termo DIV fator
    (71) termo -> . termo MOD fator
    (72) termo -> . fator
    (73) fator -> . NUMBER
    (74) fator -> . REAL_NUMBER
    (75) fator -> . STRING_LITERAL
    (76) fator -> . ID
    (77) fator -> . ID [ expressao ]
    (78) fator -> . ID ( expressao )
    (79) fator -> . TRUE
    (80) fator -> . FALSE
    (81) fator -> . ( expressao )
    (82) fator -> . NOT fator
    (83) fator -> . - fator

    NUMBER          shift and go to state 52
    REAL_NUMBER     shift and go to state 53
    STRING_LITERAL  shift and go to state 54
    ID              shift and go to state 55
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    (               shift and go to state 56
    NOT             shift and go to state 59
    -               shift and go to state 50

    expressao                      shift and go to state 71
    expressao_logica               shift and go to state 46
    expressao_relacional           shift and go to state 47
    expressao_aritmetica           shift and go to state 48
    termo                          shift and go to state 49
    fator                          shift and go to state 51

state 41

    (40) leitura -> READ ( . expressao )
    (53) expressao -> . expressao_logica
    (54) expressao_logica -> . expressao_logica OR expressao_relacional
    (55) expressao_logica -> . expressao_logica AND expressao_relacional
    (56) expressao_logica -> . expressao_relacional
    (57) expressao_relacional -> . expressao_aritmetica operador_relacional expressao_aritmetica
    (58) expressao_relacional -> . expressao_aritmetica
    (65) expressao_aritmetica -> . expressao_aritmetica + termo
    (66) expressao_aritmetica -> . expressao_aritmetica - termo
    (67) expressao_aritmetica -> . termo
    (68) termo -> . termo * fator
    (69) termo -> . termo / fator
    (70) termo -> . termo DIV fator
    (71) termo -> . termo MOD fator
    (72) termo -> . fator
    (73) fator -> . NUMBER
    (74) fator -> . REAL_NUMBER
    (75) fator -> . STRING_LITERAL
    (76) fator -> . ID
    (77) fator -> . ID [ expressao ]
    (78) fator -> . ID ( expressao )
    (79) fator -> . TRUE
    (80) fator -> . FALSE
    (81) fator -> . ( expressao )
    (82) fator -> . NOT fator
    (83) fator -> . - fator

    NUMBER          shift and go to state 52
    REAL_NUMBER     shift and go to state 53
    STRING_LITERAL  shift and go to state 54
    ID              shift and go to state 55
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    (               shift and go to state 56
    NOT             shift and go to state 59
    -               shift and go to state 50

    expressao                      shift and go to state 72
    expressao_logica               shift and go to state 46
    expressao_relacional           shift and go to state 47
    expressao_aritmetica           shift and go to state 48
    termo                          shift and go to state 49
    fator                          shift and go to state 51

state 42

    (41) leitura -> READLN ( . expressao )
    (53) expressao -> . expressao_logica
    (54) expressao_logica -> . expressao_logica OR expressao_relacional
    (55) expressao_logica -> . expressao_logica AND expressao_relacional
    (56) expressao_logica -> . expressao_relacional
    (57) expressao_relacional -> . expressao_aritmetica operador_relacional expressao_aritmetica
    (58) expressao_relacional -> . expressao_aritmetica
    (65) expressao_aritmetica -> . expressao_aritmetica + termo
    (66) expressao_aritmetica -> . expressao_aritmetica - termo
    (67) expressao_aritmetica -> . termo
    (68) termo -> . termo * fator
    (69) termo -> . termo / fator
    (70) termo -> . termo DIV fator
    (71) termo -> . termo MOD fator
    (72) termo -> . fator
    (73) fator -> . NUMBER
    (74) fator -> . REAL_NUMBER
    (75) fator -> . STRING_LITERAL
    (76) fator -> . ID
    (77) fator -> . ID [ expressao ]
    (78) fator -> . ID ( expressao )
    (79) fator -> . TRUE
    (80) fator -> . FALSE
    (81) fator -> . ( expressao )
    (82) fator -> . NOT fator
    (83) fator -> . - fator

    NUMBER          shift and go to state 52
    REAL_NUMBER     shift and go to state 53
    STRING_LITERAL  shift and go to state 54
    ID              shift and go to state 55
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    (               shift and go to state 56
    NOT             shift and go to state 59
    -               shift and go to state 50

    expressao                      shift and go to state 73
    expressao_logica               shift and go to state 46
    expressao_relacional           shift and go to state 47
    expressao_aritmetica           shift and go to state 48
    termo                          shift and go to state 49
    fator                          shift and go to state 51

state 43

    (43) escrita -> WRITELN ( . lista_expressao )
    (51) lista_expressao -> . expressao
    (52) lista_expressao -> . lista_expressao , expressao
    (53) expressao -> . expressao_logica
    (54) expressao_logica -> . expressao_logica OR expressao_relacional
    (55) expressao_logica -> . expressao_logica AND expressao_relacional
    (56) expressao_logica -> . expressao_relacional
    (57) expressao_relacional -> . expressao_aritmetica operador_relacional expressao_aritmetica
    (58) expressao_relacional -> . expressao_aritmetica
    (65) expressao_aritmetica -> . expressao_aritmetica + termo
    (66) expressao_aritmetica -> . expressao_aritmetica - termo
    (67) expressao_aritmetica -> . termo
    (68) termo -> . termo * fator
    (69) termo -> . termo / fator
    (70) termo -> . termo DIV fator
    (71) termo -> . termo MOD fator
    (72) termo -> . fator
    (73) fator -> . NUMBER
    (74) fator -> . REAL_NUMBER
    (75) fator -> . STRING_LITERAL
    (76) fator -> . ID
    (77) fator -> . ID [ expressao ]
    (78) fator -> . ID ( expressao )
    (79) fator -> . TRUE
    (80) fator -> . FALSE
    (81) fator -> . ( expressao )
    (82) fator -> . NOT fator
    (83) fator -> . - fator

    NUMBER          shift and go to state 52
    REAL_NUMBER     shift and go to state 53
    STRING_LITERAL  shift and go to state 54
    ID              shift and go to state 55
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    (               shift and go to state 56
    NOT             shift and go to state 59
    -               shift and go to state 50

    lista_expressao                shift and go to state 74
    expressao                      shift and go to state 75
    expressao_logica               shift and go to state 46
    expressao_relacional           shift and go to state 47
    expressao_aritmetica           shift and go to state 48
    termo                          shift and go to state 49
    fator                          shift and go to state 51

state 44

    (44) escrita -> WRITE ( . lista_expressao )
    (51) lista_expressao -> . expressao
    (52) lista_expressao -> . lista_expressao , expressao
    (53) expressao -> . expressao_logica
    (54) expressao_logica -> . expressao_logica OR expressao_relacional
    (55) expressao_logica -> . expressao_logica AND expressao_relacional
    (56) expressao_logica -> . expressao_relacional
    (57) expressao_relacional -> . expressao_aritmetica operador_relacional expressao_aritmetica
    (58) expressao_relacional -> . expressao_aritmetica
    (65) expressao_aritmetica -> . expressao_aritmetica + termo
    (66) expressao_aritmetica -> . expressao_aritmetica - termo
    (67) expressao_aritmetica -> . termo
    (68) termo -> . termo * fator
    (69) termo -> . termo / fator
    (70) termo -> . termo DIV fator
    (71) termo -> . termo MOD fator
    (72) termo -> . fator
    (73) fator -> . NUMBER
    (74) fator -> . REAL_NUMBER
    (75) fator -> . STRING_LITERAL
    (76) fator -> . ID
    (77) fator -> . ID [ expressao ]
    (78) fator -> . ID ( expressao )
    (79) fator -> . TRUE
    (80) fator -> . FALSE
    (81) fator -> . ( expressao )
    (82) fator -> . NOT fator
    (83) fator -> . - fator

    NUMBER          shift and go to state 52
    REAL_NUMBER     shift and go to state 53
    STRING_LITERAL  shift and go to state 54
    ID              shift and go to state 55
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    (               shift and go to state 56
    NOT             shift and go to state 59
    -               shift and go to state 50

    lista_expressao                shift and go to state 76
    expressao                      shift and go to state 75
    expressao_logica               shift and go to state 46
    expressao_relacional           shift and go to state 47
    expressao_aritmetica           shift and go to state 48
    termo                          shift and go to state 49
    fator                          shift and go to state 51

state 45

    (45) if_statement -> IF expressao . THEN instrucao ELSE instrucao
    (46) if_statement -> IF expressao . THEN instrucao

    THEN            shift and go to state 77


state 46

    (53) expressao -> expressao_logica .
    (54) expressao_logica -> expressao_logica . OR expressao_relacional
    (55) expressao_logica -> expressao_logica . AND expressao_relacional

    THEN            reduce using rule 53 (expressao -> expressao_logica .)
    DO              reduce using rule 53 (expressao -> expressao_logica .)
    END             reduce using rule 53 (expressao -> expressao_logica .)
    ;               reduce using rule 53 (expressao -> expressao_logica .)
    ELSE            reduce using rule 53 (expressao -> expressao_logica .)
    ]               reduce using rule 53 (expressao -> expressao_logica .)
    )               reduce using rule 53 (expressao -> expressao_logica .)
    ,               reduce using rule 53 (expressao -> expressao_logica .)
    TO              reduce using rule 53 (expressao -> expressao_logica .)
    DOWNTO          reduce using rule 53 (expressao -> expressao_logica .)
    OR              shift and go to state 78
    AND             shift and go to state 79


state 47

    (56) expressao_logica -> expressao_relacional .

    OR              reduce using rule 56 (expressao_logica -> expressao_relacional .)
    AND             reduce using rule 56 (expressao_logica -> expressao_relacional .)
    THEN            reduce using rule 56 (expressao_logica -> expressao_relacional .)
    DO              reduce using rule 56 (expressao_logica -> expressao_relacional .)
    END             reduce using rule 56 (expressao_logica -> expressao_relacional .)
    ;               reduce using rule 56 (expressao_logica -> expressao_relacional .)
    ELSE            reduce using rule 56 (expressao_logica -> expressao_relacional .)
    ]               reduce using rule 56 (expressao_logica -> expressao_relacional .)
    )               reduce using rule 56 (expressao_logica -> expressao_relacional .)
    ,               reduce using rule 56 (expressao_logica -> expressao_relacional .)
    TO              reduce using rule 56 (expressao_logica -> expressao_relacional .)
    DOWNTO          reduce using rule 56 (expressao_logica -> expressao_relacional .)


state 48

    (57) expressao_relacional -> expressao_aritmetica . operador_relacional expressao_aritmetica
    (58) expressao_relacional -> expressao_aritmetica .
    (65) expressao_aritmetica -> expressao_aritmetica . + termo
    (66) expressao_aritmetica -> expressao_aritmetica . - termo
    (59) operador_relacional -> . EQUALS
    (60) operador_relacional -> . NOT_EQUALS
    (61) operador_relacional -> . LESS_THAN
    (62) operador_relacional -> . LESS_THAN_OR_EQUAL_TO
    (63) operador_relacional -> . GREATER_THAN
    (64) operador_relacional -> . GREATER_THAN_OR_EQUAL_TO

    OR              reduce using rule 58 (expressao_relacional -> expressao_aritmetica .)
    AND             reduce using rule 58 (expressao_relacional -> expressao_aritmetica .)
    THEN            reduce using rule 58 (expressao_relacional -> expressao_aritmetica .)
    DO              reduce using rule 58 (expressao_relacional -> expressao_aritmetica .)
    END             reduce using rule 58 (expressao_relacional -> expressao_aritmetica .)
    ;               reduce using rule 58 (expressao_relacional -> expressao_aritmetica .)
    ELSE            reduce using rule 58 (expressao_relacional -> expressao_aritmetica .)
    ]               reduce using rule 58 (expressao_relacional -> expressao_aritmetica .)
    )               reduce using rule 58 (expressao_relacional -> expressao_aritmetica .)
    ,               reduce using rule 58 (expressao_relacional -> expressao_aritmetica .)
    TO              reduce using rule 58 (expressao_relacional -> expressao_aritmetica .)
    DOWNTO          reduce using rule 58 (expressao_relacional -> expressao_aritmetica .)
    +               shift and go to state 81
    -               shift and go to state 82
    EQUALS          shift and go to state 83
    NOT_EQUALS      shift and go to state 84
    LESS_THAN       shift and go to state 85
    LESS_THAN_OR_EQUAL_TO shift and go to state 86
    GREATER_THAN    shift and go to state 87
    GREATER_THAN_OR_EQUAL_TO shift and go to state 88

    operador_relacional            shift and go to state 80

state 49

    (67) expressao_aritmetica -> termo .
    (68) termo -> termo . * fator
    (69) termo -> termo . / fator
    (70) termo -> termo . DIV fator
    (71) termo -> termo . MOD fator

    +               reduce using rule 67 (expressao_aritmetica -> termo .)
    -               reduce using rule 67 (expressao_aritmetica -> termo .)
    EQUALS          reduce using rule 67 (expressao_aritmetica -> termo .)
    NOT_EQUALS      reduce using rule 67 (expressao_aritmetica -> termo .)
    LESS_THAN       reduce using rule 67 (expressao_aritmetica -> termo .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 67 (expressao_aritmetica -> termo .)
    GREATER_THAN    reduce using rule 67 (expressao_aritmetica -> termo .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 67 (expressao_aritmetica -> termo .)
    OR              reduce using rule 67 (expressao_aritmetica -> termo .)
    AND             reduce using rule 67 (expressao_aritmetica -> termo .)
    THEN            reduce using rule 67 (expressao_aritmetica -> termo .)
    DO              reduce using rule 67 (expressao_aritmetica -> termo .)
    END             reduce using rule 67 (expressao_aritmetica -> termo .)
    ;               reduce using rule 67 (expressao_aritmetica -> termo .)
    ELSE            reduce using rule 67 (expressao_aritmetica -> termo .)
    ]               reduce using rule 67 (expressao_aritmetica -> termo .)
    )               reduce using rule 67 (expressao_aritmetica -> termo .)
    ,               reduce using rule 67 (expressao_aritmetica -> termo .)
    TO              reduce using rule 67 (expressao_aritmetica -> termo .)
    DOWNTO          reduce using rule 67 (expressao_aritmetica -> termo .)
    *               shift and go to state 89
    /               shift and go to state 90
    DIV             shift and go to state 91
    MOD             shift and go to state 92


state 50

    (83) fator -> - . fator
    (73) fator -> . NUMBER
    (74) fator -> . REAL_NUMBER
    (75) fator -> . STRING_LITERAL
    (76) fator -> . ID
    (77) fator -> . ID [ expressao ]
    (78) fator -> . ID ( expressao )
    (79) fator -> . TRUE
    (80) fator -> . FALSE
    (81) fator -> . ( expressao )
    (82) fator -> . NOT fator
    (83) fator -> . - fator

    NUMBER          shift and go to state 52
    REAL_NUMBER     shift and go to state 53
    STRING_LITERAL  shift and go to state 54
    ID              shift and go to state 55
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    (               shift and go to state 56
    NOT             shift and go to state 59
    -               shift and go to state 50

    fator                          shift and go to state 93

state 51

    (72) termo -> fator .

    *               reduce using rule 72 (termo -> fator .)
    /               reduce using rule 72 (termo -> fator .)
    DIV             reduce using rule 72 (termo -> fator .)
    MOD             reduce using rule 72 (termo -> fator .)
    +               reduce using rule 72 (termo -> fator .)
    -               reduce using rule 72 (termo -> fator .)
    EQUALS          reduce using rule 72 (termo -> fator .)
    NOT_EQUALS      reduce using rule 72 (termo -> fator .)
    LESS_THAN       reduce using rule 72 (termo -> fator .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 72 (termo -> fator .)
    GREATER_THAN    reduce using rule 72 (termo -> fator .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 72 (termo -> fator .)
    OR              reduce using rule 72 (termo -> fator .)
    AND             reduce using rule 72 (termo -> fator .)
    THEN            reduce using rule 72 (termo -> fator .)
    DO              reduce using rule 72 (termo -> fator .)
    END             reduce using rule 72 (termo -> fator .)
    ;               reduce using rule 72 (termo -> fator .)
    ELSE            reduce using rule 72 (termo -> fator .)
    ]               reduce using rule 72 (termo -> fator .)
    )               reduce using rule 72 (termo -> fator .)
    ,               reduce using rule 72 (termo -> fator .)
    TO              reduce using rule 72 (termo -> fator .)
    DOWNTO          reduce using rule 72 (termo -> fator .)


state 52

    (73) fator -> NUMBER .

    *               reduce using rule 73 (fator -> NUMBER .)
    /               reduce using rule 73 (fator -> NUMBER .)
    DIV             reduce using rule 73 (fator -> NUMBER .)
    MOD             reduce using rule 73 (fator -> NUMBER .)
    +               reduce using rule 73 (fator -> NUMBER .)
    -               reduce using rule 73 (fator -> NUMBER .)
    EQUALS          reduce using rule 73 (fator -> NUMBER .)
    NOT_EQUALS      reduce using rule 73 (fator -> NUMBER .)
    LESS_THAN       reduce using rule 73 (fator -> NUMBER .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 73 (fator -> NUMBER .)
    GREATER_THAN    reduce using rule 73 (fator -> NUMBER .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 73 (fator -> NUMBER .)
    OR              reduce using rule 73 (fator -> NUMBER .)
    AND             reduce using rule 73 (fator -> NUMBER .)
    THEN            reduce using rule 73 (fator -> NUMBER .)
    DO              reduce using rule 73 (fator -> NUMBER .)
    END             reduce using rule 73 (fator -> NUMBER .)
    ;               reduce using rule 73 (fator -> NUMBER .)
    ELSE            reduce using rule 73 (fator -> NUMBER .)
    ]               reduce using rule 73 (fator -> NUMBER .)
    )               reduce using rule 73 (fator -> NUMBER .)
    ,               reduce using rule 73 (fator -> NUMBER .)
    TO              reduce using rule 73 (fator -> NUMBER .)
    DOWNTO          reduce using rule 73 (fator -> NUMBER .)


state 53

    (74) fator -> REAL_NUMBER .

    *               reduce using rule 74 (fator -> REAL_NUMBER .)
    /               reduce using rule 74 (fator -> REAL_NUMBER .)
    DIV             reduce using rule 74 (fator -> REAL_NUMBER .)
    MOD             reduce using rule 74 (fator -> REAL_NUMBER .)
    +               reduce using rule 74 (fator -> REAL_NUMBER .)
    -               reduce using rule 74 (fator -> REAL_NUMBER .)
    EQUALS          reduce using rule 74 (fator -> REAL_NUMBER .)
    NOT_EQUALS      reduce using rule 74 (fator -> REAL_NUMBER .)
    LESS_THAN       reduce using rule 74 (fator -> REAL_NUMBER .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 74 (fator -> REAL_NUMBER .)
    GREATER_THAN    reduce using rule 74 (fator -> REAL_NUMBER .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 74 (fator -> REAL_NUMBER .)
    OR              reduce using rule 74 (fator -> REAL_NUMBER .)
    AND             reduce using rule 74 (fator -> REAL_NUMBER .)
    THEN            reduce using rule 74 (fator -> REAL_NUMBER .)
    DO              reduce using rule 74 (fator -> REAL_NUMBER .)
    END             reduce using rule 74 (fator -> REAL_NUMBER .)
    ;               reduce using rule 74 (fator -> REAL_NUMBER .)
    ELSE            reduce using rule 74 (fator -> REAL_NUMBER .)
    ]               reduce using rule 74 (fator -> REAL_NUMBER .)
    )               reduce using rule 74 (fator -> REAL_NUMBER .)
    ,               reduce using rule 74 (fator -> REAL_NUMBER .)
    TO              reduce using rule 74 (fator -> REAL_NUMBER .)
    DOWNTO          reduce using rule 74 (fator -> REAL_NUMBER .)


state 54

    (75) fator -> STRING_LITERAL .

    *               reduce using rule 75 (fator -> STRING_LITERAL .)
    /               reduce using rule 75 (fator -> STRING_LITERAL .)
    DIV             reduce using rule 75 (fator -> STRING_LITERAL .)
    MOD             reduce using rule 75 (fator -> STRING_LITERAL .)
    +               reduce using rule 75 (fator -> STRING_LITERAL .)
    -               reduce using rule 75 (fator -> STRING_LITERAL .)
    EQUALS          reduce using rule 75 (fator -> STRING_LITERAL .)
    NOT_EQUALS      reduce using rule 75 (fator -> STRING_LITERAL .)
    LESS_THAN       reduce using rule 75 (fator -> STRING_LITERAL .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 75 (fator -> STRING_LITERAL .)
    GREATER_THAN    reduce using rule 75 (fator -> STRING_LITERAL .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 75 (fator -> STRING_LITERAL .)
    OR              reduce using rule 75 (fator -> STRING_LITERAL .)
    AND             reduce using rule 75 (fator -> STRING_LITERAL .)
    THEN            reduce using rule 75 (fator -> STRING_LITERAL .)
    DO              reduce using rule 75 (fator -> STRING_LITERAL .)
    END             reduce using rule 75 (fator -> STRING_LITERAL .)
    ;               reduce using rule 75 (fator -> STRING_LITERAL .)
    ELSE            reduce using rule 75 (fator -> STRING_LITERAL .)
    ]               reduce using rule 75 (fator -> STRING_LITERAL .)
    )               reduce using rule 75 (fator -> STRING_LITERAL .)
    ,               reduce using rule 75 (fator -> STRING_LITERAL .)
    TO              reduce using rule 75 (fator -> STRING_LITERAL .)
    DOWNTO          reduce using rule 75 (fator -> STRING_LITERAL .)


state 55

    (76) fator -> ID .
    (77) fator -> ID . [ expressao ]
    (78) fator -> ID . ( expressao )

    *               reduce using rule 76 (fator -> ID .)
    /               reduce using rule 76 (fator -> ID .)
    DIV             reduce using rule 76 (fator -> ID .)
    MOD             reduce using rule 76 (fator -> ID .)
    +               reduce using rule 76 (fator -> ID .)
    -               reduce using rule 76 (fator -> ID .)
    EQUALS          reduce using rule 76 (fator -> ID .)
    NOT_EQUALS      reduce using rule 76 (fator -> ID .)
    LESS_THAN       reduce using rule 76 (fator -> ID .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 76 (fator -> ID .)
    GREATER_THAN    reduce using rule 76 (fator -> ID .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 76 (fator -> ID .)
    OR              reduce using rule 76 (fator -> ID .)
    AND             reduce using rule 76 (fator -> ID .)
    THEN            reduce using rule 76 (fator -> ID .)
    DO              reduce using rule 76 (fator -> ID .)
    END             reduce using rule 76 (fator -> ID .)
    ;               reduce using rule 76 (fator -> ID .)
    ELSE            reduce using rule 76 (fator -> ID .)
    ]               reduce using rule 76 (fator -> ID .)
    )               reduce using rule 76 (fator -> ID .)
    ,               reduce using rule 76 (fator -> ID .)
    TO              reduce using rule 76 (fator -> ID .)
    DOWNTO          reduce using rule 76 (fator -> ID .)
    [               shift and go to state 94
    (               shift and go to state 95


state 56

    (81) fator -> ( . expressao )
    (53) expressao -> . expressao_logica
    (54) expressao_logica -> . expressao_logica OR expressao_relacional
    (55) expressao_logica -> . expressao_logica AND expressao_relacional
    (56) expressao_logica -> . expressao_relacional
    (57) expressao_relacional -> . expressao_aritmetica operador_relacional expressao_aritmetica
    (58) expressao_relacional -> . expressao_aritmetica
    (65) expressao_aritmetica -> . expressao_aritmetica + termo
    (66) expressao_aritmetica -> . expressao_aritmetica - termo
    (67) expressao_aritmetica -> . termo
    (68) termo -> . termo * fator
    (69) termo -> . termo / fator
    (70) termo -> . termo DIV fator
    (71) termo -> . termo MOD fator
    (72) termo -> . fator
    (73) fator -> . NUMBER
    (74) fator -> . REAL_NUMBER
    (75) fator -> . STRING_LITERAL
    (76) fator -> . ID
    (77) fator -> . ID [ expressao ]
    (78) fator -> . ID ( expressao )
    (79) fator -> . TRUE
    (80) fator -> . FALSE
    (81) fator -> . ( expressao )
    (82) fator -> . NOT fator
    (83) fator -> . - fator

    NUMBER          shift and go to state 52
    REAL_NUMBER     shift and go to state 53
    STRING_LITERAL  shift and go to state 54
    ID              shift and go to state 55
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    (               shift and go to state 56
    NOT             shift and go to state 59
    -               shift and go to state 50

    expressao                      shift and go to state 96
    expressao_logica               shift and go to state 46
    expressao_relacional           shift and go to state 47
    expressao_aritmetica           shift and go to state 48
    termo                          shift and go to state 49
    fator                          shift and go to state 51

state 57

    (79) fator -> TRUE .

    *               reduce using rule 79 (fator -> TRUE .)
    /               reduce using rule 79 (fator -> TRUE .)
    DIV             reduce using rule 79 (fator -> TRUE .)
    MOD             reduce using rule 79 (fator -> TRUE .)
    +               reduce using rule 79 (fator -> TRUE .)
    -               reduce using rule 79 (fator -> TRUE .)
    EQUALS          reduce using rule 79 (fator -> TRUE .)
    NOT_EQUALS      reduce using rule 79 (fator -> TRUE .)
    LESS_THAN       reduce using rule 79 (fator -> TRUE .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 79 (fator -> TRUE .)
    GREATER_THAN    reduce using rule 79 (fator -> TRUE .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 79 (fator -> TRUE .)
    OR              reduce using rule 79 (fator -> TRUE .)
    AND             reduce using rule 79 (fator -> TRUE .)
    THEN            reduce using rule 79 (fator -> TRUE .)
    DO              reduce using rule 79 (fator -> TRUE .)
    END             reduce using rule 79 (fator -> TRUE .)
    ;               reduce using rule 79 (fator -> TRUE .)
    ELSE            reduce using rule 79 (fator -> TRUE .)
    ]               reduce using rule 79 (fator -> TRUE .)
    )               reduce using rule 79 (fator -> TRUE .)
    ,               reduce using rule 79 (fator -> TRUE .)
    TO              reduce using rule 79 (fator -> TRUE .)
    DOWNTO          reduce using rule 79 (fator -> TRUE .)


state 58

    (80) fator -> FALSE .

    *               reduce using rule 80 (fator -> FALSE .)
    /               reduce using rule 80 (fator -> FALSE .)
    DIV             reduce using rule 80 (fator -> FALSE .)
    MOD             reduce using rule 80 (fator -> FALSE .)
    +               reduce using rule 80 (fator -> FALSE .)
    -               reduce using rule 80 (fator -> FALSE .)
    EQUALS          reduce using rule 80 (fator -> FALSE .)
    NOT_EQUALS      reduce using rule 80 (fator -> FALSE .)
    LESS_THAN       reduce using rule 80 (fator -> FALSE .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 80 (fator -> FALSE .)
    GREATER_THAN    reduce using rule 80 (fator -> FALSE .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 80 (fator -> FALSE .)
    OR              reduce using rule 80 (fator -> FALSE .)
    AND             reduce using rule 80 (fator -> FALSE .)
    THEN            reduce using rule 80 (fator -> FALSE .)
    DO              reduce using rule 80 (fator -> FALSE .)
    END             reduce using rule 80 (fator -> FALSE .)
    ;               reduce using rule 80 (fator -> FALSE .)
    ELSE            reduce using rule 80 (fator -> FALSE .)
    ]               reduce using rule 80 (fator -> FALSE .)
    )               reduce using rule 80 (fator -> FALSE .)
    ,               reduce using rule 80 (fator -> FALSE .)
    TO              reduce using rule 80 (fator -> FALSE .)
    DOWNTO          reduce using rule 80 (fator -> FALSE .)


state 59

    (82) fator -> NOT . fator
    (73) fator -> . NUMBER
    (74) fator -> . REAL_NUMBER
    (75) fator -> . STRING_LITERAL
    (76) fator -> . ID
    (77) fator -> . ID [ expressao ]
    (78) fator -> . ID ( expressao )
    (79) fator -> . TRUE
    (80) fator -> . FALSE
    (81) fator -> . ( expressao )
    (82) fator -> . NOT fator
    (83) fator -> . - fator

    NUMBER          shift and go to state 52
    REAL_NUMBER     shift and go to state 53
    STRING_LITERAL  shift and go to state 54
    ID              shift and go to state 55
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    (               shift and go to state 56
    NOT             shift and go to state 59
    -               shift and go to state 50

    fator                          shift and go to state 97

state 60

    (47) while_statement -> WHILE expressao . DO instrucao

    DO              shift and go to state 98


state 61

    (48) for_statement -> FOR ID . ASSIGN expressao TO expressao DO instrucao
    (49) for_statement -> FOR ID . ASSIGN expressao DOWNTO expressao DO instrucao

    ASSIGN          shift and go to state 99


state 62

    (14) declaracoes_variaveis -> VAR declaracoes .

    BEGIN           reduce using rule 14 (declaracoes_variaveis -> VAR declaracoes .)


state 63

    (16) declaracoes -> declaracao .
    (17) declaracoes -> declaracao . declaracoes
    (16) declaracoes -> . declaracao
    (17) declaracoes -> . declaracao declaracoes
    (18) declaracao -> . lista_id : tipo ;
    (19) lista_id -> . ID
    (20) lista_id -> . lista_id , ID

    BEGIN           reduce using rule 16 (declaracoes -> declaracao .)
    ID              shift and go to state 65

    declaracao                     shift and go to state 63
    declaracoes                    shift and go to state 100
    lista_id                       shift and go to state 64

state 64

    (18) declaracao -> lista_id . : tipo ;
    (20) lista_id -> lista_id . , ID

    :               shift and go to state 101
    ,               shift and go to state 102


state 65

    (19) lista_id -> ID .

    :               reduce using rule 19 (lista_id -> ID .)
    ,               reduce using rule 19 (lista_id -> ID .)


state 66

    (8) funcoes -> funcao funcoes .

    VAR             reduce using rule 8 (funcoes -> funcao funcoes .)
    BEGIN           reduce using rule 8 (funcoes -> funcao funcoes .)


state 67

    (9) funcao -> ID ( . parametros ) : tipo ; bloco_funcao ;
    (11) parametros -> . lista_id : tipo
    (12) parametros -> . lista_id : tipo ; parametros
    (13) parametros -> .
    (19) lista_id -> . ID
    (20) lista_id -> . lista_id , ID

    )               reduce using rule 13 (parametros -> .)
    ID              shift and go to state 65

    parametros                     shift and go to state 103
    lista_id                       shift and go to state 104

state 68

    (50) bloco -> BEGIN lista_instrucoes END .

    END             reduce using rule 50 (bloco -> BEGIN lista_instrucoes END .)
    ;               reduce using rule 50 (bloco -> BEGIN lista_instrucoes END .)
    ELSE            reduce using rule 50 (bloco -> BEGIN lista_instrucoes END .)


state 69

    (29) lista_instrucoes -> lista_instrucoes ; instrucao .

    END             reduce using rule 29 (lista_instrucoes -> lista_instrucoes ; instrucao .)
    ;               reduce using rule 29 (lista_instrucoes -> lista_instrucoes ; instrucao .)


state 70

    (38) atribuicao -> ID ASSIGN expressao .

    END             reduce using rule 38 (atribuicao -> ID ASSIGN expressao .)
    ;               reduce using rule 38 (atribuicao -> ID ASSIGN expressao .)
    ELSE            reduce using rule 38 (atribuicao -> ID ASSIGN expressao .)


state 71

    (39) atribuicao -> ID [ expressao . ] ASSIGN expressao

    ]               shift and go to state 105


state 72

    (40) leitura -> READ ( expressao . )

    )               shift and go to state 106


state 73

    (41) leitura -> READLN ( expressao . )

    )               shift and go to state 107


state 74

    (43) escrita -> WRITELN ( lista_expressao . )
    (52) lista_expressao -> lista_expressao . , expressao

    )               shift and go to state 108
    ,               shift and go to state 109


state 75

    (51) lista_expressao -> expressao .

    )               reduce using rule 51 (lista_expressao -> expressao .)
    ,               reduce using rule 51 (lista_expressao -> expressao .)


state 76

    (44) escrita -> WRITE ( lista_expressao . )
    (52) lista_expressao -> lista_expressao . , expressao

    )               shift and go to state 110
    ,               shift and go to state 109


state 77

    (45) if_statement -> IF expressao THEN . instrucao ELSE instrucao
    (46) if_statement -> IF expressao THEN . instrucao
    (30) instrucao -> . atribuicao
    (31) instrucao -> . leitura
    (32) instrucao -> . escrita
    (33) instrucao -> . if_statement
    (34) instrucao -> . while_statement
    (35) instrucao -> . for_statement
    (36) instrucao -> . bloco
    (37) instrucao -> .
    (38) atribuicao -> . ID ASSIGN expressao
    (39) atribuicao -> . ID [ expressao ] ASSIGN expressao
    (40) leitura -> . READ ( expressao )
    (41) leitura -> . READLN ( expressao )
    (42) escrita -> . WRITELN
    (43) escrita -> . WRITELN ( lista_expressao )
    (44) escrita -> . WRITE ( lista_expressao )
    (45) if_statement -> . IF expressao THEN instrucao ELSE instrucao
    (46) if_statement -> . IF expressao THEN instrucao
    (47) while_statement -> . WHILE expressao DO instrucao
    (48) for_statement -> . FOR ID ASSIGN expressao TO expressao DO instrucao
    (49) for_statement -> . FOR ID ASSIGN expressao DOWNTO expressao DO instrucao
    (50) bloco -> . BEGIN lista_instrucoes END

    ELSE            reduce using rule 37 (instrucao -> .)
    END             reduce using rule 37 (instrucao -> .)
    ;               reduce using rule 37 (instrucao -> .)
    ID              shift and go to state 22
    READ            shift and go to state 23
    READLN          shift and go to state 24
    WRITELN         shift and go to state 25
    WRITE           shift and go to state 26
    IF              shift and go to state 27
    WHILE           shift and go to state 28
    FOR             shift and go to state 29
    BEGIN           shift and go to state 12

    instrucao                      shift and go to state 111
    atribuicao                     shift and go to state 15
    leitura                        shift and go to state 16
    escrita                        shift and go to state 17
    if_statement                   shift and go to state 18
    while_statement                shift and go to state 19
    for_statement                  shift and go to state 20
    bloco                          shift and go to state 21

state 78

    (54) expressao_logica -> expressao_logica OR . expressao_relacional
    (57) expressao_relacional -> . expressao_aritmetica operador_relacional expressao_aritmetica
    (58) expressao_relacional -> . expressao_aritmetica
    (65) expressao_aritmetica -> . expressao_aritmetica + termo
    (66) expressao_aritmetica -> . expressao_aritmetica - termo
    (67) expressao_aritmetica -> . termo
    (68) termo -> . termo * fator
    (69) termo -> . termo / fator
    (70) termo -> . termo DIV fator
    (71) termo -> . termo MOD fator
    (72) termo -> . fator
    (73) fator -> . NUMBER
    (74) fator -> . REAL_NUMBER
    (75) fator -> . STRING_LITERAL
    (76) fator -> . ID
    (77) fator -> . ID [ expressao ]
    (78) fator -> . ID ( expressao )
    (79) fator -> . TRUE
    (80) fator -> . FALSE
    (81) fator -> . ( expressao )
    (82) fator -> . NOT fator
    (83) fator -> . - fator

    NUMBER          shift and go to state 52
    REAL_NUMBER     shift and go to state 53
    STRING_LITERAL  shift and go to state 54
    ID              shift and go to state 55
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    (               shift and go to state 56
    NOT             shift and go to state 59
    -               shift and go to state 50

    expressao_relacional           shift and go to state 112
    expressao_aritmetica           shift and go to state 48
    termo                          shift and go to state 49
    fator                          shift and go to state 51

state 79

    (55) expressao_logica -> expressao_logica AND . expressao_relacional
    (57) expressao_relacional -> . expressao_aritmetica operador_relacional expressao_aritmetica
    (58) expressao_relacional -> . expressao_aritmetica
    (65) expressao_aritmetica -> . expressao_aritmetica + termo
    (66) expressao_aritmetica -> . expressao_aritmetica - termo
    (67) expressao_aritmetica -> . termo
    (68) termo -> . termo * fator
    (69) termo -> . termo / fator
    (70) termo -> . termo DIV fator
    (71) termo -> . termo MOD fator
    (72) termo -> . fator
    (73) fator -> . NUMBER
    (74) fator -> . REAL_NUMBER
    (75) fator -> . STRING_LITERAL
    (76) fator -> . ID
    (77) fator -> . ID [ expressao ]
    (78) fator -> . ID ( expressao )
    (79) fator -> . TRUE
    (80) fator -> . FALSE
    (81) fator -> . ( expressao )
    (82) fator -> . NOT fator
    (83) fator -> . - fator

    NUMBER          shift and go to state 52
    REAL_NUMBER     shift and go to state 53
    STRING_LITERAL  shift and go to state 54
    ID              shift and go to state 55
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    (               shift and go to state 56
    NOT             shift and go to state 59
    -               shift and go to state 50

    expressao_relacional           shift and go to state 113
    expressao_aritmetica           shift and go to state 48
    termo                          shift and go to state 49
    fator                          shift and go to state 51

state 80

    (57) expressao_relacional -> expressao_aritmetica operador_relacional . expressao_aritmetica
    (65) expressao_aritmetica -> . expressao_aritmetica + termo
    (66) expressao_aritmetica -> . expressao_aritmetica - termo
    (67) expressao_aritmetica -> . termo
    (68) termo -> . termo * fator
    (69) termo -> . termo / fator
    (70) termo -> . termo DIV fator
    (71) termo -> . termo MOD fator
    (72) termo -> . fator
    (73) fator -> . NUMBER
    (74) fator -> . REAL_NUMBER
    (75) fator -> . STRING_LITERAL
    (76) fator -> . ID
    (77) fator -> . ID [ expressao ]
    (78) fator -> . ID ( expressao )
    (79) fator -> . TRUE
    (80) fator -> . FALSE
    (81) fator -> . ( expressao )
    (82) fator -> . NOT fator
    (83) fator -> . - fator

    NUMBER          shift and go to state 52
    REAL_NUMBER     shift and go to state 53
    STRING_LITERAL  shift and go to state 54
    ID              shift and go to state 55
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    (               shift and go to state 56
    NOT             shift and go to state 59
    -               shift and go to state 50

    expressao_aritmetica           shift and go to state 114
    termo                          shift and go to state 49
    fator                          shift and go to state 51

state 81

    (65) expressao_aritmetica -> expressao_aritmetica + . termo
    (68) termo -> . termo * fator
    (69) termo -> . termo / fator
    (70) termo -> . termo DIV fator
    (71) termo -> . termo MOD fator
    (72) termo -> . fator
    (73) fator -> . NUMBER
    (74) fator -> . REAL_NUMBER
    (75) fator -> . STRING_LITERAL
    (76) fator -> . ID
    (77) fator -> . ID [ expressao ]
    (78) fator -> . ID ( expressao )
    (79) fator -> . TRUE
    (80) fator -> . FALSE
    (81) fator -> . ( expressao )
    (82) fator -> . NOT fator
    (83) fator -> . - fator

    NUMBER          shift and go to state 52
    REAL_NUMBER     shift and go to state 53
    STRING_LITERAL  shift and go to state 54
    ID              shift and go to state 55
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    (               shift and go to state 56
    NOT             shift and go to state 59
    -               shift and go to state 50

    termo                          shift and go to state 115
    fator                          shift and go to state 51

state 82

    (66) expressao_aritmetica -> expressao_aritmetica - . termo
    (68) termo -> . termo * fator
    (69) termo -> . termo / fator
    (70) termo -> . termo DIV fator
    (71) termo -> . termo MOD fator
    (72) termo -> . fator
    (73) fator -> . NUMBER
    (74) fator -> . REAL_NUMBER
    (75) fator -> . STRING_LITERAL
    (76) fator -> . ID
    (77) fator -> . ID [ expressao ]
    (78) fator -> . ID ( expressao )
    (79) fator -> . TRUE
    (80) fator -> . FALSE
    (81) fator -> . ( expressao )
    (82) fator -> . NOT fator
    (83) fator -> . - fator

    NUMBER          shift and go to state 52
    REAL_NUMBER     shift and go to state 53
    STRING_LITERAL  shift and go to state 54
    ID              shift and go to state 55
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    (               shift and go to state 56
    NOT             shift and go to state 59
    -               shift and go to state 50

    termo                          shift and go to state 116
    fator                          shift and go to state 51

state 83

    (59) operador_relacional -> EQUALS .

    NUMBER          reduce using rule 59 (operador_relacional -> EQUALS .)
    REAL_NUMBER     reduce using rule 59 (operador_relacional -> EQUALS .)
    STRING_LITERAL  reduce using rule 59 (operador_relacional -> EQUALS .)
    ID              reduce using rule 59 (operador_relacional -> EQUALS .)
    TRUE            reduce using rule 59 (operador_relacional -> EQUALS .)
    FALSE           reduce using rule 59 (operador_relacional -> EQUALS .)
    (               reduce using rule 59 (operador_relacional -> EQUALS .)
    NOT             reduce using rule 59 (operador_relacional -> EQUALS .)
    -               reduce using rule 59 (operador_relacional -> EQUALS .)


state 84

    (60) operador_relacional -> NOT_EQUALS .

    NUMBER          reduce using rule 60 (operador_relacional -> NOT_EQUALS .)
    REAL_NUMBER     reduce using rule 60 (operador_relacional -> NOT_EQUALS .)
    STRING_LITERAL  reduce using rule 60 (operador_relacional -> NOT_EQUALS .)
    ID              reduce using rule 60 (operador_relacional -> NOT_EQUALS .)
    TRUE            reduce using rule 60 (operador_relacional -> NOT_EQUALS .)
    FALSE           reduce using rule 60 (operador_relacional -> NOT_EQUALS .)
    (               reduce using rule 60 (operador_relacional -> NOT_EQUALS .)
    NOT             reduce using rule 60 (operador_relacional -> NOT_EQUALS .)
    -               reduce using rule 60 (operador_relacional -> NOT_EQUALS .)


state 85

    (61) operador_relacional -> LESS_THAN .

    NUMBER          reduce using rule 61 (operador_relacional -> LESS_THAN .)
    REAL_NUMBER     reduce using rule 61 (operador_relacional -> LESS_THAN .)
    STRING_LITERAL  reduce using rule 61 (operador_relacional -> LESS_THAN .)
    ID              reduce using rule 61 (operador_relacional -> LESS_THAN .)
    TRUE            reduce using rule 61 (operador_relacional -> LESS_THAN .)
    FALSE           reduce using rule 61 (operador_relacional -> LESS_THAN .)
    (               reduce using rule 61 (operador_relacional -> LESS_THAN .)
    NOT             reduce using rule 61 (operador_relacional -> LESS_THAN .)
    -               reduce using rule 61 (operador_relacional -> LESS_THAN .)


state 86

    (62) operador_relacional -> LESS_THAN_OR_EQUAL_TO .

    NUMBER          reduce using rule 62 (operador_relacional -> LESS_THAN_OR_EQUAL_TO .)
    REAL_NUMBER     reduce using rule 62 (operador_relacional -> LESS_THAN_OR_EQUAL_TO .)
    STRING_LITERAL  reduce using rule 62 (operador_relacional -> LESS_THAN_OR_EQUAL_TO .)
    ID              reduce using rule 62 (operador_relacional -> LESS_THAN_OR_EQUAL_TO .)
    TRUE            reduce using rule 62 (operador_relacional -> LESS_THAN_OR_EQUAL_TO .)
    FALSE           reduce using rule 62 (operador_relacional -> LESS_THAN_OR_EQUAL_TO .)
    (               reduce using rule 62 (operador_relacional -> LESS_THAN_OR_EQUAL_TO .)
    NOT             reduce using rule 62 (operador_relacional -> LESS_THAN_OR_EQUAL_TO .)
    -               reduce using rule 62 (operador_relacional -> LESS_THAN_OR_EQUAL_TO .)


state 87

    (63) operador_relacional -> GREATER_THAN .

    NUMBER          reduce using rule 63 (operador_relacional -> GREATER_THAN .)
    REAL_NUMBER     reduce using rule 63 (operador_relacional -> GREATER_THAN .)
    STRING_LITERAL  reduce using rule 63 (operador_relacional -> GREATER_THAN .)
    ID              reduce using rule 63 (operador_relacional -> GREATER_THAN .)
    TRUE            reduce using rule 63 (operador_relacional -> GREATER_THAN .)
    FALSE           reduce using rule 63 (operador_relacional -> GREATER_THAN .)
    (               reduce using rule 63 (operador_relacional -> GREATER_THAN .)
    NOT             reduce using rule 63 (operador_relacional -> GREATER_THAN .)
    -               reduce using rule 63 (operador_relacional -> GREATER_THAN .)


state 88

    (64) operador_relacional -> GREATER_THAN_OR_EQUAL_TO .

    NUMBER          reduce using rule 64 (operador_relacional -> GREATER_THAN_OR_EQUAL_TO .)
    REAL_NUMBER     reduce using rule 64 (operador_relacional -> GREATER_THAN_OR_EQUAL_TO .)
    STRING_LITERAL  reduce using rule 64 (operador_relacional -> GREATER_THAN_OR_EQUAL_TO .)
    ID              reduce using rule 64 (operador_relacional -> GREATER_THAN_OR_EQUAL_TO .)
    TRUE            reduce using rule 64 (operador_relacional -> GREATER_THAN_OR_EQUAL_TO .)
    FALSE           reduce using rule 64 (operador_relacional -> GREATER_THAN_OR_EQUAL_TO .)
    (               reduce using rule 64 (operador_relacional -> GREATER_THAN_OR_EQUAL_TO .)
    NOT             reduce using rule 64 (operador_relacional -> GREATER_THAN_OR_EQUAL_TO .)
    -               reduce using rule 64 (operador_relacional -> GREATER_THAN_OR_EQUAL_TO .)


state 89

    (68) termo -> termo * . fator
    (73) fator -> . NUMBER
    (74) fator -> . REAL_NUMBER
    (75) fator -> . STRING_LITERAL
    (76) fator -> . ID
    (77) fator -> . ID [ expressao ]
    (78) fator -> . ID ( expressao )
    (79) fator -> . TRUE
    (80) fator -> . FALSE
    (81) fator -> . ( expressao )
    (82) fator -> . NOT fator
    (83) fator -> . - fator

    NUMBER          shift and go to state 52
    REAL_NUMBER     shift and go to state 53
    STRING_LITERAL  shift and go to state 54
    ID              shift and go to state 55
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    (               shift and go to state 56
    NOT             shift and go to state 59
    -               shift and go to state 50

    fator                          shift and go to state 117

state 90

    (69) termo -> termo / . fator
    (73) fator -> . NUMBER
    (74) fator -> . REAL_NUMBER
    (75) fator -> . STRING_LITERAL
    (76) fator -> . ID
    (77) fator -> . ID [ expressao ]
    (78) fator -> . ID ( expressao )
    (79) fator -> . TRUE
    (80) fator -> . FALSE
    (81) fator -> . ( expressao )
    (82) fator -> . NOT fator
    (83) fator -> . - fator

    NUMBER          shift and go to state 52
    REAL_NUMBER     shift and go to state 53
    STRING_LITERAL  shift and go to state 54
    ID              shift and go to state 55
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    (               shift and go to state 56
    NOT             shift and go to state 59
    -               shift and go to state 50

    fator                          shift and go to state 118

state 91

    (70) termo -> termo DIV . fator
    (73) fator -> . NUMBER
    (74) fator -> . REAL_NUMBER
    (75) fator -> . STRING_LITERAL
    (76) fator -> . ID
    (77) fator -> . ID [ expressao ]
    (78) fator -> . ID ( expressao )
    (79) fator -> . TRUE
    (80) fator -> . FALSE
    (81) fator -> . ( expressao )
    (82) fator -> . NOT fator
    (83) fator -> . - fator

    NUMBER          shift and go to state 52
    REAL_NUMBER     shift and go to state 53
    STRING_LITERAL  shift and go to state 54
    ID              shift and go to state 55
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    (               shift and go to state 56
    NOT             shift and go to state 59
    -               shift and go to state 50

    fator                          shift and go to state 119

state 92

    (71) termo -> termo MOD . fator
    (73) fator -> . NUMBER
    (74) fator -> . REAL_NUMBER
    (75) fator -> . STRING_LITERAL
    (76) fator -> . ID
    (77) fator -> . ID [ expressao ]
    (78) fator -> . ID ( expressao )
    (79) fator -> . TRUE
    (80) fator -> . FALSE
    (81) fator -> . ( expressao )
    (82) fator -> . NOT fator
    (83) fator -> . - fator

    NUMBER          shift and go to state 52
    REAL_NUMBER     shift and go to state 53
    STRING_LITERAL  shift and go to state 54
    ID              shift and go to state 55
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    (               shift and go to state 56
    NOT             shift and go to state 59
    -               shift and go to state 50

    fator                          shift and go to state 120

state 93

    (83) fator -> - fator .

    *               reduce using rule 83 (fator -> - fator .)
    /               reduce using rule 83 (fator -> - fator .)
    DIV             reduce using rule 83 (fator -> - fator .)
    MOD             reduce using rule 83 (fator -> - fator .)
    +               reduce using rule 83 (fator -> - fator .)
    -               reduce using rule 83 (fator -> - fator .)
    EQUALS          reduce using rule 83 (fator -> - fator .)
    NOT_EQUALS      reduce using rule 83 (fator -> - fator .)
    LESS_THAN       reduce using rule 83 (fator -> - fator .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 83 (fator -> - fator .)
    GREATER_THAN    reduce using rule 83 (fator -> - fator .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 83 (fator -> - fator .)
    OR              reduce using rule 83 (fator -> - fator .)
    AND             reduce using rule 83 (fator -> - fator .)
    THEN            reduce using rule 83 (fator -> - fator .)
    DO              reduce using rule 83 (fator -> - fator .)
    END             reduce using rule 83 (fator -> - fator .)
    ;               reduce using rule 83 (fator -> - fator .)
    ELSE            reduce using rule 83 (fator -> - fator .)
    ]               reduce using rule 83 (fator -> - fator .)
    )               reduce using rule 83 (fator -> - fator .)
    ,               reduce using rule 83 (fator -> - fator .)
    TO              reduce using rule 83 (fator -> - fator .)
    DOWNTO          reduce using rule 83 (fator -> - fator .)


state 94

    (77) fator -> ID [ . expressao ]
    (53) expressao -> . expressao_logica
    (54) expressao_logica -> . expressao_logica OR expressao_relacional
    (55) expressao_logica -> . expressao_logica AND expressao_relacional
    (56) expressao_logica -> . expressao_relacional
    (57) expressao_relacional -> . expressao_aritmetica operador_relacional expressao_aritmetica
    (58) expressao_relacional -> . expressao_aritmetica
    (65) expressao_aritmetica -> . expressao_aritmetica + termo
    (66) expressao_aritmetica -> . expressao_aritmetica - termo
    (67) expressao_aritmetica -> . termo
    (68) termo -> . termo * fator
    (69) termo -> . termo / fator
    (70) termo -> . termo DIV fator
    (71) termo -> . termo MOD fator
    (72) termo -> . fator
    (73) fator -> . NUMBER
    (74) fator -> . REAL_NUMBER
    (75) fator -> . STRING_LITERAL
    (76) fator -> . ID
    (77) fator -> . ID [ expressao ]
    (78) fator -> . ID ( expressao )
    (79) fator -> . TRUE
    (80) fator -> . FALSE
    (81) fator -> . ( expressao )
    (82) fator -> . NOT fator
    (83) fator -> . - fator

    NUMBER          shift and go to state 52
    REAL_NUMBER     shift and go to state 53
    STRING_LITERAL  shift and go to state 54
    ID              shift and go to state 55
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    (               shift and go to state 56
    NOT             shift and go to state 59
    -               shift and go to state 50

    expressao                      shift and go to state 121
    expressao_logica               shift and go to state 46
    expressao_relacional           shift and go to state 47
    expressao_aritmetica           shift and go to state 48
    termo                          shift and go to state 49
    fator                          shift and go to state 51

state 95

    (78) fator -> ID ( . expressao )
    (53) expressao -> . expressao_logica
    (54) expressao_logica -> . expressao_logica OR expressao_relacional
    (55) expressao_logica -> . expressao_logica AND expressao_relacional
    (56) expressao_logica -> . expressao_relacional
    (57) expressao_relacional -> . expressao_aritmetica operador_relacional expressao_aritmetica
    (58) expressao_relacional -> . expressao_aritmetica
    (65) expressao_aritmetica -> . expressao_aritmetica + termo
    (66) expressao_aritmetica -> . expressao_aritmetica - termo
    (67) expressao_aritmetica -> . termo
    (68) termo -> . termo * fator
    (69) termo -> . termo / fator
    (70) termo -> . termo DIV fator
    (71) termo -> . termo MOD fator
    (72) termo -> . fator
    (73) fator -> . NUMBER
    (74) fator -> . REAL_NUMBER
    (75) fator -> . STRING_LITERAL
    (76) fator -> . ID
    (77) fator -> . ID [ expressao ]
    (78) fator -> . ID ( expressao )
    (79) fator -> . TRUE
    (80) fator -> . FALSE
    (81) fator -> . ( expressao )
    (82) fator -> . NOT fator
    (83) fator -> . - fator

    NUMBER          shift and go to state 52
    REAL_NUMBER     shift and go to state 53
    STRING_LITERAL  shift and go to state 54
    ID              shift and go to state 55
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    (               shift and go to state 56
    NOT             shift and go to state 59
    -               shift and go to state 50

    expressao                      shift and go to state 122
    expressao_logica               shift and go to state 46
    expressao_relacional           shift and go to state 47
    expressao_aritmetica           shift and go to state 48
    termo                          shift and go to state 49
    fator                          shift and go to state 51

state 96

    (81) fator -> ( expressao . )

    )               shift and go to state 123


state 97

    (82) fator -> NOT fator .

    *               reduce using rule 82 (fator -> NOT fator .)
    /               reduce using rule 82 (fator -> NOT fator .)
    DIV             reduce using rule 82 (fator -> NOT fator .)
    MOD             reduce using rule 82 (fator -> NOT fator .)
    +               reduce using rule 82 (fator -> NOT fator .)
    -               reduce using rule 82 (fator -> NOT fator .)
    EQUALS          reduce using rule 82 (fator -> NOT fator .)
    NOT_EQUALS      reduce using rule 82 (fator -> NOT fator .)
    LESS_THAN       reduce using rule 82 (fator -> NOT fator .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 82 (fator -> NOT fator .)
    GREATER_THAN    reduce using rule 82 (fator -> NOT fator .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 82 (fator -> NOT fator .)
    OR              reduce using rule 82 (fator -> NOT fator .)
    AND             reduce using rule 82 (fator -> NOT fator .)
    THEN            reduce using rule 82 (fator -> NOT fator .)
    DO              reduce using rule 82 (fator -> NOT fator .)
    END             reduce using rule 82 (fator -> NOT fator .)
    ;               reduce using rule 82 (fator -> NOT fator .)
    ELSE            reduce using rule 82 (fator -> NOT fator .)
    ]               reduce using rule 82 (fator -> NOT fator .)
    )               reduce using rule 82 (fator -> NOT fator .)
    ,               reduce using rule 82 (fator -> NOT fator .)
    TO              reduce using rule 82 (fator -> NOT fator .)
    DOWNTO          reduce using rule 82 (fator -> NOT fator .)


state 98

    (47) while_statement -> WHILE expressao DO . instrucao
    (30) instrucao -> . atribuicao
    (31) instrucao -> . leitura
    (32) instrucao -> . escrita
    (33) instrucao -> . if_statement
    (34) instrucao -> . while_statement
    (35) instrucao -> . for_statement
    (36) instrucao -> . bloco
    (37) instrucao -> .
    (38) atribuicao -> . ID ASSIGN expressao
    (39) atribuicao -> . ID [ expressao ] ASSIGN expressao
    (40) leitura -> . READ ( expressao )
    (41) leitura -> . READLN ( expressao )
    (42) escrita -> . WRITELN
    (43) escrita -> . WRITELN ( lista_expressao )
    (44) escrita -> . WRITE ( lista_expressao )
    (45) if_statement -> . IF expressao THEN instrucao ELSE instrucao
    (46) if_statement -> . IF expressao THEN instrucao
    (47) while_statement -> . WHILE expressao DO instrucao
    (48) for_statement -> . FOR ID ASSIGN expressao TO expressao DO instrucao
    (49) for_statement -> . FOR ID ASSIGN expressao DOWNTO expressao DO instrucao
    (50) bloco -> . BEGIN lista_instrucoes END

    ELSE            reduce using rule 37 (instrucao -> .)
    END             reduce using rule 37 (instrucao -> .)
    ;               reduce using rule 37 (instrucao -> .)
    ID              shift and go to state 22
    READ            shift and go to state 23
    READLN          shift and go to state 24
    WRITELN         shift and go to state 25
    WRITE           shift and go to state 26
    IF              shift and go to state 27
    WHILE           shift and go to state 28
    FOR             shift and go to state 29
    BEGIN           shift and go to state 12

    instrucao                      shift and go to state 124
    atribuicao                     shift and go to state 15
    leitura                        shift and go to state 16
    escrita                        shift and go to state 17
    if_statement                   shift and go to state 18
    while_statement                shift and go to state 19
    for_statement                  shift and go to state 20
    bloco                          shift and go to state 21

state 99

    (48) for_statement -> FOR ID ASSIGN . expressao TO expressao DO instrucao
    (49) for_statement -> FOR ID ASSIGN . expressao DOWNTO expressao DO instrucao
    (53) expressao -> . expressao_logica
    (54) expressao_logica -> . expressao_logica OR expressao_relacional
    (55) expressao_logica -> . expressao_logica AND expressao_relacional
    (56) expressao_logica -> . expressao_relacional
    (57) expressao_relacional -> . expressao_aritmetica operador_relacional expressao_aritmetica
    (58) expressao_relacional -> . expressao_aritmetica
    (65) expressao_aritmetica -> . expressao_aritmetica + termo
    (66) expressao_aritmetica -> . expressao_aritmetica - termo
    (67) expressao_aritmetica -> . termo
    (68) termo -> . termo * fator
    (69) termo -> . termo / fator
    (70) termo -> . termo DIV fator
    (71) termo -> . termo MOD fator
    (72) termo -> . fator
    (73) fator -> . NUMBER
    (74) fator -> . REAL_NUMBER
    (75) fator -> . STRING_LITERAL
    (76) fator -> . ID
    (77) fator -> . ID [ expressao ]
    (78) fator -> . ID ( expressao )
    (79) fator -> . TRUE
    (80) fator -> . FALSE
    (81) fator -> . ( expressao )
    (82) fator -> . NOT fator
    (83) fator -> . - fator

    NUMBER          shift and go to state 52
    REAL_NUMBER     shift and go to state 53
    STRING_LITERAL  shift and go to state 54
    ID              shift and go to state 55
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    (               shift and go to state 56
    NOT             shift and go to state 59
    -               shift and go to state 50

    expressao                      shift and go to state 125
    expressao_logica               shift and go to state 46
    expressao_relacional           shift and go to state 47
    expressao_aritmetica           shift and go to state 48
    termo                          shift and go to state 49
    fator                          shift and go to state 51

state 100

    (17) declaracoes -> declaracao declaracoes .

    BEGIN           reduce using rule 17 (declaracoes -> declaracao declaracoes .)


state 101

    (18) declaracao -> lista_id : . tipo ;
    (21) tipo -> . INTEGER
    (22) tipo -> . REAL
    (23) tipo -> . BOOLEAN
    (24) tipo -> . CHAR
    (25) tipo -> . STRING
    (26) tipo -> . ARRAY [ NUMBER RANGE NUMBER ] OF tipo

    INTEGER         shift and go to state 127
    REAL            shift and go to state 128
    BOOLEAN         shift and go to state 129
    CHAR            shift and go to state 130
    STRING          shift and go to state 131
    ARRAY           shift and go to state 132

    tipo                           shift and go to state 126

state 102

    (20) lista_id -> lista_id , . ID

    ID              shift and go to state 133


state 103

    (9) funcao -> ID ( parametros . ) : tipo ; bloco_funcao ;

    )               shift and go to state 134


state 104

    (11) parametros -> lista_id . : tipo
    (12) parametros -> lista_id . : tipo ; parametros
    (20) lista_id -> lista_id . , ID

    :               shift and go to state 135
    ,               shift and go to state 102


state 105

    (39) atribuicao -> ID [ expressao ] . ASSIGN expressao

    ASSIGN          shift and go to state 136


state 106

    (40) leitura -> READ ( expressao ) .

    END             reduce using rule 40 (leitura -> READ ( expressao ) .)
    ;               reduce using rule 40 (leitura -> READ ( expressao ) .)
    ELSE            reduce using rule 40 (leitura -> READ ( expressao ) .)


state 107

    (41) leitura -> READLN ( expressao ) .

    END             reduce using rule 41 (leitura -> READLN ( expressao ) .)
    ;               reduce using rule 41 (leitura -> READLN ( expressao ) .)
    ELSE            reduce using rule 41 (leitura -> READLN ( expressao ) .)


state 108

    (43) escrita -> WRITELN ( lista_expressao ) .

    END             reduce using rule 43 (escrita -> WRITELN ( lista_expressao ) .)
    ;               reduce using rule 43 (escrita -> WRITELN ( lista_expressao ) .)
    ELSE            reduce using rule 43 (escrita -> WRITELN ( lista_expressao ) .)


state 109

    (52) lista_expressao -> lista_expressao , . expressao
    (53) expressao -> . expressao_logica
    (54) expressao_logica -> . expressao_logica OR expressao_relacional
    (55) expressao_logica -> . expressao_logica AND expressao_relacional
    (56) expressao_logica -> . expressao_relacional
    (57) expressao_relacional -> . expressao_aritmetica operador_relacional expressao_aritmetica
    (58) expressao_relacional -> . expressao_aritmetica
    (65) expressao_aritmetica -> . expressao_aritmetica + termo
    (66) expressao_aritmetica -> . expressao_aritmetica - termo
    (67) expressao_aritmetica -> . termo
    (68) termo -> . termo * fator
    (69) termo -> . termo / fator
    (70) termo -> . termo DIV fator
    (71) termo -> . termo MOD fator
    (72) termo -> . fator
    (73) fator -> . NUMBER
    (74) fator -> . REAL_NUMBER
    (75) fator -> . STRING_LITERAL
    (76) fator -> . ID
    (77) fator -> . ID [ expressao ]
    (78) fator -> . ID ( expressao )
    (79) fator -> . TRUE
    (80) fator -> . FALSE
    (81) fator -> . ( expressao )
    (82) fator -> . NOT fator
    (83) fator -> . - fator

    NUMBER          shift and go to state 52
    REAL_NUMBER     shift and go to state 53
    STRING_LITERAL  shift and go to state 54
    ID              shift and go to state 55
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    (               shift and go to state 56
    NOT             shift and go to state 59
    -               shift and go to state 50

    expressao                      shift and go to state 137
    expressao_logica               shift and go to state 46
    expressao_relacional           shift and go to state 47
    expressao_aritmetica           shift and go to state 48
    termo                          shift and go to state 49
    fator                          shift and go to state 51

state 110

    (44) escrita -> WRITE ( lista_expressao ) .

    END             reduce using rule 44 (escrita -> WRITE ( lista_expressao ) .)
    ;               reduce using rule 44 (escrita -> WRITE ( lista_expressao ) .)
    ELSE            reduce using rule 44 (escrita -> WRITE ( lista_expressao ) .)


state 111

    (45) if_statement -> IF expressao THEN instrucao . ELSE instrucao
    (46) if_statement -> IF expressao THEN instrucao .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 138
    END             reduce using rule 46 (if_statement -> IF expressao THEN instrucao .)
    ;               reduce using rule 46 (if_statement -> IF expressao THEN instrucao .)

  ! ELSE            [ reduce using rule 46 (if_statement -> IF expressao THEN instrucao .) ]


state 112

    (54) expressao_logica -> expressao_logica OR expressao_relacional .

    OR              reduce using rule 54 (expressao_logica -> expressao_logica OR expressao_relacional .)
    AND             reduce using rule 54 (expressao_logica -> expressao_logica OR expressao_relacional .)
    THEN            reduce using rule 54 (expressao_logica -> expressao_logica OR expressao_relacional .)
    DO              reduce using rule 54 (expressao_logica -> expressao_logica OR expressao_relacional .)
    END             reduce using rule 54 (expressao_logica -> expressao_logica OR expressao_relacional .)
    ;               reduce using rule 54 (expressao_logica -> expressao_logica OR expressao_relacional .)
    ELSE            reduce using rule 54 (expressao_logica -> expressao_logica OR expressao_relacional .)
    ]               reduce using rule 54 (expressao_logica -> expressao_logica OR expressao_relacional .)
    )               reduce using rule 54 (expressao_logica -> expressao_logica OR expressao_relacional .)
    ,               reduce using rule 54 (expressao_logica -> expressao_logica OR expressao_relacional .)
    TO              reduce using rule 54 (expressao_logica -> expressao_logica OR expressao_relacional .)
    DOWNTO          reduce using rule 54 (expressao_logica -> expressao_logica OR expressao_relacional .)


state 113

    (55) expressao_logica -> expressao_logica AND expressao_relacional .

    OR              reduce using rule 55 (expressao_logica -> expressao_logica AND expressao_relacional .)
    AND             reduce using rule 55 (expressao_logica -> expressao_logica AND expressao_relacional .)
    THEN            reduce using rule 55 (expressao_logica -> expressao_logica AND expressao_relacional .)
    DO              reduce using rule 55 (expressao_logica -> expressao_logica AND expressao_relacional .)
    END             reduce using rule 55 (expressao_logica -> expressao_logica AND expressao_relacional .)
    ;               reduce using rule 55 (expressao_logica -> expressao_logica AND expressao_relacional .)
    ELSE            reduce using rule 55 (expressao_logica -> expressao_logica AND expressao_relacional .)
    ]               reduce using rule 55 (expressao_logica -> expressao_logica AND expressao_relacional .)
    )               reduce using rule 55 (expressao_logica -> expressao_logica AND expressao_relacional .)
    ,               reduce using rule 55 (expressao_logica -> expressao_logica AND expressao_relacional .)
    TO              reduce using rule 55 (expressao_logica -> expressao_logica AND expressao_relacional .)
    DOWNTO          reduce using rule 55 (expressao_logica -> expressao_logica AND expressao_relacional .)


state 114

    (57) expressao_relacional -> expressao_aritmetica operador_relacional expressao_aritmetica .
    (65) expressao_aritmetica -> expressao_aritmetica . + termo
    (66) expressao_aritmetica -> expressao_aritmetica . - termo

    OR              reduce using rule 57 (expressao_relacional -> expressao_aritmetica operador_relacional expressao_aritmetica .)
    AND             reduce using rule 57 (expressao_relacional -> expressao_aritmetica operador_relacional expressao_aritmetica .)
    THEN            reduce using rule 57 (expressao_relacional -> expressao_aritmetica operador_relacional expressao_aritmetica .)
    DO              reduce using rule 57 (expressao_relacional -> expressao_aritmetica operador_relacional expressao_aritmetica .)
    END             reduce using rule 57 (expressao_relacional -> expressao_aritmetica operador_relacional expressao_aritmetica .)
    ;               reduce using rule 57 (expressao_relacional -> expressao_aritmetica operador_relacional expressao_aritmetica .)
    ELSE            reduce using rule 57 (expressao_relacional -> expressao_aritmetica operador_relacional expressao_aritmetica .)
    ]               reduce using rule 57 (expressao_relacional -> expressao_aritmetica operador_relacional expressao_aritmetica .)
    )               reduce using rule 57 (expressao_relacional -> expressao_aritmetica operador_relacional expressao_aritmetica .)
    ,               reduce using rule 57 (expressao_relacional -> expressao_aritmetica operador_relacional expressao_aritmetica .)
    TO              reduce using rule 57 (expressao_relacional -> expressao_aritmetica operador_relacional expressao_aritmetica .)
    DOWNTO          reduce using rule 57 (expressao_relacional -> expressao_aritmetica operador_relacional expressao_aritmetica .)
    +               shift and go to state 81
    -               shift and go to state 82


state 115

    (65) expressao_aritmetica -> expressao_aritmetica + termo .
    (68) termo -> termo . * fator
    (69) termo -> termo . / fator
    (70) termo -> termo . DIV fator
    (71) termo -> termo . MOD fator

    +               reduce using rule 65 (expressao_aritmetica -> expressao_aritmetica + termo .)
    -               reduce using rule 65 (expressao_aritmetica -> expressao_aritmetica + termo .)
    EQUALS          reduce using rule 65 (expressao_aritmetica -> expressao_aritmetica + termo .)
    NOT_EQUALS      reduce using rule 65 (expressao_aritmetica -> expressao_aritmetica + termo .)
    LESS_THAN       reduce using rule 65 (expressao_aritmetica -> expressao_aritmetica + termo .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 65 (expressao_aritmetica -> expressao_aritmetica + termo .)
    GREATER_THAN    reduce using rule 65 (expressao_aritmetica -> expressao_aritmetica + termo .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 65 (expressao_aritmetica -> expressao_aritmetica + termo .)
    OR              reduce using rule 65 (expressao_aritmetica -> expressao_aritmetica + termo .)
    AND             reduce using rule 65 (expressao_aritmetica -> expressao_aritmetica + termo .)
    THEN            reduce using rule 65 (expressao_aritmetica -> expressao_aritmetica + termo .)
    DO              reduce using rule 65 (expressao_aritmetica -> expressao_aritmetica + termo .)
    END             reduce using rule 65 (expressao_aritmetica -> expressao_aritmetica + termo .)
    ;               reduce using rule 65 (expressao_aritmetica -> expressao_aritmetica + termo .)
    ELSE            reduce using rule 65 (expressao_aritmetica -> expressao_aritmetica + termo .)
    ]               reduce using rule 65 (expressao_aritmetica -> expressao_aritmetica + termo .)
    )               reduce using rule 65 (expressao_aritmetica -> expressao_aritmetica + termo .)
    ,               reduce using rule 65 (expressao_aritmetica -> expressao_aritmetica + termo .)
    TO              reduce using rule 65 (expressao_aritmetica -> expressao_aritmetica + termo .)
    DOWNTO          reduce using rule 65 (expressao_aritmetica -> expressao_aritmetica + termo .)
    *               shift and go to state 89
    /               shift and go to state 90
    DIV             shift and go to state 91
    MOD             shift and go to state 92


state 116

    (66) expressao_aritmetica -> expressao_aritmetica - termo .
    (68) termo -> termo . * fator
    (69) termo -> termo . / fator
    (70) termo -> termo . DIV fator
    (71) termo -> termo . MOD fator

    +               reduce using rule 66 (expressao_aritmetica -> expressao_aritmetica - termo .)
    -               reduce using rule 66 (expressao_aritmetica -> expressao_aritmetica - termo .)
    EQUALS          reduce using rule 66 (expressao_aritmetica -> expressao_aritmetica - termo .)
    NOT_EQUALS      reduce using rule 66 (expressao_aritmetica -> expressao_aritmetica - termo .)
    LESS_THAN       reduce using rule 66 (expressao_aritmetica -> expressao_aritmetica - termo .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 66 (expressao_aritmetica -> expressao_aritmetica - termo .)
    GREATER_THAN    reduce using rule 66 (expressao_aritmetica -> expressao_aritmetica - termo .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 66 (expressao_aritmetica -> expressao_aritmetica - termo .)
    OR              reduce using rule 66 (expressao_aritmetica -> expressao_aritmetica - termo .)
    AND             reduce using rule 66 (expressao_aritmetica -> expressao_aritmetica - termo .)
    THEN            reduce using rule 66 (expressao_aritmetica -> expressao_aritmetica - termo .)
    DO              reduce using rule 66 (expressao_aritmetica -> expressao_aritmetica - termo .)
    END             reduce using rule 66 (expressao_aritmetica -> expressao_aritmetica - termo .)
    ;               reduce using rule 66 (expressao_aritmetica -> expressao_aritmetica - termo .)
    ELSE            reduce using rule 66 (expressao_aritmetica -> expressao_aritmetica - termo .)
    ]               reduce using rule 66 (expressao_aritmetica -> expressao_aritmetica - termo .)
    )               reduce using rule 66 (expressao_aritmetica -> expressao_aritmetica - termo .)
    ,               reduce using rule 66 (expressao_aritmetica -> expressao_aritmetica - termo .)
    TO              reduce using rule 66 (expressao_aritmetica -> expressao_aritmetica - termo .)
    DOWNTO          reduce using rule 66 (expressao_aritmetica -> expressao_aritmetica - termo .)
    *               shift and go to state 89
    /               shift and go to state 90
    DIV             shift and go to state 91
    MOD             shift and go to state 92


state 117

    (68) termo -> termo * fator .

    *               reduce using rule 68 (termo -> termo * fator .)
    /               reduce using rule 68 (termo -> termo * fator .)
    DIV             reduce using rule 68 (termo -> termo * fator .)
    MOD             reduce using rule 68 (termo -> termo * fator .)
    +               reduce using rule 68 (termo -> termo * fator .)
    -               reduce using rule 68 (termo -> termo * fator .)
    EQUALS          reduce using rule 68 (termo -> termo * fator .)
    NOT_EQUALS      reduce using rule 68 (termo -> termo * fator .)
    LESS_THAN       reduce using rule 68 (termo -> termo * fator .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 68 (termo -> termo * fator .)
    GREATER_THAN    reduce using rule 68 (termo -> termo * fator .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 68 (termo -> termo * fator .)
    OR              reduce using rule 68 (termo -> termo * fator .)
    AND             reduce using rule 68 (termo -> termo * fator .)
    THEN            reduce using rule 68 (termo -> termo * fator .)
    DO              reduce using rule 68 (termo -> termo * fator .)
    END             reduce using rule 68 (termo -> termo * fator .)
    ;               reduce using rule 68 (termo -> termo * fator .)
    ELSE            reduce using rule 68 (termo -> termo * fator .)
    ]               reduce using rule 68 (termo -> termo * fator .)
    )               reduce using rule 68 (termo -> termo * fator .)
    ,               reduce using rule 68 (termo -> termo * fator .)
    TO              reduce using rule 68 (termo -> termo * fator .)
    DOWNTO          reduce using rule 68 (termo -> termo * fator .)


state 118

    (69) termo -> termo / fator .

    *               reduce using rule 69 (termo -> termo / fator .)
    /               reduce using rule 69 (termo -> termo / fator .)
    DIV             reduce using rule 69 (termo -> termo / fator .)
    MOD             reduce using rule 69 (termo -> termo / fator .)
    +               reduce using rule 69 (termo -> termo / fator .)
    -               reduce using rule 69 (termo -> termo / fator .)
    EQUALS          reduce using rule 69 (termo -> termo / fator .)
    NOT_EQUALS      reduce using rule 69 (termo -> termo / fator .)
    LESS_THAN       reduce using rule 69 (termo -> termo / fator .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 69 (termo -> termo / fator .)
    GREATER_THAN    reduce using rule 69 (termo -> termo / fator .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 69 (termo -> termo / fator .)
    OR              reduce using rule 69 (termo -> termo / fator .)
    AND             reduce using rule 69 (termo -> termo / fator .)
    THEN            reduce using rule 69 (termo -> termo / fator .)
    DO              reduce using rule 69 (termo -> termo / fator .)
    END             reduce using rule 69 (termo -> termo / fator .)
    ;               reduce using rule 69 (termo -> termo / fator .)
    ELSE            reduce using rule 69 (termo -> termo / fator .)
    ]               reduce using rule 69 (termo -> termo / fator .)
    )               reduce using rule 69 (termo -> termo / fator .)
    ,               reduce using rule 69 (termo -> termo / fator .)
    TO              reduce using rule 69 (termo -> termo / fator .)
    DOWNTO          reduce using rule 69 (termo -> termo / fator .)


state 119

    (70) termo -> termo DIV fator .

    *               reduce using rule 70 (termo -> termo DIV fator .)
    /               reduce using rule 70 (termo -> termo DIV fator .)
    DIV             reduce using rule 70 (termo -> termo DIV fator .)
    MOD             reduce using rule 70 (termo -> termo DIV fator .)
    +               reduce using rule 70 (termo -> termo DIV fator .)
    -               reduce using rule 70 (termo -> termo DIV fator .)
    EQUALS          reduce using rule 70 (termo -> termo DIV fator .)
    NOT_EQUALS      reduce using rule 70 (termo -> termo DIV fator .)
    LESS_THAN       reduce using rule 70 (termo -> termo DIV fator .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 70 (termo -> termo DIV fator .)
    GREATER_THAN    reduce using rule 70 (termo -> termo DIV fator .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 70 (termo -> termo DIV fator .)
    OR              reduce using rule 70 (termo -> termo DIV fator .)
    AND             reduce using rule 70 (termo -> termo DIV fator .)
    THEN            reduce using rule 70 (termo -> termo DIV fator .)
    DO              reduce using rule 70 (termo -> termo DIV fator .)
    END             reduce using rule 70 (termo -> termo DIV fator .)
    ;               reduce using rule 70 (termo -> termo DIV fator .)
    ELSE            reduce using rule 70 (termo -> termo DIV fator .)
    ]               reduce using rule 70 (termo -> termo DIV fator .)
    )               reduce using rule 70 (termo -> termo DIV fator .)
    ,               reduce using rule 70 (termo -> termo DIV fator .)
    TO              reduce using rule 70 (termo -> termo DIV fator .)
    DOWNTO          reduce using rule 70 (termo -> termo DIV fator .)


state 120

    (71) termo -> termo MOD fator .

    *               reduce using rule 71 (termo -> termo MOD fator .)
    /               reduce using rule 71 (termo -> termo MOD fator .)
    DIV             reduce using rule 71 (termo -> termo MOD fator .)
    MOD             reduce using rule 71 (termo -> termo MOD fator .)
    +               reduce using rule 71 (termo -> termo MOD fator .)
    -               reduce using rule 71 (termo -> termo MOD fator .)
    EQUALS          reduce using rule 71 (termo -> termo MOD fator .)
    NOT_EQUALS      reduce using rule 71 (termo -> termo MOD fator .)
    LESS_THAN       reduce using rule 71 (termo -> termo MOD fator .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 71 (termo -> termo MOD fator .)
    GREATER_THAN    reduce using rule 71 (termo -> termo MOD fator .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 71 (termo -> termo MOD fator .)
    OR              reduce using rule 71 (termo -> termo MOD fator .)
    AND             reduce using rule 71 (termo -> termo MOD fator .)
    THEN            reduce using rule 71 (termo -> termo MOD fator .)
    DO              reduce using rule 71 (termo -> termo MOD fator .)
    END             reduce using rule 71 (termo -> termo MOD fator .)
    ;               reduce using rule 71 (termo -> termo MOD fator .)
    ELSE            reduce using rule 71 (termo -> termo MOD fator .)
    ]               reduce using rule 71 (termo -> termo MOD fator .)
    )               reduce using rule 71 (termo -> termo MOD fator .)
    ,               reduce using rule 71 (termo -> termo MOD fator .)
    TO              reduce using rule 71 (termo -> termo MOD fator .)
    DOWNTO          reduce using rule 71 (termo -> termo MOD fator .)


state 121

    (77) fator -> ID [ expressao . ]

    ]               shift and go to state 139


state 122

    (78) fator -> ID ( expressao . )

    )               shift and go to state 140


state 123

    (81) fator -> ( expressao ) .

    *               reduce using rule 81 (fator -> ( expressao ) .)
    /               reduce using rule 81 (fator -> ( expressao ) .)
    DIV             reduce using rule 81 (fator -> ( expressao ) .)
    MOD             reduce using rule 81 (fator -> ( expressao ) .)
    +               reduce using rule 81 (fator -> ( expressao ) .)
    -               reduce using rule 81 (fator -> ( expressao ) .)
    EQUALS          reduce using rule 81 (fator -> ( expressao ) .)
    NOT_EQUALS      reduce using rule 81 (fator -> ( expressao ) .)
    LESS_THAN       reduce using rule 81 (fator -> ( expressao ) .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 81 (fator -> ( expressao ) .)
    GREATER_THAN    reduce using rule 81 (fator -> ( expressao ) .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 81 (fator -> ( expressao ) .)
    OR              reduce using rule 81 (fator -> ( expressao ) .)
    AND             reduce using rule 81 (fator -> ( expressao ) .)
    THEN            reduce using rule 81 (fator -> ( expressao ) .)
    DO              reduce using rule 81 (fator -> ( expressao ) .)
    END             reduce using rule 81 (fator -> ( expressao ) .)
    ;               reduce using rule 81 (fator -> ( expressao ) .)
    ELSE            reduce using rule 81 (fator -> ( expressao ) .)
    ]               reduce using rule 81 (fator -> ( expressao ) .)
    )               reduce using rule 81 (fator -> ( expressao ) .)
    ,               reduce using rule 81 (fator -> ( expressao ) .)
    TO              reduce using rule 81 (fator -> ( expressao ) .)
    DOWNTO          reduce using rule 81 (fator -> ( expressao ) .)


state 124

    (47) while_statement -> WHILE expressao DO instrucao .

    END             reduce using rule 47 (while_statement -> WHILE expressao DO instrucao .)
    ;               reduce using rule 47 (while_statement -> WHILE expressao DO instrucao .)
    ELSE            reduce using rule 47 (while_statement -> WHILE expressao DO instrucao .)


state 125

    (48) for_statement -> FOR ID ASSIGN expressao . TO expressao DO instrucao
    (49) for_statement -> FOR ID ASSIGN expressao . DOWNTO expressao DO instrucao

    TO              shift and go to state 141
    DOWNTO          shift and go to state 142


state 126

    (18) declaracao -> lista_id : tipo . ;

    ;               shift and go to state 143


state 127

    (21) tipo -> INTEGER .

    ;               reduce using rule 21 (tipo -> INTEGER .)
    )               reduce using rule 21 (tipo -> INTEGER .)


state 128

    (22) tipo -> REAL .

    ;               reduce using rule 22 (tipo -> REAL .)
    )               reduce using rule 22 (tipo -> REAL .)


state 129

    (23) tipo -> BOOLEAN .

    ;               reduce using rule 23 (tipo -> BOOLEAN .)
    )               reduce using rule 23 (tipo -> BOOLEAN .)


state 130

    (24) tipo -> CHAR .

    ;               reduce using rule 24 (tipo -> CHAR .)
    )               reduce using rule 24 (tipo -> CHAR .)


state 131

    (25) tipo -> STRING .

    ;               reduce using rule 25 (tipo -> STRING .)
    )               reduce using rule 25 (tipo -> STRING .)


state 132

    (26) tipo -> ARRAY . [ NUMBER RANGE NUMBER ] OF tipo

    [               shift and go to state 144


state 133

    (20) lista_id -> lista_id , ID .

    :               reduce using rule 20 (lista_id -> lista_id , ID .)
    ,               reduce using rule 20 (lista_id -> lista_id , ID .)


state 134

    (9) funcao -> ID ( parametros ) . : tipo ; bloco_funcao ;

    :               shift and go to state 145


state 135

    (11) parametros -> lista_id : . tipo
    (12) parametros -> lista_id : . tipo ; parametros
    (21) tipo -> . INTEGER
    (22) tipo -> . REAL
    (23) tipo -> . BOOLEAN
    (24) tipo -> . CHAR
    (25) tipo -> . STRING
    (26) tipo -> . ARRAY [ NUMBER RANGE NUMBER ] OF tipo

    INTEGER         shift and go to state 127
    REAL            shift and go to state 128
    BOOLEAN         shift and go to state 129
    CHAR            shift and go to state 130
    STRING          shift and go to state 131
    ARRAY           shift and go to state 132

    tipo                           shift and go to state 146

state 136

    (39) atribuicao -> ID [ expressao ] ASSIGN . expressao
    (53) expressao -> . expressao_logica
    (54) expressao_logica -> . expressao_logica OR expressao_relacional
    (55) expressao_logica -> . expressao_logica AND expressao_relacional
    (56) expressao_logica -> . expressao_relacional
    (57) expressao_relacional -> . expressao_aritmetica operador_relacional expressao_aritmetica
    (58) expressao_relacional -> . expressao_aritmetica
    (65) expressao_aritmetica -> . expressao_aritmetica + termo
    (66) expressao_aritmetica -> . expressao_aritmetica - termo
    (67) expressao_aritmetica -> . termo
    (68) termo -> . termo * fator
    (69) termo -> . termo / fator
    (70) termo -> . termo DIV fator
    (71) termo -> . termo MOD fator
    (72) termo -> . fator
    (73) fator -> . NUMBER
    (74) fator -> . REAL_NUMBER
    (75) fator -> . STRING_LITERAL
    (76) fator -> . ID
    (77) fator -> . ID [ expressao ]
    (78) fator -> . ID ( expressao )
    (79) fator -> . TRUE
    (80) fator -> . FALSE
    (81) fator -> . ( expressao )
    (82) fator -> . NOT fator
    (83) fator -> . - fator

    NUMBER          shift and go to state 52
    REAL_NUMBER     shift and go to state 53
    STRING_LITERAL  shift and go to state 54
    ID              shift and go to state 55
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    (               shift and go to state 56
    NOT             shift and go to state 59
    -               shift and go to state 50

    expressao                      shift and go to state 147
    expressao_logica               shift and go to state 46
    expressao_relacional           shift and go to state 47
    expressao_aritmetica           shift and go to state 48
    termo                          shift and go to state 49
    fator                          shift and go to state 51

state 137

    (52) lista_expressao -> lista_expressao , expressao .

    )               reduce using rule 52 (lista_expressao -> lista_expressao , expressao .)
    ,               reduce using rule 52 (lista_expressao -> lista_expressao , expressao .)


state 138

    (45) if_statement -> IF expressao THEN instrucao ELSE . instrucao
    (30) instrucao -> . atribuicao
    (31) instrucao -> . leitura
    (32) instrucao -> . escrita
    (33) instrucao -> . if_statement
    (34) instrucao -> . while_statement
    (35) instrucao -> . for_statement
    (36) instrucao -> . bloco
    (37) instrucao -> .
    (38) atribuicao -> . ID ASSIGN expressao
    (39) atribuicao -> . ID [ expressao ] ASSIGN expressao
    (40) leitura -> . READ ( expressao )
    (41) leitura -> . READLN ( expressao )
    (42) escrita -> . WRITELN
    (43) escrita -> . WRITELN ( lista_expressao )
    (44) escrita -> . WRITE ( lista_expressao )
    (45) if_statement -> . IF expressao THEN instrucao ELSE instrucao
    (46) if_statement -> . IF expressao THEN instrucao
    (47) while_statement -> . WHILE expressao DO instrucao
    (48) for_statement -> . FOR ID ASSIGN expressao TO expressao DO instrucao
    (49) for_statement -> . FOR ID ASSIGN expressao DOWNTO expressao DO instrucao
    (50) bloco -> . BEGIN lista_instrucoes END

    ELSE            reduce using rule 37 (instrucao -> .)
    END             reduce using rule 37 (instrucao -> .)
    ;               reduce using rule 37 (instrucao -> .)
    ID              shift and go to state 22
    READ            shift and go to state 23
    READLN          shift and go to state 24
    WRITELN         shift and go to state 25
    WRITE           shift and go to state 26
    IF              shift and go to state 27
    WHILE           shift and go to state 28
    FOR             shift and go to state 29
    BEGIN           shift and go to state 12

    instrucao                      shift and go to state 148
    atribuicao                     shift and go to state 15
    leitura                        shift and go to state 16
    escrita                        shift and go to state 17
    if_statement                   shift and go to state 18
    while_statement                shift and go to state 19
    for_statement                  shift and go to state 20
    bloco                          shift and go to state 21

state 139

    (77) fator -> ID [ expressao ] .

    *               reduce using rule 77 (fator -> ID [ expressao ] .)
    /               reduce using rule 77 (fator -> ID [ expressao ] .)
    DIV             reduce using rule 77 (fator -> ID [ expressao ] .)
    MOD             reduce using rule 77 (fator -> ID [ expressao ] .)
    +               reduce using rule 77 (fator -> ID [ expressao ] .)
    -               reduce using rule 77 (fator -> ID [ expressao ] .)
    EQUALS          reduce using rule 77 (fator -> ID [ expressao ] .)
    NOT_EQUALS      reduce using rule 77 (fator -> ID [ expressao ] .)
    LESS_THAN       reduce using rule 77 (fator -> ID [ expressao ] .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 77 (fator -> ID [ expressao ] .)
    GREATER_THAN    reduce using rule 77 (fator -> ID [ expressao ] .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 77 (fator -> ID [ expressao ] .)
    OR              reduce using rule 77 (fator -> ID [ expressao ] .)
    AND             reduce using rule 77 (fator -> ID [ expressao ] .)
    THEN            reduce using rule 77 (fator -> ID [ expressao ] .)
    DO              reduce using rule 77 (fator -> ID [ expressao ] .)
    END             reduce using rule 77 (fator -> ID [ expressao ] .)
    ;               reduce using rule 77 (fator -> ID [ expressao ] .)
    ELSE            reduce using rule 77 (fator -> ID [ expressao ] .)
    ]               reduce using rule 77 (fator -> ID [ expressao ] .)
    )               reduce using rule 77 (fator -> ID [ expressao ] .)
    ,               reduce using rule 77 (fator -> ID [ expressao ] .)
    TO              reduce using rule 77 (fator -> ID [ expressao ] .)
    DOWNTO          reduce using rule 77 (fator -> ID [ expressao ] .)


state 140

    (78) fator -> ID ( expressao ) .

    *               reduce using rule 78 (fator -> ID ( expressao ) .)
    /               reduce using rule 78 (fator -> ID ( expressao ) .)
    DIV             reduce using rule 78 (fator -> ID ( expressao ) .)
    MOD             reduce using rule 78 (fator -> ID ( expressao ) .)
    +               reduce using rule 78 (fator -> ID ( expressao ) .)
    -               reduce using rule 78 (fator -> ID ( expressao ) .)
    EQUALS          reduce using rule 78 (fator -> ID ( expressao ) .)
    NOT_EQUALS      reduce using rule 78 (fator -> ID ( expressao ) .)
    LESS_THAN       reduce using rule 78 (fator -> ID ( expressao ) .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 78 (fator -> ID ( expressao ) .)
    GREATER_THAN    reduce using rule 78 (fator -> ID ( expressao ) .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 78 (fator -> ID ( expressao ) .)
    OR              reduce using rule 78 (fator -> ID ( expressao ) .)
    AND             reduce using rule 78 (fator -> ID ( expressao ) .)
    THEN            reduce using rule 78 (fator -> ID ( expressao ) .)
    DO              reduce using rule 78 (fator -> ID ( expressao ) .)
    END             reduce using rule 78 (fator -> ID ( expressao ) .)
    ;               reduce using rule 78 (fator -> ID ( expressao ) .)
    ELSE            reduce using rule 78 (fator -> ID ( expressao ) .)
    ]               reduce using rule 78 (fator -> ID ( expressao ) .)
    )               reduce using rule 78 (fator -> ID ( expressao ) .)
    ,               reduce using rule 78 (fator -> ID ( expressao ) .)
    TO              reduce using rule 78 (fator -> ID ( expressao ) .)
    DOWNTO          reduce using rule 78 (fator -> ID ( expressao ) .)


state 141

    (48) for_statement -> FOR ID ASSIGN expressao TO . expressao DO instrucao
    (53) expressao -> . expressao_logica
    (54) expressao_logica -> . expressao_logica OR expressao_relacional
    (55) expressao_logica -> . expressao_logica AND expressao_relacional
    (56) expressao_logica -> . expressao_relacional
    (57) expressao_relacional -> . expressao_aritmetica operador_relacional expressao_aritmetica
    (58) expressao_relacional -> . expressao_aritmetica
    (65) expressao_aritmetica -> . expressao_aritmetica + termo
    (66) expressao_aritmetica -> . expressao_aritmetica - termo
    (67) expressao_aritmetica -> . termo
    (68) termo -> . termo * fator
    (69) termo -> . termo / fator
    (70) termo -> . termo DIV fator
    (71) termo -> . termo MOD fator
    (72) termo -> . fator
    (73) fator -> . NUMBER
    (74) fator -> . REAL_NUMBER
    (75) fator -> . STRING_LITERAL
    (76) fator -> . ID
    (77) fator -> . ID [ expressao ]
    (78) fator -> . ID ( expressao )
    (79) fator -> . TRUE
    (80) fator -> . FALSE
    (81) fator -> . ( expressao )
    (82) fator -> . NOT fator
    (83) fator -> . - fator

    NUMBER          shift and go to state 52
    REAL_NUMBER     shift and go to state 53
    STRING_LITERAL  shift and go to state 54
    ID              shift and go to state 55
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    (               shift and go to state 56
    NOT             shift and go to state 59
    -               shift and go to state 50

    expressao                      shift and go to state 149
    expressao_logica               shift and go to state 46
    expressao_relacional           shift and go to state 47
    expressao_aritmetica           shift and go to state 48
    termo                          shift and go to state 49
    fator                          shift and go to state 51

state 142

    (49) for_statement -> FOR ID ASSIGN expressao DOWNTO . expressao DO instrucao
    (53) expressao -> . expressao_logica
    (54) expressao_logica -> . expressao_logica OR expressao_relacional
    (55) expressao_logica -> . expressao_logica AND expressao_relacional
    (56) expressao_logica -> . expressao_relacional
    (57) expressao_relacional -> . expressao_aritmetica operador_relacional expressao_aritmetica
    (58) expressao_relacional -> . expressao_aritmetica
    (65) expressao_aritmetica -> . expressao_aritmetica + termo
    (66) expressao_aritmetica -> . expressao_aritmetica - termo
    (67) expressao_aritmetica -> . termo
    (68) termo -> . termo * fator
    (69) termo -> . termo / fator
    (70) termo -> . termo DIV fator
    (71) termo -> . termo MOD fator
    (72) termo -> . fator
    (73) fator -> . NUMBER
    (74) fator -> . REAL_NUMBER
    (75) fator -> . STRING_LITERAL
    (76) fator -> . ID
    (77) fator -> . ID [ expressao ]
    (78) fator -> . ID ( expressao )
    (79) fator -> . TRUE
    (80) fator -> . FALSE
    (81) fator -> . ( expressao )
    (82) fator -> . NOT fator
    (83) fator -> . - fator

    NUMBER          shift and go to state 52
    REAL_NUMBER     shift and go to state 53
    STRING_LITERAL  shift and go to state 54
    ID              shift and go to state 55
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58
    (               shift and go to state 56
    NOT             shift and go to state 59
    -               shift and go to state 50

    expressao                      shift and go to state 150
    expressao_logica               shift and go to state 46
    expressao_relacional           shift and go to state 47
    expressao_aritmetica           shift and go to state 48
    termo                          shift and go to state 49
    fator                          shift and go to state 51

state 143

    (18) declaracao -> lista_id : tipo ; .

    ID              reduce using rule 18 (declaracao -> lista_id : tipo ; .)
    BEGIN           reduce using rule 18 (declaracao -> lista_id : tipo ; .)


state 144

    (26) tipo -> ARRAY [ . NUMBER RANGE NUMBER ] OF tipo

    NUMBER          shift and go to state 151


state 145

    (9) funcao -> ID ( parametros ) : . tipo ; bloco_funcao ;
    (21) tipo -> . INTEGER
    (22) tipo -> . REAL
    (23) tipo -> . BOOLEAN
    (24) tipo -> . CHAR
    (25) tipo -> . STRING
    (26) tipo -> . ARRAY [ NUMBER RANGE NUMBER ] OF tipo

    INTEGER         shift and go to state 127
    REAL            shift and go to state 128
    BOOLEAN         shift and go to state 129
    CHAR            shift and go to state 130
    STRING          shift and go to state 131
    ARRAY           shift and go to state 132

    tipo                           shift and go to state 152

state 146

    (11) parametros -> lista_id : tipo .
    (12) parametros -> lista_id : tipo . ; parametros

    )               reduce using rule 11 (parametros -> lista_id : tipo .)
    ;               shift and go to state 153


state 147

    (39) atribuicao -> ID [ expressao ] ASSIGN expressao .

    END             reduce using rule 39 (atribuicao -> ID [ expressao ] ASSIGN expressao .)
    ;               reduce using rule 39 (atribuicao -> ID [ expressao ] ASSIGN expressao .)
    ELSE            reduce using rule 39 (atribuicao -> ID [ expressao ] ASSIGN expressao .)


state 148

    (45) if_statement -> IF expressao THEN instrucao ELSE instrucao .

    END             reduce using rule 45 (if_statement -> IF expressao THEN instrucao ELSE instrucao .)
    ;               reduce using rule 45 (if_statement -> IF expressao THEN instrucao ELSE instrucao .)
    ELSE            reduce using rule 45 (if_statement -> IF expressao THEN instrucao ELSE instrucao .)


state 149

    (48) for_statement -> FOR ID ASSIGN expressao TO expressao . DO instrucao

    DO              shift and go to state 154


state 150

    (49) for_statement -> FOR ID ASSIGN expressao DOWNTO expressao . DO instrucao

    DO              shift and go to state 155


state 151

    (26) tipo -> ARRAY [ NUMBER . RANGE NUMBER ] OF tipo

    RANGE           shift and go to state 156


state 152

    (9) funcao -> ID ( parametros ) : tipo . ; bloco_funcao ;

    ;               shift and go to state 157


state 153

    (12) parametros -> lista_id : tipo ; . parametros
    (11) parametros -> . lista_id : tipo
    (12) parametros -> . lista_id : tipo ; parametros
    (13) parametros -> .
    (19) lista_id -> . ID
    (20) lista_id -> . lista_id , ID

    )               reduce using rule 13 (parametros -> .)
    ID              shift and go to state 65

    lista_id                       shift and go to state 104
    parametros                     shift and go to state 158

state 154

    (48) for_statement -> FOR ID ASSIGN expressao TO expressao DO . instrucao
    (30) instrucao -> . atribuicao
    (31) instrucao -> . leitura
    (32) instrucao -> . escrita
    (33) instrucao -> . if_statement
    (34) instrucao -> . while_statement
    (35) instrucao -> . for_statement
    (36) instrucao -> . bloco
    (37) instrucao -> .
    (38) atribuicao -> . ID ASSIGN expressao
    (39) atribuicao -> . ID [ expressao ] ASSIGN expressao
    (40) leitura -> . READ ( expressao )
    (41) leitura -> . READLN ( expressao )
    (42) escrita -> . WRITELN
    (43) escrita -> . WRITELN ( lista_expressao )
    (44) escrita -> . WRITE ( lista_expressao )
    (45) if_statement -> . IF expressao THEN instrucao ELSE instrucao
    (46) if_statement -> . IF expressao THEN instrucao
    (47) while_statement -> . WHILE expressao DO instrucao
    (48) for_statement -> . FOR ID ASSIGN expressao TO expressao DO instrucao
    (49) for_statement -> . FOR ID ASSIGN expressao DOWNTO expressao DO instrucao
    (50) bloco -> . BEGIN lista_instrucoes END

    ELSE            reduce using rule 37 (instrucao -> .)
    END             reduce using rule 37 (instrucao -> .)
    ;               reduce using rule 37 (instrucao -> .)
    ID              shift and go to state 22
    READ            shift and go to state 23
    READLN          shift and go to state 24
    WRITELN         shift and go to state 25
    WRITE           shift and go to state 26
    IF              shift and go to state 27
    WHILE           shift and go to state 28
    FOR             shift and go to state 29
    BEGIN           shift and go to state 12

    instrucao                      shift and go to state 159
    atribuicao                     shift and go to state 15
    leitura                        shift and go to state 16
    escrita                        shift and go to state 17
    if_statement                   shift and go to state 18
    while_statement                shift and go to state 19
    for_statement                  shift and go to state 20
    bloco                          shift and go to state 21

state 155

    (49) for_statement -> FOR ID ASSIGN expressao DOWNTO expressao DO . instrucao
    (30) instrucao -> . atribuicao
    (31) instrucao -> . leitura
    (32) instrucao -> . escrita
    (33) instrucao -> . if_statement
    (34) instrucao -> . while_statement
    (35) instrucao -> . for_statement
    (36) instrucao -> . bloco
    (37) instrucao -> .
    (38) atribuicao -> . ID ASSIGN expressao
    (39) atribuicao -> . ID [ expressao ] ASSIGN expressao
    (40) leitura -> . READ ( expressao )
    (41) leitura -> . READLN ( expressao )
    (42) escrita -> . WRITELN
    (43) escrita -> . WRITELN ( lista_expressao )
    (44) escrita -> . WRITE ( lista_expressao )
    (45) if_statement -> . IF expressao THEN instrucao ELSE instrucao
    (46) if_statement -> . IF expressao THEN instrucao
    (47) while_statement -> . WHILE expressao DO instrucao
    (48) for_statement -> . FOR ID ASSIGN expressao TO expressao DO instrucao
    (49) for_statement -> . FOR ID ASSIGN expressao DOWNTO expressao DO instrucao
    (50) bloco -> . BEGIN lista_instrucoes END

    ELSE            reduce using rule 37 (instrucao -> .)
    END             reduce using rule 37 (instrucao -> .)
    ;               reduce using rule 37 (instrucao -> .)
    ID              shift and go to state 22
    READ            shift and go to state 23
    READLN          shift and go to state 24
    WRITELN         shift and go to state 25
    WRITE           shift and go to state 26
    IF              shift and go to state 27
    WHILE           shift and go to state 28
    FOR             shift and go to state 29
    BEGIN           shift and go to state 12

    instrucao                      shift and go to state 160
    atribuicao                     shift and go to state 15
    leitura                        shift and go to state 16
    escrita                        shift and go to state 17
    if_statement                   shift and go to state 18
    while_statement                shift and go to state 19
    for_statement                  shift and go to state 20
    bloco                          shift and go to state 21

state 156

    (26) tipo -> ARRAY [ NUMBER RANGE . NUMBER ] OF tipo

    NUMBER          shift and go to state 161


state 157

    (9) funcao -> ID ( parametros ) : tipo ; . bloco_funcao ;
    (10) bloco_funcao -> . declaracoes_variaveis corpo
    (14) declaracoes_variaveis -> . VAR declaracoes
    (15) declaracoes_variaveis -> .

    VAR             shift and go to state 31
    BEGIN           reduce using rule 15 (declaracoes_variaveis -> .)

    bloco_funcao                   shift and go to state 162
    declaracoes_variaveis          shift and go to state 163

state 158

    (12) parametros -> lista_id : tipo ; parametros .

    )               reduce using rule 12 (parametros -> lista_id : tipo ; parametros .)


state 159

    (48) for_statement -> FOR ID ASSIGN expressao TO expressao DO instrucao .

    END             reduce using rule 48 (for_statement -> FOR ID ASSIGN expressao TO expressao DO instrucao .)
    ;               reduce using rule 48 (for_statement -> FOR ID ASSIGN expressao TO expressao DO instrucao .)
    ELSE            reduce using rule 48 (for_statement -> FOR ID ASSIGN expressao TO expressao DO instrucao .)


state 160

    (49) for_statement -> FOR ID ASSIGN expressao DOWNTO expressao DO instrucao .

    END             reduce using rule 49 (for_statement -> FOR ID ASSIGN expressao DOWNTO expressao DO instrucao .)
    ;               reduce using rule 49 (for_statement -> FOR ID ASSIGN expressao DOWNTO expressao DO instrucao .)
    ELSE            reduce using rule 49 (for_statement -> FOR ID ASSIGN expressao DOWNTO expressao DO instrucao .)


state 161

    (26) tipo -> ARRAY [ NUMBER RANGE NUMBER . ] OF tipo

    ]               shift and go to state 164


state 162

    (9) funcao -> ID ( parametros ) : tipo ; bloco_funcao . ;

    ;               shift and go to state 165


state 163

    (10) bloco_funcao -> declaracoes_variaveis . corpo
    (27) corpo -> . BEGIN lista_instrucoes END

    BEGIN           shift and go to state 8

    corpo                          shift and go to state 166

state 164

    (26) tipo -> ARRAY [ NUMBER RANGE NUMBER ] . OF tipo

    OF              shift and go to state 167


state 165

    (9) funcao -> ID ( parametros ) : tipo ; bloco_funcao ; .

    ID              reduce using rule 9 (funcao -> ID ( parametros ) : tipo ; bloco_funcao ; .)
    VAR             reduce using rule 9 (funcao -> ID ( parametros ) : tipo ; bloco_funcao ; .)
    BEGIN           reduce using rule 9 (funcao -> ID ( parametros ) : tipo ; bloco_funcao ; .)


state 166

    (10) bloco_funcao -> declaracoes_variaveis corpo .

    ;               reduce using rule 10 (bloco_funcao -> declaracoes_variaveis corpo .)


state 167

    (26) tipo -> ARRAY [ NUMBER RANGE NUMBER ] OF . tipo
    (21) tipo -> . INTEGER
    (22) tipo -> . REAL
    (23) tipo -> . BOOLEAN
    (24) tipo -> . CHAR
    (25) tipo -> . STRING
    (26) tipo -> . ARRAY [ NUMBER RANGE NUMBER ] OF tipo

    INTEGER         shift and go to state 127
    REAL            shift and go to state 128
    BOOLEAN         shift and go to state 129
    CHAR            shift and go to state 130
    STRING          shift and go to state 131
    ARRAY           shift and go to state 132

    tipo                           shift and go to state 168

state 168

    (26) tipo -> ARRAY [ NUMBER RANGE NUMBER ] OF tipo .

    ;               reduce using rule 26 (tipo -> ARRAY [ NUMBER RANGE NUMBER ] OF tipo .)
    )               reduce using rule 26 (tipo -> ARRAY [ NUMBER RANGE NUMBER ] OF tipo .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ELSE in state 111 resolved as shift
