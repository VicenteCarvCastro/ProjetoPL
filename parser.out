Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> gramatica
Rule 1     gramatica -> programa .
Rule 2     programa -> cabecalho corpo
Rule 3     cabecalho -> titulo declaracoes_variaveis
Rule 4     titulo -> PROGRAM ID ;
Rule 5     declaracoes_variaveis -> VAR declaracoes
Rule 6     declaracoes_variaveis -> <empty>
Rule 7     declaracoes -> declaracao
Rule 8     declaracoes -> declaracao declaracoes
Rule 9     declaracao -> lista_id : tipo ;
Rule 10    lista_id -> ID
Rule 11    lista_id -> lista_id , ID
Rule 12    tipo -> INTEGER
Rule 13    tipo -> REAL
Rule 14    tipo -> BOOLEAN
Rule 15    tipo -> CHAR
Rule 16    tipo -> STRING
Rule 17    tipo -> ARRAY [ NUMBER RANGE NUMBER ] OF tipo
Rule 18    corpo -> BEGIN lista_instrucoes END
Rule 19    lista_instrucoes -> instrucao
Rule 20    lista_instrucoes -> lista_instrucoes ; instrucao
Rule 21    instrucao -> atribuicao
Rule 22    instrucao -> leitura
Rule 23    instrucao -> escrita
Rule 24    instrucao -> if_statement
Rule 25    instrucao -> while_statement
Rule 26    instrucao -> for_statement
Rule 27    instrucao -> bloco
Rule 28    instrucao -> <empty>
Rule 29    bloco -> BEGIN lista_instrucoes END
Rule 30    atribuicao -> ID ASSIGN expressao
Rule 31    atribuicao -> ID [ expressao ] ASSIGN expressao
Rule 32    leitura -> READ ( expressao_simples )
Rule 33    leitura -> READLN ( expressao_simples )
Rule 34    escrita -> WRITE ( lista_expressao )
Rule 35    escrita -> WRITELN ( lista_expressao )
Rule 36    lista_expressao -> expressao
Rule 37    lista_expressao -> lista_expressao , expressao
Rule 38    expressao -> expressao OR expressao
Rule 39    expressao -> expressao AND expressao
Rule 40    fator -> NOT fator
Rule 41    expressao -> expressao_simples
Rule 42    expressao -> expressao_simples operador_relacional expressao_simples
Rule 43    expressao_simples -> termo
Rule 44    expressao_simples -> expressao_simples + termo
Rule 45    expressao_simples -> expressao_simples - termo
Rule 46    termo -> fator
Rule 47    termo -> termo * fator
Rule 48    termo -> termo / fator
Rule 49    termo -> termo DIV fator
Rule 50    termo -> termo MOD fator
Rule 51    fator -> - fator
Rule 52    fator -> ID [ expressao ]
Rule 53    fator -> NUMBER
Rule 54    fator -> STRING_LITERAL
Rule 55    fator -> ID
Rule 56    fator -> TRUE
Rule 57    fator -> FALSE
Rule 58    fator -> ( expressao )
Rule 59    fator -> ID ( expressao )
Rule 60    operador_relacional -> EQUALS
Rule 61    operador_relacional -> NOT_EQUALS
Rule 62    operador_relacional -> LESS_THAN
Rule 63    operador_relacional -> LESS_THAN_OR_EQUAL_TO
Rule 64    operador_relacional -> GREATER_THAN
Rule 65    operador_relacional -> GREATER_THAN_OR_EQUAL_TO
Rule 66    if_statement -> IF expressao THEN instrucao ELSE instrucao
Rule 67    if_statement -> IF expressao THEN instrucao
Rule 68    while_statement -> WHILE expressao DO instrucao
Rule 69    for_statement -> FOR ID ASSIGN expressao TO expressao DO instrucao
Rule 70    for_statement -> FOR ID ASSIGN expressao DOWNTO expressao DO instrucao

Terminals, with rules where they appear

(                    : 32 33 34 35 58 59
)                    : 32 33 34 35 58 59
*                    : 47
+                    : 44
,                    : 11 37
-                    : 45 51
.                    : 1
/                    : 48
:                    : 9
;                    : 4 9 20
AND                  : 39
ARRAY                : 17
ASSIGN               : 30 31 69 70
BEGIN                : 18 29
BOOLEAN              : 14
CHAR                 : 15
DIV                  : 49
DO                   : 68 69 70
DOWNTO               : 70
ELSE                 : 66
END                  : 18 29
EQUALS               : 60
FALSE                : 57
FOR                  : 69 70
GREATER_THAN         : 64
GREATER_THAN_OR_EQUAL_TO : 65
ID                   : 4 10 11 30 31 52 55 59 69 70
IF                   : 66 67
INTEGER              : 12
LESS_THAN            : 62
LESS_THAN_OR_EQUAL_TO : 63
MOD                  : 50
NOT                  : 40
NOT_EQUALS           : 61
NUMBER               : 17 17 53
OF                   : 17
OR                   : 38
PROGRAM              : 4
RANGE                : 17
READ                 : 32
READLN               : 33
REAL                 : 13
STRING               : 16
STRING_LITERAL       : 54
THEN                 : 66 67
TO                   : 69
TRUE                 : 56
VAR                  : 5
WHILE                : 68
WRITE                : 34
WRITELN              : 35
[                    : 17 31 52
]                    : 17 31 52
error                : 

Nonterminals, with rules where they appear

atribuicao           : 21
bloco                : 27
cabecalho            : 2
corpo                : 2
declaracao           : 7 8
declaracoes          : 5 8
declaracoes_variaveis : 3
escrita              : 23
expressao            : 30 31 31 36 37 38 38 39 39 52 58 59 66 67 68 69 69 70 70
expressao_simples    : 32 33 41 42 42 44 45
fator                : 40 46 47 48 49 50 51
for_statement        : 26
gramatica            : 0
if_statement         : 24
instrucao            : 19 20 66 66 67 68 69 70
leitura              : 22
lista_expressao      : 34 35 37
lista_id             : 9 11
lista_instrucoes     : 18 20 29
operador_relacional  : 42
programa             : 1
termo                : 43 44 45 47 48 49 50
tipo                 : 9 17
titulo               : 3
while_statement      : 25

Parsing method: LALR

state 0

    (0) S' -> . gramatica
    (1) gramatica -> . programa .
    (2) programa -> . cabecalho corpo
    (3) cabecalho -> . titulo declaracoes_variaveis
    (4) titulo -> . PROGRAM ID ;

    PROGRAM         shift and go to state 5

    gramatica                      shift and go to state 1
    programa                       shift and go to state 2
    cabecalho                      shift and go to state 3
    titulo                         shift and go to state 4

state 1

    (0) S' -> gramatica .



state 2

    (1) gramatica -> programa . .

    .               shift and go to state 6


state 3

    (2) programa -> cabecalho . corpo
    (18) corpo -> . BEGIN lista_instrucoes END

    BEGIN           shift and go to state 8

    corpo                          shift and go to state 7

state 4

    (3) cabecalho -> titulo . declaracoes_variaveis
    (5) declaracoes_variaveis -> . VAR declaracoes
    (6) declaracoes_variaveis -> .

    VAR             shift and go to state 10
    BEGIN           reduce using rule 6 (declaracoes_variaveis -> .)

    declaracoes_variaveis          shift and go to state 9

state 5

    (4) titulo -> PROGRAM . ID ;

    ID              shift and go to state 11


state 6

    (1) gramatica -> programa . .

    $end            reduce using rule 1 (gramatica -> programa . .)


state 7

    (2) programa -> cabecalho corpo .

    .               reduce using rule 2 (programa -> cabecalho corpo .)


state 8

    (18) corpo -> BEGIN . lista_instrucoes END
    (19) lista_instrucoes -> . instrucao
    (20) lista_instrucoes -> . lista_instrucoes ; instrucao
    (21) instrucao -> . atribuicao
    (22) instrucao -> . leitura
    (23) instrucao -> . escrita
    (24) instrucao -> . if_statement
    (25) instrucao -> . while_statement
    (26) instrucao -> . for_statement
    (27) instrucao -> . bloco
    (28) instrucao -> .
    (30) atribuicao -> . ID ASSIGN expressao
    (31) atribuicao -> . ID [ expressao ] ASSIGN expressao
    (32) leitura -> . READ ( expressao_simples )
    (33) leitura -> . READLN ( expressao_simples )
    (34) escrita -> . WRITE ( lista_expressao )
    (35) escrita -> . WRITELN ( lista_expressao )
    (66) if_statement -> . IF expressao THEN instrucao ELSE instrucao
    (67) if_statement -> . IF expressao THEN instrucao
    (68) while_statement -> . WHILE expressao DO instrucao
    (69) for_statement -> . FOR ID ASSIGN expressao TO expressao DO instrucao
    (70) for_statement -> . FOR ID ASSIGN expressao DOWNTO expressao DO instrucao
    (29) bloco -> . BEGIN lista_instrucoes END

    END             reduce using rule 28 (instrucao -> .)
    ;               reduce using rule 28 (instrucao -> .)
    ID              shift and go to state 22
    READ            shift and go to state 23
    READLN          shift and go to state 24
    WRITE           shift and go to state 25
    WRITELN         shift and go to state 26
    IF              shift and go to state 27
    WHILE           shift and go to state 28
    FOR             shift and go to state 29
    BEGIN           shift and go to state 12

    lista_instrucoes               shift and go to state 13
    instrucao                      shift and go to state 14
    atribuicao                     shift and go to state 15
    leitura                        shift and go to state 16
    escrita                        shift and go to state 17
    if_statement                   shift and go to state 18
    while_statement                shift and go to state 19
    for_statement                  shift and go to state 20
    bloco                          shift and go to state 21

state 9

    (3) cabecalho -> titulo declaracoes_variaveis .

    BEGIN           reduce using rule 3 (cabecalho -> titulo declaracoes_variaveis .)


state 10

    (5) declaracoes_variaveis -> VAR . declaracoes
    (7) declaracoes -> . declaracao
    (8) declaracoes -> . declaracao declaracoes
    (9) declaracao -> . lista_id : tipo ;
    (10) lista_id -> . ID
    (11) lista_id -> . lista_id , ID

    ID              shift and go to state 33

    declaracoes                    shift and go to state 30
    declaracao                     shift and go to state 31
    lista_id                       shift and go to state 32

state 11

    (4) titulo -> PROGRAM ID . ;

    ;               shift and go to state 34


state 12

    (29) bloco -> BEGIN . lista_instrucoes END
    (19) lista_instrucoes -> . instrucao
    (20) lista_instrucoes -> . lista_instrucoes ; instrucao
    (21) instrucao -> . atribuicao
    (22) instrucao -> . leitura
    (23) instrucao -> . escrita
    (24) instrucao -> . if_statement
    (25) instrucao -> . while_statement
    (26) instrucao -> . for_statement
    (27) instrucao -> . bloco
    (28) instrucao -> .
    (30) atribuicao -> . ID ASSIGN expressao
    (31) atribuicao -> . ID [ expressao ] ASSIGN expressao
    (32) leitura -> . READ ( expressao_simples )
    (33) leitura -> . READLN ( expressao_simples )
    (34) escrita -> . WRITE ( lista_expressao )
    (35) escrita -> . WRITELN ( lista_expressao )
    (66) if_statement -> . IF expressao THEN instrucao ELSE instrucao
    (67) if_statement -> . IF expressao THEN instrucao
    (68) while_statement -> . WHILE expressao DO instrucao
    (69) for_statement -> . FOR ID ASSIGN expressao TO expressao DO instrucao
    (70) for_statement -> . FOR ID ASSIGN expressao DOWNTO expressao DO instrucao
    (29) bloco -> . BEGIN lista_instrucoes END

    END             reduce using rule 28 (instrucao -> .)
    ;               reduce using rule 28 (instrucao -> .)
    ID              shift and go to state 22
    READ            shift and go to state 23
    READLN          shift and go to state 24
    WRITE           shift and go to state 25
    WRITELN         shift and go to state 26
    IF              shift and go to state 27
    WHILE           shift and go to state 28
    FOR             shift and go to state 29
    BEGIN           shift and go to state 12

    lista_instrucoes               shift and go to state 35
    instrucao                      shift and go to state 14
    atribuicao                     shift and go to state 15
    leitura                        shift and go to state 16
    escrita                        shift and go to state 17
    if_statement                   shift and go to state 18
    while_statement                shift and go to state 19
    for_statement                  shift and go to state 20
    bloco                          shift and go to state 21

state 13

    (18) corpo -> BEGIN lista_instrucoes . END
    (20) lista_instrucoes -> lista_instrucoes . ; instrucao

    END             shift and go to state 36
    ;               shift and go to state 37


state 14

    (19) lista_instrucoes -> instrucao .

    END             reduce using rule 19 (lista_instrucoes -> instrucao .)
    ;               reduce using rule 19 (lista_instrucoes -> instrucao .)


state 15

    (21) instrucao -> atribuicao .

    END             reduce using rule 21 (instrucao -> atribuicao .)
    ;               reduce using rule 21 (instrucao -> atribuicao .)
    ELSE            reduce using rule 21 (instrucao -> atribuicao .)


state 16

    (22) instrucao -> leitura .

    END             reduce using rule 22 (instrucao -> leitura .)
    ;               reduce using rule 22 (instrucao -> leitura .)
    ELSE            reduce using rule 22 (instrucao -> leitura .)


state 17

    (23) instrucao -> escrita .

    END             reduce using rule 23 (instrucao -> escrita .)
    ;               reduce using rule 23 (instrucao -> escrita .)
    ELSE            reduce using rule 23 (instrucao -> escrita .)


state 18

    (24) instrucao -> if_statement .

    END             reduce using rule 24 (instrucao -> if_statement .)
    ;               reduce using rule 24 (instrucao -> if_statement .)
    ELSE            reduce using rule 24 (instrucao -> if_statement .)


state 19

    (25) instrucao -> while_statement .

    END             reduce using rule 25 (instrucao -> while_statement .)
    ;               reduce using rule 25 (instrucao -> while_statement .)
    ELSE            reduce using rule 25 (instrucao -> while_statement .)


state 20

    (26) instrucao -> for_statement .

    END             reduce using rule 26 (instrucao -> for_statement .)
    ;               reduce using rule 26 (instrucao -> for_statement .)
    ELSE            reduce using rule 26 (instrucao -> for_statement .)


state 21

    (27) instrucao -> bloco .

    END             reduce using rule 27 (instrucao -> bloco .)
    ;               reduce using rule 27 (instrucao -> bloco .)
    ELSE            reduce using rule 27 (instrucao -> bloco .)


state 22

    (30) atribuicao -> ID . ASSIGN expressao
    (31) atribuicao -> ID . [ expressao ] ASSIGN expressao

    ASSIGN          shift and go to state 38
    [               shift and go to state 39


state 23

    (32) leitura -> READ . ( expressao_simples )

    (               shift and go to state 40


state 24

    (33) leitura -> READLN . ( expressao_simples )

    (               shift and go to state 41


state 25

    (34) escrita -> WRITE . ( lista_expressao )

    (               shift and go to state 42


state 26

    (35) escrita -> WRITELN . ( lista_expressao )

    (               shift and go to state 43


state 27

    (66) if_statement -> IF . expressao THEN instrucao ELSE instrucao
    (67) if_statement -> IF . expressao THEN instrucao
    (38) expressao -> . expressao OR expressao
    (39) expressao -> . expressao AND expressao
    (41) expressao -> . expressao_simples
    (42) expressao -> . expressao_simples operador_relacional expressao_simples
    (43) expressao_simples -> . termo
    (44) expressao_simples -> . expressao_simples + termo
    (45) expressao_simples -> . expressao_simples - termo
    (46) termo -> . fator
    (47) termo -> . termo * fator
    (48) termo -> . termo / fator
    (49) termo -> . termo DIV fator
    (50) termo -> . termo MOD fator
    (40) fator -> . NOT fator
    (51) fator -> . - fator
    (52) fator -> . ID [ expressao ]
    (53) fator -> . NUMBER
    (54) fator -> . STRING_LITERAL
    (55) fator -> . ID
    (56) fator -> . TRUE
    (57) fator -> . FALSE
    (58) fator -> . ( expressao )
    (59) fator -> . ID ( expressao )

    NOT             shift and go to state 49
    -               shift and go to state 47
    ID              shift and go to state 50
    NUMBER          shift and go to state 51
    STRING_LITERAL  shift and go to state 52
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    (               shift and go to state 55

    expressao                      shift and go to state 44
    expressao_simples              shift and go to state 45
    termo                          shift and go to state 46
    fator                          shift and go to state 48

state 28

    (68) while_statement -> WHILE . expressao DO instrucao
    (38) expressao -> . expressao OR expressao
    (39) expressao -> . expressao AND expressao
    (41) expressao -> . expressao_simples
    (42) expressao -> . expressao_simples operador_relacional expressao_simples
    (43) expressao_simples -> . termo
    (44) expressao_simples -> . expressao_simples + termo
    (45) expressao_simples -> . expressao_simples - termo
    (46) termo -> . fator
    (47) termo -> . termo * fator
    (48) termo -> . termo / fator
    (49) termo -> . termo DIV fator
    (50) termo -> . termo MOD fator
    (40) fator -> . NOT fator
    (51) fator -> . - fator
    (52) fator -> . ID [ expressao ]
    (53) fator -> . NUMBER
    (54) fator -> . STRING_LITERAL
    (55) fator -> . ID
    (56) fator -> . TRUE
    (57) fator -> . FALSE
    (58) fator -> . ( expressao )
    (59) fator -> . ID ( expressao )

    NOT             shift and go to state 49
    -               shift and go to state 47
    ID              shift and go to state 50
    NUMBER          shift and go to state 51
    STRING_LITERAL  shift and go to state 52
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    (               shift and go to state 55

    expressao                      shift and go to state 56
    expressao_simples              shift and go to state 45
    termo                          shift and go to state 46
    fator                          shift and go to state 48

state 29

    (69) for_statement -> FOR . ID ASSIGN expressao TO expressao DO instrucao
    (70) for_statement -> FOR . ID ASSIGN expressao DOWNTO expressao DO instrucao

    ID              shift and go to state 57


state 30

    (5) declaracoes_variaveis -> VAR declaracoes .

    BEGIN           reduce using rule 5 (declaracoes_variaveis -> VAR declaracoes .)


state 31

    (7) declaracoes -> declaracao .
    (8) declaracoes -> declaracao . declaracoes
    (7) declaracoes -> . declaracao
    (8) declaracoes -> . declaracao declaracoes
    (9) declaracao -> . lista_id : tipo ;
    (10) lista_id -> . ID
    (11) lista_id -> . lista_id , ID

    BEGIN           reduce using rule 7 (declaracoes -> declaracao .)
    ID              shift and go to state 33

    declaracao                     shift and go to state 31
    declaracoes                    shift and go to state 58
    lista_id                       shift and go to state 32

state 32

    (9) declaracao -> lista_id . : tipo ;
    (11) lista_id -> lista_id . , ID

    :               shift and go to state 59
    ,               shift and go to state 60


state 33

    (10) lista_id -> ID .

    :               reduce using rule 10 (lista_id -> ID .)
    ,               reduce using rule 10 (lista_id -> ID .)


state 34

    (4) titulo -> PROGRAM ID ; .

    VAR             reduce using rule 4 (titulo -> PROGRAM ID ; .)
    BEGIN           reduce using rule 4 (titulo -> PROGRAM ID ; .)


state 35

    (29) bloco -> BEGIN lista_instrucoes . END
    (20) lista_instrucoes -> lista_instrucoes . ; instrucao

    END             shift and go to state 61
    ;               shift and go to state 37


state 36

    (18) corpo -> BEGIN lista_instrucoes END .

    .               reduce using rule 18 (corpo -> BEGIN lista_instrucoes END .)


state 37

    (20) lista_instrucoes -> lista_instrucoes ; . instrucao
    (21) instrucao -> . atribuicao
    (22) instrucao -> . leitura
    (23) instrucao -> . escrita
    (24) instrucao -> . if_statement
    (25) instrucao -> . while_statement
    (26) instrucao -> . for_statement
    (27) instrucao -> . bloco
    (28) instrucao -> .
    (30) atribuicao -> . ID ASSIGN expressao
    (31) atribuicao -> . ID [ expressao ] ASSIGN expressao
    (32) leitura -> . READ ( expressao_simples )
    (33) leitura -> . READLN ( expressao_simples )
    (34) escrita -> . WRITE ( lista_expressao )
    (35) escrita -> . WRITELN ( lista_expressao )
    (66) if_statement -> . IF expressao THEN instrucao ELSE instrucao
    (67) if_statement -> . IF expressao THEN instrucao
    (68) while_statement -> . WHILE expressao DO instrucao
    (69) for_statement -> . FOR ID ASSIGN expressao TO expressao DO instrucao
    (70) for_statement -> . FOR ID ASSIGN expressao DOWNTO expressao DO instrucao
    (29) bloco -> . BEGIN lista_instrucoes END

    END             reduce using rule 28 (instrucao -> .)
    ;               reduce using rule 28 (instrucao -> .)
    ID              shift and go to state 22
    READ            shift and go to state 23
    READLN          shift and go to state 24
    WRITE           shift and go to state 25
    WRITELN         shift and go to state 26
    IF              shift and go to state 27
    WHILE           shift and go to state 28
    FOR             shift and go to state 29
    BEGIN           shift and go to state 12

    instrucao                      shift and go to state 62
    atribuicao                     shift and go to state 15
    leitura                        shift and go to state 16
    escrita                        shift and go to state 17
    if_statement                   shift and go to state 18
    while_statement                shift and go to state 19
    for_statement                  shift and go to state 20
    bloco                          shift and go to state 21

state 38

    (30) atribuicao -> ID ASSIGN . expressao
    (38) expressao -> . expressao OR expressao
    (39) expressao -> . expressao AND expressao
    (41) expressao -> . expressao_simples
    (42) expressao -> . expressao_simples operador_relacional expressao_simples
    (43) expressao_simples -> . termo
    (44) expressao_simples -> . expressao_simples + termo
    (45) expressao_simples -> . expressao_simples - termo
    (46) termo -> . fator
    (47) termo -> . termo * fator
    (48) termo -> . termo / fator
    (49) termo -> . termo DIV fator
    (50) termo -> . termo MOD fator
    (40) fator -> . NOT fator
    (51) fator -> . - fator
    (52) fator -> . ID [ expressao ]
    (53) fator -> . NUMBER
    (54) fator -> . STRING_LITERAL
    (55) fator -> . ID
    (56) fator -> . TRUE
    (57) fator -> . FALSE
    (58) fator -> . ( expressao )
    (59) fator -> . ID ( expressao )

    NOT             shift and go to state 49
    -               shift and go to state 47
    ID              shift and go to state 50
    NUMBER          shift and go to state 51
    STRING_LITERAL  shift and go to state 52
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    (               shift and go to state 55

    expressao                      shift and go to state 63
    expressao_simples              shift and go to state 45
    termo                          shift and go to state 46
    fator                          shift and go to state 48

state 39

    (31) atribuicao -> ID [ . expressao ] ASSIGN expressao
    (38) expressao -> . expressao OR expressao
    (39) expressao -> . expressao AND expressao
    (41) expressao -> . expressao_simples
    (42) expressao -> . expressao_simples operador_relacional expressao_simples
    (43) expressao_simples -> . termo
    (44) expressao_simples -> . expressao_simples + termo
    (45) expressao_simples -> . expressao_simples - termo
    (46) termo -> . fator
    (47) termo -> . termo * fator
    (48) termo -> . termo / fator
    (49) termo -> . termo DIV fator
    (50) termo -> . termo MOD fator
    (40) fator -> . NOT fator
    (51) fator -> . - fator
    (52) fator -> . ID [ expressao ]
    (53) fator -> . NUMBER
    (54) fator -> . STRING_LITERAL
    (55) fator -> . ID
    (56) fator -> . TRUE
    (57) fator -> . FALSE
    (58) fator -> . ( expressao )
    (59) fator -> . ID ( expressao )

    NOT             shift and go to state 49
    -               shift and go to state 47
    ID              shift and go to state 50
    NUMBER          shift and go to state 51
    STRING_LITERAL  shift and go to state 52
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    (               shift and go to state 55

    expressao                      shift and go to state 64
    expressao_simples              shift and go to state 45
    termo                          shift and go to state 46
    fator                          shift and go to state 48

state 40

    (32) leitura -> READ ( . expressao_simples )
    (43) expressao_simples -> . termo
    (44) expressao_simples -> . expressao_simples + termo
    (45) expressao_simples -> . expressao_simples - termo
    (46) termo -> . fator
    (47) termo -> . termo * fator
    (48) termo -> . termo / fator
    (49) termo -> . termo DIV fator
    (50) termo -> . termo MOD fator
    (40) fator -> . NOT fator
    (51) fator -> . - fator
    (52) fator -> . ID [ expressao ]
    (53) fator -> . NUMBER
    (54) fator -> . STRING_LITERAL
    (55) fator -> . ID
    (56) fator -> . TRUE
    (57) fator -> . FALSE
    (58) fator -> . ( expressao )
    (59) fator -> . ID ( expressao )

    NOT             shift and go to state 49
    -               shift and go to state 47
    ID              shift and go to state 50
    NUMBER          shift and go to state 51
    STRING_LITERAL  shift and go to state 52
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    (               shift and go to state 55

    expressao_simples              shift and go to state 65
    termo                          shift and go to state 46
    fator                          shift and go to state 48

state 41

    (33) leitura -> READLN ( . expressao_simples )
    (43) expressao_simples -> . termo
    (44) expressao_simples -> . expressao_simples + termo
    (45) expressao_simples -> . expressao_simples - termo
    (46) termo -> . fator
    (47) termo -> . termo * fator
    (48) termo -> . termo / fator
    (49) termo -> . termo DIV fator
    (50) termo -> . termo MOD fator
    (40) fator -> . NOT fator
    (51) fator -> . - fator
    (52) fator -> . ID [ expressao ]
    (53) fator -> . NUMBER
    (54) fator -> . STRING_LITERAL
    (55) fator -> . ID
    (56) fator -> . TRUE
    (57) fator -> . FALSE
    (58) fator -> . ( expressao )
    (59) fator -> . ID ( expressao )

    NOT             shift and go to state 49
    -               shift and go to state 47
    ID              shift and go to state 50
    NUMBER          shift and go to state 51
    STRING_LITERAL  shift and go to state 52
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    (               shift and go to state 55

    expressao_simples              shift and go to state 66
    termo                          shift and go to state 46
    fator                          shift and go to state 48

state 42

    (34) escrita -> WRITE ( . lista_expressao )
    (36) lista_expressao -> . expressao
    (37) lista_expressao -> . lista_expressao , expressao
    (38) expressao -> . expressao OR expressao
    (39) expressao -> . expressao AND expressao
    (41) expressao -> . expressao_simples
    (42) expressao -> . expressao_simples operador_relacional expressao_simples
    (43) expressao_simples -> . termo
    (44) expressao_simples -> . expressao_simples + termo
    (45) expressao_simples -> . expressao_simples - termo
    (46) termo -> . fator
    (47) termo -> . termo * fator
    (48) termo -> . termo / fator
    (49) termo -> . termo DIV fator
    (50) termo -> . termo MOD fator
    (40) fator -> . NOT fator
    (51) fator -> . - fator
    (52) fator -> . ID [ expressao ]
    (53) fator -> . NUMBER
    (54) fator -> . STRING_LITERAL
    (55) fator -> . ID
    (56) fator -> . TRUE
    (57) fator -> . FALSE
    (58) fator -> . ( expressao )
    (59) fator -> . ID ( expressao )

    NOT             shift and go to state 49
    -               shift and go to state 47
    ID              shift and go to state 50
    NUMBER          shift and go to state 51
    STRING_LITERAL  shift and go to state 52
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    (               shift and go to state 55

    lista_expressao                shift and go to state 67
    expressao                      shift and go to state 68
    expressao_simples              shift and go to state 45
    termo                          shift and go to state 46
    fator                          shift and go to state 48

state 43

    (35) escrita -> WRITELN ( . lista_expressao )
    (36) lista_expressao -> . expressao
    (37) lista_expressao -> . lista_expressao , expressao
    (38) expressao -> . expressao OR expressao
    (39) expressao -> . expressao AND expressao
    (41) expressao -> . expressao_simples
    (42) expressao -> . expressao_simples operador_relacional expressao_simples
    (43) expressao_simples -> . termo
    (44) expressao_simples -> . expressao_simples + termo
    (45) expressao_simples -> . expressao_simples - termo
    (46) termo -> . fator
    (47) termo -> . termo * fator
    (48) termo -> . termo / fator
    (49) termo -> . termo DIV fator
    (50) termo -> . termo MOD fator
    (40) fator -> . NOT fator
    (51) fator -> . - fator
    (52) fator -> . ID [ expressao ]
    (53) fator -> . NUMBER
    (54) fator -> . STRING_LITERAL
    (55) fator -> . ID
    (56) fator -> . TRUE
    (57) fator -> . FALSE
    (58) fator -> . ( expressao )
    (59) fator -> . ID ( expressao )

    NOT             shift and go to state 49
    -               shift and go to state 47
    ID              shift and go to state 50
    NUMBER          shift and go to state 51
    STRING_LITERAL  shift and go to state 52
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    (               shift and go to state 55

    lista_expressao                shift and go to state 69
    expressao                      shift and go to state 68
    expressao_simples              shift and go to state 45
    termo                          shift and go to state 46
    fator                          shift and go to state 48

state 44

    (66) if_statement -> IF expressao . THEN instrucao ELSE instrucao
    (67) if_statement -> IF expressao . THEN instrucao
    (38) expressao -> expressao . OR expressao
    (39) expressao -> expressao . AND expressao

    THEN            shift and go to state 70
    OR              shift and go to state 71
    AND             shift and go to state 72


state 45

    (41) expressao -> expressao_simples .
    (42) expressao -> expressao_simples . operador_relacional expressao_simples
    (44) expressao_simples -> expressao_simples . + termo
    (45) expressao_simples -> expressao_simples . - termo
    (60) operador_relacional -> . EQUALS
    (61) operador_relacional -> . NOT_EQUALS
    (62) operador_relacional -> . LESS_THAN
    (63) operador_relacional -> . LESS_THAN_OR_EQUAL_TO
    (64) operador_relacional -> . GREATER_THAN
    (65) operador_relacional -> . GREATER_THAN_OR_EQUAL_TO

    THEN            reduce using rule 41 (expressao -> expressao_simples .)
    OR              reduce using rule 41 (expressao -> expressao_simples .)
    AND             reduce using rule 41 (expressao -> expressao_simples .)
    DO              reduce using rule 41 (expressao -> expressao_simples .)
    END             reduce using rule 41 (expressao -> expressao_simples .)
    ;               reduce using rule 41 (expressao -> expressao_simples .)
    ELSE            reduce using rule 41 (expressao -> expressao_simples .)
    ]               reduce using rule 41 (expressao -> expressao_simples .)
    )               reduce using rule 41 (expressao -> expressao_simples .)
    ,               reduce using rule 41 (expressao -> expressao_simples .)
    TO              reduce using rule 41 (expressao -> expressao_simples .)
    DOWNTO          reduce using rule 41 (expressao -> expressao_simples .)
    +               shift and go to state 74
    -               shift and go to state 75
    EQUALS          shift and go to state 76
    NOT_EQUALS      shift and go to state 77
    LESS_THAN       shift and go to state 78
    LESS_THAN_OR_EQUAL_TO shift and go to state 79
    GREATER_THAN    shift and go to state 80
    GREATER_THAN_OR_EQUAL_TO shift and go to state 81

    operador_relacional            shift and go to state 73

state 46

    (43) expressao_simples -> termo .
    (47) termo -> termo . * fator
    (48) termo -> termo . / fator
    (49) termo -> termo . DIV fator
    (50) termo -> termo . MOD fator

    +               reduce using rule 43 (expressao_simples -> termo .)
    -               reduce using rule 43 (expressao_simples -> termo .)
    EQUALS          reduce using rule 43 (expressao_simples -> termo .)
    NOT_EQUALS      reduce using rule 43 (expressao_simples -> termo .)
    LESS_THAN       reduce using rule 43 (expressao_simples -> termo .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 43 (expressao_simples -> termo .)
    GREATER_THAN    reduce using rule 43 (expressao_simples -> termo .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 43 (expressao_simples -> termo .)
    THEN            reduce using rule 43 (expressao_simples -> termo .)
    OR              reduce using rule 43 (expressao_simples -> termo .)
    AND             reduce using rule 43 (expressao_simples -> termo .)
    DO              reduce using rule 43 (expressao_simples -> termo .)
    END             reduce using rule 43 (expressao_simples -> termo .)
    ;               reduce using rule 43 (expressao_simples -> termo .)
    ELSE            reduce using rule 43 (expressao_simples -> termo .)
    ]               reduce using rule 43 (expressao_simples -> termo .)
    )               reduce using rule 43 (expressao_simples -> termo .)
    ,               reduce using rule 43 (expressao_simples -> termo .)
    TO              reduce using rule 43 (expressao_simples -> termo .)
    DOWNTO          reduce using rule 43 (expressao_simples -> termo .)
    *               shift and go to state 82
    /               shift and go to state 83
    DIV             shift and go to state 84
    MOD             shift and go to state 85


state 47

    (51) fator -> - . fator
    (40) fator -> . NOT fator
    (51) fator -> . - fator
    (52) fator -> . ID [ expressao ]
    (53) fator -> . NUMBER
    (54) fator -> . STRING_LITERAL
    (55) fator -> . ID
    (56) fator -> . TRUE
    (57) fator -> . FALSE
    (58) fator -> . ( expressao )
    (59) fator -> . ID ( expressao )

    NOT             shift and go to state 49
    -               shift and go to state 47
    ID              shift and go to state 50
    NUMBER          shift and go to state 51
    STRING_LITERAL  shift and go to state 52
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    (               shift and go to state 55

    fator                          shift and go to state 86

state 48

    (46) termo -> fator .

    *               reduce using rule 46 (termo -> fator .)
    /               reduce using rule 46 (termo -> fator .)
    DIV             reduce using rule 46 (termo -> fator .)
    MOD             reduce using rule 46 (termo -> fator .)
    +               reduce using rule 46 (termo -> fator .)
    -               reduce using rule 46 (termo -> fator .)
    EQUALS          reduce using rule 46 (termo -> fator .)
    NOT_EQUALS      reduce using rule 46 (termo -> fator .)
    LESS_THAN       reduce using rule 46 (termo -> fator .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 46 (termo -> fator .)
    GREATER_THAN    reduce using rule 46 (termo -> fator .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 46 (termo -> fator .)
    THEN            reduce using rule 46 (termo -> fator .)
    OR              reduce using rule 46 (termo -> fator .)
    AND             reduce using rule 46 (termo -> fator .)
    DO              reduce using rule 46 (termo -> fator .)
    END             reduce using rule 46 (termo -> fator .)
    ;               reduce using rule 46 (termo -> fator .)
    ELSE            reduce using rule 46 (termo -> fator .)
    ]               reduce using rule 46 (termo -> fator .)
    )               reduce using rule 46 (termo -> fator .)
    ,               reduce using rule 46 (termo -> fator .)
    TO              reduce using rule 46 (termo -> fator .)
    DOWNTO          reduce using rule 46 (termo -> fator .)


state 49

    (40) fator -> NOT . fator
    (40) fator -> . NOT fator
    (51) fator -> . - fator
    (52) fator -> . ID [ expressao ]
    (53) fator -> . NUMBER
    (54) fator -> . STRING_LITERAL
    (55) fator -> . ID
    (56) fator -> . TRUE
    (57) fator -> . FALSE
    (58) fator -> . ( expressao )
    (59) fator -> . ID ( expressao )

    NOT             shift and go to state 49
    -               shift and go to state 47
    ID              shift and go to state 50
    NUMBER          shift and go to state 51
    STRING_LITERAL  shift and go to state 52
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    (               shift and go to state 55

    fator                          shift and go to state 87

state 50

    (52) fator -> ID . [ expressao ]
    (55) fator -> ID .
    (59) fator -> ID . ( expressao )

    [               shift and go to state 88
    *               reduce using rule 55 (fator -> ID .)
    /               reduce using rule 55 (fator -> ID .)
    DIV             reduce using rule 55 (fator -> ID .)
    MOD             reduce using rule 55 (fator -> ID .)
    +               reduce using rule 55 (fator -> ID .)
    -               reduce using rule 55 (fator -> ID .)
    EQUALS          reduce using rule 55 (fator -> ID .)
    NOT_EQUALS      reduce using rule 55 (fator -> ID .)
    LESS_THAN       reduce using rule 55 (fator -> ID .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 55 (fator -> ID .)
    GREATER_THAN    reduce using rule 55 (fator -> ID .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 55 (fator -> ID .)
    THEN            reduce using rule 55 (fator -> ID .)
    OR              reduce using rule 55 (fator -> ID .)
    AND             reduce using rule 55 (fator -> ID .)
    DO              reduce using rule 55 (fator -> ID .)
    END             reduce using rule 55 (fator -> ID .)
    ;               reduce using rule 55 (fator -> ID .)
    ELSE            reduce using rule 55 (fator -> ID .)
    ]               reduce using rule 55 (fator -> ID .)
    )               reduce using rule 55 (fator -> ID .)
    ,               reduce using rule 55 (fator -> ID .)
    TO              reduce using rule 55 (fator -> ID .)
    DOWNTO          reduce using rule 55 (fator -> ID .)
    (               shift and go to state 89


state 51

    (53) fator -> NUMBER .

    *               reduce using rule 53 (fator -> NUMBER .)
    /               reduce using rule 53 (fator -> NUMBER .)
    DIV             reduce using rule 53 (fator -> NUMBER .)
    MOD             reduce using rule 53 (fator -> NUMBER .)
    +               reduce using rule 53 (fator -> NUMBER .)
    -               reduce using rule 53 (fator -> NUMBER .)
    EQUALS          reduce using rule 53 (fator -> NUMBER .)
    NOT_EQUALS      reduce using rule 53 (fator -> NUMBER .)
    LESS_THAN       reduce using rule 53 (fator -> NUMBER .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 53 (fator -> NUMBER .)
    GREATER_THAN    reduce using rule 53 (fator -> NUMBER .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 53 (fator -> NUMBER .)
    THEN            reduce using rule 53 (fator -> NUMBER .)
    OR              reduce using rule 53 (fator -> NUMBER .)
    AND             reduce using rule 53 (fator -> NUMBER .)
    DO              reduce using rule 53 (fator -> NUMBER .)
    END             reduce using rule 53 (fator -> NUMBER .)
    ;               reduce using rule 53 (fator -> NUMBER .)
    ELSE            reduce using rule 53 (fator -> NUMBER .)
    ]               reduce using rule 53 (fator -> NUMBER .)
    )               reduce using rule 53 (fator -> NUMBER .)
    ,               reduce using rule 53 (fator -> NUMBER .)
    TO              reduce using rule 53 (fator -> NUMBER .)
    DOWNTO          reduce using rule 53 (fator -> NUMBER .)


state 52

    (54) fator -> STRING_LITERAL .

    *               reduce using rule 54 (fator -> STRING_LITERAL .)
    /               reduce using rule 54 (fator -> STRING_LITERAL .)
    DIV             reduce using rule 54 (fator -> STRING_LITERAL .)
    MOD             reduce using rule 54 (fator -> STRING_LITERAL .)
    +               reduce using rule 54 (fator -> STRING_LITERAL .)
    -               reduce using rule 54 (fator -> STRING_LITERAL .)
    EQUALS          reduce using rule 54 (fator -> STRING_LITERAL .)
    NOT_EQUALS      reduce using rule 54 (fator -> STRING_LITERAL .)
    LESS_THAN       reduce using rule 54 (fator -> STRING_LITERAL .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 54 (fator -> STRING_LITERAL .)
    GREATER_THAN    reduce using rule 54 (fator -> STRING_LITERAL .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 54 (fator -> STRING_LITERAL .)
    THEN            reduce using rule 54 (fator -> STRING_LITERAL .)
    OR              reduce using rule 54 (fator -> STRING_LITERAL .)
    AND             reduce using rule 54 (fator -> STRING_LITERAL .)
    DO              reduce using rule 54 (fator -> STRING_LITERAL .)
    END             reduce using rule 54 (fator -> STRING_LITERAL .)
    ;               reduce using rule 54 (fator -> STRING_LITERAL .)
    ELSE            reduce using rule 54 (fator -> STRING_LITERAL .)
    ]               reduce using rule 54 (fator -> STRING_LITERAL .)
    )               reduce using rule 54 (fator -> STRING_LITERAL .)
    ,               reduce using rule 54 (fator -> STRING_LITERAL .)
    TO              reduce using rule 54 (fator -> STRING_LITERAL .)
    DOWNTO          reduce using rule 54 (fator -> STRING_LITERAL .)


state 53

    (56) fator -> TRUE .

    *               reduce using rule 56 (fator -> TRUE .)
    /               reduce using rule 56 (fator -> TRUE .)
    DIV             reduce using rule 56 (fator -> TRUE .)
    MOD             reduce using rule 56 (fator -> TRUE .)
    +               reduce using rule 56 (fator -> TRUE .)
    -               reduce using rule 56 (fator -> TRUE .)
    EQUALS          reduce using rule 56 (fator -> TRUE .)
    NOT_EQUALS      reduce using rule 56 (fator -> TRUE .)
    LESS_THAN       reduce using rule 56 (fator -> TRUE .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 56 (fator -> TRUE .)
    GREATER_THAN    reduce using rule 56 (fator -> TRUE .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 56 (fator -> TRUE .)
    THEN            reduce using rule 56 (fator -> TRUE .)
    OR              reduce using rule 56 (fator -> TRUE .)
    AND             reduce using rule 56 (fator -> TRUE .)
    DO              reduce using rule 56 (fator -> TRUE .)
    END             reduce using rule 56 (fator -> TRUE .)
    ;               reduce using rule 56 (fator -> TRUE .)
    ELSE            reduce using rule 56 (fator -> TRUE .)
    ]               reduce using rule 56 (fator -> TRUE .)
    )               reduce using rule 56 (fator -> TRUE .)
    ,               reduce using rule 56 (fator -> TRUE .)
    TO              reduce using rule 56 (fator -> TRUE .)
    DOWNTO          reduce using rule 56 (fator -> TRUE .)


state 54

    (57) fator -> FALSE .

    *               reduce using rule 57 (fator -> FALSE .)
    /               reduce using rule 57 (fator -> FALSE .)
    DIV             reduce using rule 57 (fator -> FALSE .)
    MOD             reduce using rule 57 (fator -> FALSE .)
    +               reduce using rule 57 (fator -> FALSE .)
    -               reduce using rule 57 (fator -> FALSE .)
    EQUALS          reduce using rule 57 (fator -> FALSE .)
    NOT_EQUALS      reduce using rule 57 (fator -> FALSE .)
    LESS_THAN       reduce using rule 57 (fator -> FALSE .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 57 (fator -> FALSE .)
    GREATER_THAN    reduce using rule 57 (fator -> FALSE .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 57 (fator -> FALSE .)
    THEN            reduce using rule 57 (fator -> FALSE .)
    OR              reduce using rule 57 (fator -> FALSE .)
    AND             reduce using rule 57 (fator -> FALSE .)
    DO              reduce using rule 57 (fator -> FALSE .)
    END             reduce using rule 57 (fator -> FALSE .)
    ;               reduce using rule 57 (fator -> FALSE .)
    ELSE            reduce using rule 57 (fator -> FALSE .)
    ]               reduce using rule 57 (fator -> FALSE .)
    )               reduce using rule 57 (fator -> FALSE .)
    ,               reduce using rule 57 (fator -> FALSE .)
    TO              reduce using rule 57 (fator -> FALSE .)
    DOWNTO          reduce using rule 57 (fator -> FALSE .)


state 55

    (58) fator -> ( . expressao )
    (38) expressao -> . expressao OR expressao
    (39) expressao -> . expressao AND expressao
    (41) expressao -> . expressao_simples
    (42) expressao -> . expressao_simples operador_relacional expressao_simples
    (43) expressao_simples -> . termo
    (44) expressao_simples -> . expressao_simples + termo
    (45) expressao_simples -> . expressao_simples - termo
    (46) termo -> . fator
    (47) termo -> . termo * fator
    (48) termo -> . termo / fator
    (49) termo -> . termo DIV fator
    (50) termo -> . termo MOD fator
    (40) fator -> . NOT fator
    (51) fator -> . - fator
    (52) fator -> . ID [ expressao ]
    (53) fator -> . NUMBER
    (54) fator -> . STRING_LITERAL
    (55) fator -> . ID
    (56) fator -> . TRUE
    (57) fator -> . FALSE
    (58) fator -> . ( expressao )
    (59) fator -> . ID ( expressao )

    NOT             shift and go to state 49
    -               shift and go to state 47
    ID              shift and go to state 50
    NUMBER          shift and go to state 51
    STRING_LITERAL  shift and go to state 52
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    (               shift and go to state 55

    expressao                      shift and go to state 90
    expressao_simples              shift and go to state 45
    termo                          shift and go to state 46
    fator                          shift and go to state 48

state 56

    (68) while_statement -> WHILE expressao . DO instrucao
    (38) expressao -> expressao . OR expressao
    (39) expressao -> expressao . AND expressao

    DO              shift and go to state 91
    OR              shift and go to state 71
    AND             shift and go to state 72


state 57

    (69) for_statement -> FOR ID . ASSIGN expressao TO expressao DO instrucao
    (70) for_statement -> FOR ID . ASSIGN expressao DOWNTO expressao DO instrucao

    ASSIGN          shift and go to state 92


state 58

    (8) declaracoes -> declaracao declaracoes .

    BEGIN           reduce using rule 8 (declaracoes -> declaracao declaracoes .)


state 59

    (9) declaracao -> lista_id : . tipo ;
    (12) tipo -> . INTEGER
    (13) tipo -> . REAL
    (14) tipo -> . BOOLEAN
    (15) tipo -> . CHAR
    (16) tipo -> . STRING
    (17) tipo -> . ARRAY [ NUMBER RANGE NUMBER ] OF tipo

    INTEGER         shift and go to state 94
    REAL            shift and go to state 95
    BOOLEAN         shift and go to state 96
    CHAR            shift and go to state 97
    STRING          shift and go to state 98
    ARRAY           shift and go to state 99

    tipo                           shift and go to state 93

state 60

    (11) lista_id -> lista_id , . ID

    ID              shift and go to state 100


state 61

    (29) bloco -> BEGIN lista_instrucoes END .

    END             reduce using rule 29 (bloco -> BEGIN lista_instrucoes END .)
    ;               reduce using rule 29 (bloco -> BEGIN lista_instrucoes END .)
    ELSE            reduce using rule 29 (bloco -> BEGIN lista_instrucoes END .)


state 62

    (20) lista_instrucoes -> lista_instrucoes ; instrucao .

    END             reduce using rule 20 (lista_instrucoes -> lista_instrucoes ; instrucao .)
    ;               reduce using rule 20 (lista_instrucoes -> lista_instrucoes ; instrucao .)


state 63

    (30) atribuicao -> ID ASSIGN expressao .
    (38) expressao -> expressao . OR expressao
    (39) expressao -> expressao . AND expressao

    END             reduce using rule 30 (atribuicao -> ID ASSIGN expressao .)
    ;               reduce using rule 30 (atribuicao -> ID ASSIGN expressao .)
    ELSE            reduce using rule 30 (atribuicao -> ID ASSIGN expressao .)
    OR              shift and go to state 71
    AND             shift and go to state 72


state 64

    (31) atribuicao -> ID [ expressao . ] ASSIGN expressao
    (38) expressao -> expressao . OR expressao
    (39) expressao -> expressao . AND expressao

    ]               shift and go to state 101
    OR              shift and go to state 71
    AND             shift and go to state 72


state 65

    (32) leitura -> READ ( expressao_simples . )
    (44) expressao_simples -> expressao_simples . + termo
    (45) expressao_simples -> expressao_simples . - termo

    )               shift and go to state 102
    +               shift and go to state 74
    -               shift and go to state 75


state 66

    (33) leitura -> READLN ( expressao_simples . )
    (44) expressao_simples -> expressao_simples . + termo
    (45) expressao_simples -> expressao_simples . - termo

    )               shift and go to state 103
    +               shift and go to state 74
    -               shift and go to state 75


state 67

    (34) escrita -> WRITE ( lista_expressao . )
    (37) lista_expressao -> lista_expressao . , expressao

    )               shift and go to state 104
    ,               shift and go to state 105


state 68

    (36) lista_expressao -> expressao .
    (38) expressao -> expressao . OR expressao
    (39) expressao -> expressao . AND expressao

    )               reduce using rule 36 (lista_expressao -> expressao .)
    ,               reduce using rule 36 (lista_expressao -> expressao .)
    OR              shift and go to state 71
    AND             shift and go to state 72


state 69

    (35) escrita -> WRITELN ( lista_expressao . )
    (37) lista_expressao -> lista_expressao . , expressao

    )               shift and go to state 106
    ,               shift and go to state 105


state 70

    (66) if_statement -> IF expressao THEN . instrucao ELSE instrucao
    (67) if_statement -> IF expressao THEN . instrucao
    (21) instrucao -> . atribuicao
    (22) instrucao -> . leitura
    (23) instrucao -> . escrita
    (24) instrucao -> . if_statement
    (25) instrucao -> . while_statement
    (26) instrucao -> . for_statement
    (27) instrucao -> . bloco
    (28) instrucao -> .
    (30) atribuicao -> . ID ASSIGN expressao
    (31) atribuicao -> . ID [ expressao ] ASSIGN expressao
    (32) leitura -> . READ ( expressao_simples )
    (33) leitura -> . READLN ( expressao_simples )
    (34) escrita -> . WRITE ( lista_expressao )
    (35) escrita -> . WRITELN ( lista_expressao )
    (66) if_statement -> . IF expressao THEN instrucao ELSE instrucao
    (67) if_statement -> . IF expressao THEN instrucao
    (68) while_statement -> . WHILE expressao DO instrucao
    (69) for_statement -> . FOR ID ASSIGN expressao TO expressao DO instrucao
    (70) for_statement -> . FOR ID ASSIGN expressao DOWNTO expressao DO instrucao
    (29) bloco -> . BEGIN lista_instrucoes END

    ELSE            reduce using rule 28 (instrucao -> .)
    END             reduce using rule 28 (instrucao -> .)
    ;               reduce using rule 28 (instrucao -> .)
    ID              shift and go to state 22
    READ            shift and go to state 23
    READLN          shift and go to state 24
    WRITE           shift and go to state 25
    WRITELN         shift and go to state 26
    IF              shift and go to state 27
    WHILE           shift and go to state 28
    FOR             shift and go to state 29
    BEGIN           shift and go to state 12

    instrucao                      shift and go to state 107
    atribuicao                     shift and go to state 15
    leitura                        shift and go to state 16
    escrita                        shift and go to state 17
    if_statement                   shift and go to state 18
    while_statement                shift and go to state 19
    for_statement                  shift and go to state 20
    bloco                          shift and go to state 21

state 71

    (38) expressao -> expressao OR . expressao
    (38) expressao -> . expressao OR expressao
    (39) expressao -> . expressao AND expressao
    (41) expressao -> . expressao_simples
    (42) expressao -> . expressao_simples operador_relacional expressao_simples
    (43) expressao_simples -> . termo
    (44) expressao_simples -> . expressao_simples + termo
    (45) expressao_simples -> . expressao_simples - termo
    (46) termo -> . fator
    (47) termo -> . termo * fator
    (48) termo -> . termo / fator
    (49) termo -> . termo DIV fator
    (50) termo -> . termo MOD fator
    (40) fator -> . NOT fator
    (51) fator -> . - fator
    (52) fator -> . ID [ expressao ]
    (53) fator -> . NUMBER
    (54) fator -> . STRING_LITERAL
    (55) fator -> . ID
    (56) fator -> . TRUE
    (57) fator -> . FALSE
    (58) fator -> . ( expressao )
    (59) fator -> . ID ( expressao )

    NOT             shift and go to state 49
    -               shift and go to state 47
    ID              shift and go to state 50
    NUMBER          shift and go to state 51
    STRING_LITERAL  shift and go to state 52
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    (               shift and go to state 55

    expressao                      shift and go to state 108
    expressao_simples              shift and go to state 45
    termo                          shift and go to state 46
    fator                          shift and go to state 48

state 72

    (39) expressao -> expressao AND . expressao
    (38) expressao -> . expressao OR expressao
    (39) expressao -> . expressao AND expressao
    (41) expressao -> . expressao_simples
    (42) expressao -> . expressao_simples operador_relacional expressao_simples
    (43) expressao_simples -> . termo
    (44) expressao_simples -> . expressao_simples + termo
    (45) expressao_simples -> . expressao_simples - termo
    (46) termo -> . fator
    (47) termo -> . termo * fator
    (48) termo -> . termo / fator
    (49) termo -> . termo DIV fator
    (50) termo -> . termo MOD fator
    (40) fator -> . NOT fator
    (51) fator -> . - fator
    (52) fator -> . ID [ expressao ]
    (53) fator -> . NUMBER
    (54) fator -> . STRING_LITERAL
    (55) fator -> . ID
    (56) fator -> . TRUE
    (57) fator -> . FALSE
    (58) fator -> . ( expressao )
    (59) fator -> . ID ( expressao )

    NOT             shift and go to state 49
    -               shift and go to state 47
    ID              shift and go to state 50
    NUMBER          shift and go to state 51
    STRING_LITERAL  shift and go to state 52
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    (               shift and go to state 55

    expressao                      shift and go to state 109
    expressao_simples              shift and go to state 45
    termo                          shift and go to state 46
    fator                          shift and go to state 48

state 73

    (42) expressao -> expressao_simples operador_relacional . expressao_simples
    (43) expressao_simples -> . termo
    (44) expressao_simples -> . expressao_simples + termo
    (45) expressao_simples -> . expressao_simples - termo
    (46) termo -> . fator
    (47) termo -> . termo * fator
    (48) termo -> . termo / fator
    (49) termo -> . termo DIV fator
    (50) termo -> . termo MOD fator
    (40) fator -> . NOT fator
    (51) fator -> . - fator
    (52) fator -> . ID [ expressao ]
    (53) fator -> . NUMBER
    (54) fator -> . STRING_LITERAL
    (55) fator -> . ID
    (56) fator -> . TRUE
    (57) fator -> . FALSE
    (58) fator -> . ( expressao )
    (59) fator -> . ID ( expressao )

    NOT             shift and go to state 49
    -               shift and go to state 47
    ID              shift and go to state 50
    NUMBER          shift and go to state 51
    STRING_LITERAL  shift and go to state 52
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    (               shift and go to state 55

    expressao_simples              shift and go to state 110
    termo                          shift and go to state 46
    fator                          shift and go to state 48

state 74

    (44) expressao_simples -> expressao_simples + . termo
    (46) termo -> . fator
    (47) termo -> . termo * fator
    (48) termo -> . termo / fator
    (49) termo -> . termo DIV fator
    (50) termo -> . termo MOD fator
    (40) fator -> . NOT fator
    (51) fator -> . - fator
    (52) fator -> . ID [ expressao ]
    (53) fator -> . NUMBER
    (54) fator -> . STRING_LITERAL
    (55) fator -> . ID
    (56) fator -> . TRUE
    (57) fator -> . FALSE
    (58) fator -> . ( expressao )
    (59) fator -> . ID ( expressao )

    NOT             shift and go to state 49
    -               shift and go to state 47
    ID              shift and go to state 50
    NUMBER          shift and go to state 51
    STRING_LITERAL  shift and go to state 52
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    (               shift and go to state 55

    termo                          shift and go to state 111
    fator                          shift and go to state 48

state 75

    (45) expressao_simples -> expressao_simples - . termo
    (46) termo -> . fator
    (47) termo -> . termo * fator
    (48) termo -> . termo / fator
    (49) termo -> . termo DIV fator
    (50) termo -> . termo MOD fator
    (40) fator -> . NOT fator
    (51) fator -> . - fator
    (52) fator -> . ID [ expressao ]
    (53) fator -> . NUMBER
    (54) fator -> . STRING_LITERAL
    (55) fator -> . ID
    (56) fator -> . TRUE
    (57) fator -> . FALSE
    (58) fator -> . ( expressao )
    (59) fator -> . ID ( expressao )

    NOT             shift and go to state 49
    -               shift and go to state 47
    ID              shift and go to state 50
    NUMBER          shift and go to state 51
    STRING_LITERAL  shift and go to state 52
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    (               shift and go to state 55

    termo                          shift and go to state 112
    fator                          shift and go to state 48

state 76

    (60) operador_relacional -> EQUALS .

    NOT             reduce using rule 60 (operador_relacional -> EQUALS .)
    -               reduce using rule 60 (operador_relacional -> EQUALS .)
    ID              reduce using rule 60 (operador_relacional -> EQUALS .)
    NUMBER          reduce using rule 60 (operador_relacional -> EQUALS .)
    STRING_LITERAL  reduce using rule 60 (operador_relacional -> EQUALS .)
    TRUE            reduce using rule 60 (operador_relacional -> EQUALS .)
    FALSE           reduce using rule 60 (operador_relacional -> EQUALS .)
    (               reduce using rule 60 (operador_relacional -> EQUALS .)


state 77

    (61) operador_relacional -> NOT_EQUALS .

    NOT             reduce using rule 61 (operador_relacional -> NOT_EQUALS .)
    -               reduce using rule 61 (operador_relacional -> NOT_EQUALS .)
    ID              reduce using rule 61 (operador_relacional -> NOT_EQUALS .)
    NUMBER          reduce using rule 61 (operador_relacional -> NOT_EQUALS .)
    STRING_LITERAL  reduce using rule 61 (operador_relacional -> NOT_EQUALS .)
    TRUE            reduce using rule 61 (operador_relacional -> NOT_EQUALS .)
    FALSE           reduce using rule 61 (operador_relacional -> NOT_EQUALS .)
    (               reduce using rule 61 (operador_relacional -> NOT_EQUALS .)


state 78

    (62) operador_relacional -> LESS_THAN .

    NOT             reduce using rule 62 (operador_relacional -> LESS_THAN .)
    -               reduce using rule 62 (operador_relacional -> LESS_THAN .)
    ID              reduce using rule 62 (operador_relacional -> LESS_THAN .)
    NUMBER          reduce using rule 62 (operador_relacional -> LESS_THAN .)
    STRING_LITERAL  reduce using rule 62 (operador_relacional -> LESS_THAN .)
    TRUE            reduce using rule 62 (operador_relacional -> LESS_THAN .)
    FALSE           reduce using rule 62 (operador_relacional -> LESS_THAN .)
    (               reduce using rule 62 (operador_relacional -> LESS_THAN .)


state 79

    (63) operador_relacional -> LESS_THAN_OR_EQUAL_TO .

    NOT             reduce using rule 63 (operador_relacional -> LESS_THAN_OR_EQUAL_TO .)
    -               reduce using rule 63 (operador_relacional -> LESS_THAN_OR_EQUAL_TO .)
    ID              reduce using rule 63 (operador_relacional -> LESS_THAN_OR_EQUAL_TO .)
    NUMBER          reduce using rule 63 (operador_relacional -> LESS_THAN_OR_EQUAL_TO .)
    STRING_LITERAL  reduce using rule 63 (operador_relacional -> LESS_THAN_OR_EQUAL_TO .)
    TRUE            reduce using rule 63 (operador_relacional -> LESS_THAN_OR_EQUAL_TO .)
    FALSE           reduce using rule 63 (operador_relacional -> LESS_THAN_OR_EQUAL_TO .)
    (               reduce using rule 63 (operador_relacional -> LESS_THAN_OR_EQUAL_TO .)


state 80

    (64) operador_relacional -> GREATER_THAN .

    NOT             reduce using rule 64 (operador_relacional -> GREATER_THAN .)
    -               reduce using rule 64 (operador_relacional -> GREATER_THAN .)
    ID              reduce using rule 64 (operador_relacional -> GREATER_THAN .)
    NUMBER          reduce using rule 64 (operador_relacional -> GREATER_THAN .)
    STRING_LITERAL  reduce using rule 64 (operador_relacional -> GREATER_THAN .)
    TRUE            reduce using rule 64 (operador_relacional -> GREATER_THAN .)
    FALSE           reduce using rule 64 (operador_relacional -> GREATER_THAN .)
    (               reduce using rule 64 (operador_relacional -> GREATER_THAN .)


state 81

    (65) operador_relacional -> GREATER_THAN_OR_EQUAL_TO .

    NOT             reduce using rule 65 (operador_relacional -> GREATER_THAN_OR_EQUAL_TO .)
    -               reduce using rule 65 (operador_relacional -> GREATER_THAN_OR_EQUAL_TO .)
    ID              reduce using rule 65 (operador_relacional -> GREATER_THAN_OR_EQUAL_TO .)
    NUMBER          reduce using rule 65 (operador_relacional -> GREATER_THAN_OR_EQUAL_TO .)
    STRING_LITERAL  reduce using rule 65 (operador_relacional -> GREATER_THAN_OR_EQUAL_TO .)
    TRUE            reduce using rule 65 (operador_relacional -> GREATER_THAN_OR_EQUAL_TO .)
    FALSE           reduce using rule 65 (operador_relacional -> GREATER_THAN_OR_EQUAL_TO .)
    (               reduce using rule 65 (operador_relacional -> GREATER_THAN_OR_EQUAL_TO .)


state 82

    (47) termo -> termo * . fator
    (40) fator -> . NOT fator
    (51) fator -> . - fator
    (52) fator -> . ID [ expressao ]
    (53) fator -> . NUMBER
    (54) fator -> . STRING_LITERAL
    (55) fator -> . ID
    (56) fator -> . TRUE
    (57) fator -> . FALSE
    (58) fator -> . ( expressao )
    (59) fator -> . ID ( expressao )

    NOT             shift and go to state 49
    -               shift and go to state 47
    ID              shift and go to state 50
    NUMBER          shift and go to state 51
    STRING_LITERAL  shift and go to state 52
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    (               shift and go to state 55

    fator                          shift and go to state 113

state 83

    (48) termo -> termo / . fator
    (40) fator -> . NOT fator
    (51) fator -> . - fator
    (52) fator -> . ID [ expressao ]
    (53) fator -> . NUMBER
    (54) fator -> . STRING_LITERAL
    (55) fator -> . ID
    (56) fator -> . TRUE
    (57) fator -> . FALSE
    (58) fator -> . ( expressao )
    (59) fator -> . ID ( expressao )

    NOT             shift and go to state 49
    -               shift and go to state 47
    ID              shift and go to state 50
    NUMBER          shift and go to state 51
    STRING_LITERAL  shift and go to state 52
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    (               shift and go to state 55

    fator                          shift and go to state 114

state 84

    (49) termo -> termo DIV . fator
    (40) fator -> . NOT fator
    (51) fator -> . - fator
    (52) fator -> . ID [ expressao ]
    (53) fator -> . NUMBER
    (54) fator -> . STRING_LITERAL
    (55) fator -> . ID
    (56) fator -> . TRUE
    (57) fator -> . FALSE
    (58) fator -> . ( expressao )
    (59) fator -> . ID ( expressao )

    NOT             shift and go to state 49
    -               shift and go to state 47
    ID              shift and go to state 50
    NUMBER          shift and go to state 51
    STRING_LITERAL  shift and go to state 52
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    (               shift and go to state 55

    fator                          shift and go to state 115

state 85

    (50) termo -> termo MOD . fator
    (40) fator -> . NOT fator
    (51) fator -> . - fator
    (52) fator -> . ID [ expressao ]
    (53) fator -> . NUMBER
    (54) fator -> . STRING_LITERAL
    (55) fator -> . ID
    (56) fator -> . TRUE
    (57) fator -> . FALSE
    (58) fator -> . ( expressao )
    (59) fator -> . ID ( expressao )

    NOT             shift and go to state 49
    -               shift and go to state 47
    ID              shift and go to state 50
    NUMBER          shift and go to state 51
    STRING_LITERAL  shift and go to state 52
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    (               shift and go to state 55

    fator                          shift and go to state 116

state 86

    (51) fator -> - fator .

    *               reduce using rule 51 (fator -> - fator .)
    /               reduce using rule 51 (fator -> - fator .)
    DIV             reduce using rule 51 (fator -> - fator .)
    MOD             reduce using rule 51 (fator -> - fator .)
    +               reduce using rule 51 (fator -> - fator .)
    -               reduce using rule 51 (fator -> - fator .)
    EQUALS          reduce using rule 51 (fator -> - fator .)
    NOT_EQUALS      reduce using rule 51 (fator -> - fator .)
    LESS_THAN       reduce using rule 51 (fator -> - fator .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 51 (fator -> - fator .)
    GREATER_THAN    reduce using rule 51 (fator -> - fator .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 51 (fator -> - fator .)
    THEN            reduce using rule 51 (fator -> - fator .)
    OR              reduce using rule 51 (fator -> - fator .)
    AND             reduce using rule 51 (fator -> - fator .)
    DO              reduce using rule 51 (fator -> - fator .)
    END             reduce using rule 51 (fator -> - fator .)
    ;               reduce using rule 51 (fator -> - fator .)
    ELSE            reduce using rule 51 (fator -> - fator .)
    ]               reduce using rule 51 (fator -> - fator .)
    )               reduce using rule 51 (fator -> - fator .)
    ,               reduce using rule 51 (fator -> - fator .)
    TO              reduce using rule 51 (fator -> - fator .)
    DOWNTO          reduce using rule 51 (fator -> - fator .)


state 87

    (40) fator -> NOT fator .

    *               reduce using rule 40 (fator -> NOT fator .)
    /               reduce using rule 40 (fator -> NOT fator .)
    DIV             reduce using rule 40 (fator -> NOT fator .)
    MOD             reduce using rule 40 (fator -> NOT fator .)
    +               reduce using rule 40 (fator -> NOT fator .)
    -               reduce using rule 40 (fator -> NOT fator .)
    EQUALS          reduce using rule 40 (fator -> NOT fator .)
    NOT_EQUALS      reduce using rule 40 (fator -> NOT fator .)
    LESS_THAN       reduce using rule 40 (fator -> NOT fator .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 40 (fator -> NOT fator .)
    GREATER_THAN    reduce using rule 40 (fator -> NOT fator .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 40 (fator -> NOT fator .)
    THEN            reduce using rule 40 (fator -> NOT fator .)
    OR              reduce using rule 40 (fator -> NOT fator .)
    AND             reduce using rule 40 (fator -> NOT fator .)
    DO              reduce using rule 40 (fator -> NOT fator .)
    END             reduce using rule 40 (fator -> NOT fator .)
    ;               reduce using rule 40 (fator -> NOT fator .)
    ELSE            reduce using rule 40 (fator -> NOT fator .)
    ]               reduce using rule 40 (fator -> NOT fator .)
    )               reduce using rule 40 (fator -> NOT fator .)
    ,               reduce using rule 40 (fator -> NOT fator .)
    TO              reduce using rule 40 (fator -> NOT fator .)
    DOWNTO          reduce using rule 40 (fator -> NOT fator .)


state 88

    (52) fator -> ID [ . expressao ]
    (38) expressao -> . expressao OR expressao
    (39) expressao -> . expressao AND expressao
    (41) expressao -> . expressao_simples
    (42) expressao -> . expressao_simples operador_relacional expressao_simples
    (43) expressao_simples -> . termo
    (44) expressao_simples -> . expressao_simples + termo
    (45) expressao_simples -> . expressao_simples - termo
    (46) termo -> . fator
    (47) termo -> . termo * fator
    (48) termo -> . termo / fator
    (49) termo -> . termo DIV fator
    (50) termo -> . termo MOD fator
    (40) fator -> . NOT fator
    (51) fator -> . - fator
    (52) fator -> . ID [ expressao ]
    (53) fator -> . NUMBER
    (54) fator -> . STRING_LITERAL
    (55) fator -> . ID
    (56) fator -> . TRUE
    (57) fator -> . FALSE
    (58) fator -> . ( expressao )
    (59) fator -> . ID ( expressao )

    NOT             shift and go to state 49
    -               shift and go to state 47
    ID              shift and go to state 50
    NUMBER          shift and go to state 51
    STRING_LITERAL  shift and go to state 52
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    (               shift and go to state 55

    expressao                      shift and go to state 117
    expressao_simples              shift and go to state 45
    termo                          shift and go to state 46
    fator                          shift and go to state 48

state 89

    (59) fator -> ID ( . expressao )
    (38) expressao -> . expressao OR expressao
    (39) expressao -> . expressao AND expressao
    (41) expressao -> . expressao_simples
    (42) expressao -> . expressao_simples operador_relacional expressao_simples
    (43) expressao_simples -> . termo
    (44) expressao_simples -> . expressao_simples + termo
    (45) expressao_simples -> . expressao_simples - termo
    (46) termo -> . fator
    (47) termo -> . termo * fator
    (48) termo -> . termo / fator
    (49) termo -> . termo DIV fator
    (50) termo -> . termo MOD fator
    (40) fator -> . NOT fator
    (51) fator -> . - fator
    (52) fator -> . ID [ expressao ]
    (53) fator -> . NUMBER
    (54) fator -> . STRING_LITERAL
    (55) fator -> . ID
    (56) fator -> . TRUE
    (57) fator -> . FALSE
    (58) fator -> . ( expressao )
    (59) fator -> . ID ( expressao )

    NOT             shift and go to state 49
    -               shift and go to state 47
    ID              shift and go to state 50
    NUMBER          shift and go to state 51
    STRING_LITERAL  shift and go to state 52
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    (               shift and go to state 55

    expressao                      shift and go to state 118
    expressao_simples              shift and go to state 45
    termo                          shift and go to state 46
    fator                          shift and go to state 48

state 90

    (58) fator -> ( expressao . )
    (38) expressao -> expressao . OR expressao
    (39) expressao -> expressao . AND expressao

    )               shift and go to state 119
    OR              shift and go to state 71
    AND             shift and go to state 72


state 91

    (68) while_statement -> WHILE expressao DO . instrucao
    (21) instrucao -> . atribuicao
    (22) instrucao -> . leitura
    (23) instrucao -> . escrita
    (24) instrucao -> . if_statement
    (25) instrucao -> . while_statement
    (26) instrucao -> . for_statement
    (27) instrucao -> . bloco
    (28) instrucao -> .
    (30) atribuicao -> . ID ASSIGN expressao
    (31) atribuicao -> . ID [ expressao ] ASSIGN expressao
    (32) leitura -> . READ ( expressao_simples )
    (33) leitura -> . READLN ( expressao_simples )
    (34) escrita -> . WRITE ( lista_expressao )
    (35) escrita -> . WRITELN ( lista_expressao )
    (66) if_statement -> . IF expressao THEN instrucao ELSE instrucao
    (67) if_statement -> . IF expressao THEN instrucao
    (68) while_statement -> . WHILE expressao DO instrucao
    (69) for_statement -> . FOR ID ASSIGN expressao TO expressao DO instrucao
    (70) for_statement -> . FOR ID ASSIGN expressao DOWNTO expressao DO instrucao
    (29) bloco -> . BEGIN lista_instrucoes END

    ELSE            reduce using rule 28 (instrucao -> .)
    END             reduce using rule 28 (instrucao -> .)
    ;               reduce using rule 28 (instrucao -> .)
    ID              shift and go to state 22
    READ            shift and go to state 23
    READLN          shift and go to state 24
    WRITE           shift and go to state 25
    WRITELN         shift and go to state 26
    IF              shift and go to state 27
    WHILE           shift and go to state 28
    FOR             shift and go to state 29
    BEGIN           shift and go to state 12

    instrucao                      shift and go to state 120
    atribuicao                     shift and go to state 15
    leitura                        shift and go to state 16
    escrita                        shift and go to state 17
    if_statement                   shift and go to state 18
    while_statement                shift and go to state 19
    for_statement                  shift and go to state 20
    bloco                          shift and go to state 21

state 92

    (69) for_statement -> FOR ID ASSIGN . expressao TO expressao DO instrucao
    (70) for_statement -> FOR ID ASSIGN . expressao DOWNTO expressao DO instrucao
    (38) expressao -> . expressao OR expressao
    (39) expressao -> . expressao AND expressao
    (41) expressao -> . expressao_simples
    (42) expressao -> . expressao_simples operador_relacional expressao_simples
    (43) expressao_simples -> . termo
    (44) expressao_simples -> . expressao_simples + termo
    (45) expressao_simples -> . expressao_simples - termo
    (46) termo -> . fator
    (47) termo -> . termo * fator
    (48) termo -> . termo / fator
    (49) termo -> . termo DIV fator
    (50) termo -> . termo MOD fator
    (40) fator -> . NOT fator
    (51) fator -> . - fator
    (52) fator -> . ID [ expressao ]
    (53) fator -> . NUMBER
    (54) fator -> . STRING_LITERAL
    (55) fator -> . ID
    (56) fator -> . TRUE
    (57) fator -> . FALSE
    (58) fator -> . ( expressao )
    (59) fator -> . ID ( expressao )

    NOT             shift and go to state 49
    -               shift and go to state 47
    ID              shift and go to state 50
    NUMBER          shift and go to state 51
    STRING_LITERAL  shift and go to state 52
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    (               shift and go to state 55

    expressao                      shift and go to state 121
    expressao_simples              shift and go to state 45
    termo                          shift and go to state 46
    fator                          shift and go to state 48

state 93

    (9) declaracao -> lista_id : tipo . ;

    ;               shift and go to state 122


state 94

    (12) tipo -> INTEGER .

    ;               reduce using rule 12 (tipo -> INTEGER .)


state 95

    (13) tipo -> REAL .

    ;               reduce using rule 13 (tipo -> REAL .)


state 96

    (14) tipo -> BOOLEAN .

    ;               reduce using rule 14 (tipo -> BOOLEAN .)


state 97

    (15) tipo -> CHAR .

    ;               reduce using rule 15 (tipo -> CHAR .)


state 98

    (16) tipo -> STRING .

    ;               reduce using rule 16 (tipo -> STRING .)


state 99

    (17) tipo -> ARRAY . [ NUMBER RANGE NUMBER ] OF tipo

    [               shift and go to state 123


state 100

    (11) lista_id -> lista_id , ID .

    :               reduce using rule 11 (lista_id -> lista_id , ID .)
    ,               reduce using rule 11 (lista_id -> lista_id , ID .)


state 101

    (31) atribuicao -> ID [ expressao ] . ASSIGN expressao

    ASSIGN          shift and go to state 124


state 102

    (32) leitura -> READ ( expressao_simples ) .

    END             reduce using rule 32 (leitura -> READ ( expressao_simples ) .)
    ;               reduce using rule 32 (leitura -> READ ( expressao_simples ) .)
    ELSE            reduce using rule 32 (leitura -> READ ( expressao_simples ) .)


state 103

    (33) leitura -> READLN ( expressao_simples ) .

    END             reduce using rule 33 (leitura -> READLN ( expressao_simples ) .)
    ;               reduce using rule 33 (leitura -> READLN ( expressao_simples ) .)
    ELSE            reduce using rule 33 (leitura -> READLN ( expressao_simples ) .)


state 104

    (34) escrita -> WRITE ( lista_expressao ) .

    END             reduce using rule 34 (escrita -> WRITE ( lista_expressao ) .)
    ;               reduce using rule 34 (escrita -> WRITE ( lista_expressao ) .)
    ELSE            reduce using rule 34 (escrita -> WRITE ( lista_expressao ) .)


state 105

    (37) lista_expressao -> lista_expressao , . expressao
    (38) expressao -> . expressao OR expressao
    (39) expressao -> . expressao AND expressao
    (41) expressao -> . expressao_simples
    (42) expressao -> . expressao_simples operador_relacional expressao_simples
    (43) expressao_simples -> . termo
    (44) expressao_simples -> . expressao_simples + termo
    (45) expressao_simples -> . expressao_simples - termo
    (46) termo -> . fator
    (47) termo -> . termo * fator
    (48) termo -> . termo / fator
    (49) termo -> . termo DIV fator
    (50) termo -> . termo MOD fator
    (40) fator -> . NOT fator
    (51) fator -> . - fator
    (52) fator -> . ID [ expressao ]
    (53) fator -> . NUMBER
    (54) fator -> . STRING_LITERAL
    (55) fator -> . ID
    (56) fator -> . TRUE
    (57) fator -> . FALSE
    (58) fator -> . ( expressao )
    (59) fator -> . ID ( expressao )

    NOT             shift and go to state 49
    -               shift and go to state 47
    ID              shift and go to state 50
    NUMBER          shift and go to state 51
    STRING_LITERAL  shift and go to state 52
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    (               shift and go to state 55

    expressao                      shift and go to state 125
    expressao_simples              shift and go to state 45
    termo                          shift and go to state 46
    fator                          shift and go to state 48

state 106

    (35) escrita -> WRITELN ( lista_expressao ) .

    END             reduce using rule 35 (escrita -> WRITELN ( lista_expressao ) .)
    ;               reduce using rule 35 (escrita -> WRITELN ( lista_expressao ) .)
    ELSE            reduce using rule 35 (escrita -> WRITELN ( lista_expressao ) .)


state 107

    (66) if_statement -> IF expressao THEN instrucao . ELSE instrucao
    (67) if_statement -> IF expressao THEN instrucao .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 126
    END             reduce using rule 67 (if_statement -> IF expressao THEN instrucao .)
    ;               reduce using rule 67 (if_statement -> IF expressao THEN instrucao .)

  ! ELSE            [ reduce using rule 67 (if_statement -> IF expressao THEN instrucao .) ]


state 108

    (38) expressao -> expressao OR expressao .
    (38) expressao -> expressao . OR expressao
    (39) expressao -> expressao . AND expressao

    THEN            reduce using rule 38 (expressao -> expressao OR expressao .)
    OR              reduce using rule 38 (expressao -> expressao OR expressao .)
    DO              reduce using rule 38 (expressao -> expressao OR expressao .)
    END             reduce using rule 38 (expressao -> expressao OR expressao .)
    ;               reduce using rule 38 (expressao -> expressao OR expressao .)
    ELSE            reduce using rule 38 (expressao -> expressao OR expressao .)
    ]               reduce using rule 38 (expressao -> expressao OR expressao .)
    )               reduce using rule 38 (expressao -> expressao OR expressao .)
    ,               reduce using rule 38 (expressao -> expressao OR expressao .)
    TO              reduce using rule 38 (expressao -> expressao OR expressao .)
    DOWNTO          reduce using rule 38 (expressao -> expressao OR expressao .)
    AND             shift and go to state 72

  ! AND             [ reduce using rule 38 (expressao -> expressao OR expressao .) ]
  ! OR              [ shift and go to state 71 ]


state 109

    (39) expressao -> expressao AND expressao .
    (38) expressao -> expressao . OR expressao
    (39) expressao -> expressao . AND expressao

    THEN            reduce using rule 39 (expressao -> expressao AND expressao .)
    OR              reduce using rule 39 (expressao -> expressao AND expressao .)
    AND             reduce using rule 39 (expressao -> expressao AND expressao .)
    DO              reduce using rule 39 (expressao -> expressao AND expressao .)
    END             reduce using rule 39 (expressao -> expressao AND expressao .)
    ;               reduce using rule 39 (expressao -> expressao AND expressao .)
    ELSE            reduce using rule 39 (expressao -> expressao AND expressao .)
    ]               reduce using rule 39 (expressao -> expressao AND expressao .)
    )               reduce using rule 39 (expressao -> expressao AND expressao .)
    ,               reduce using rule 39 (expressao -> expressao AND expressao .)
    TO              reduce using rule 39 (expressao -> expressao AND expressao .)
    DOWNTO          reduce using rule 39 (expressao -> expressao AND expressao .)

  ! OR              [ shift and go to state 71 ]
  ! AND             [ shift and go to state 72 ]


state 110

    (42) expressao -> expressao_simples operador_relacional expressao_simples .
    (44) expressao_simples -> expressao_simples . + termo
    (45) expressao_simples -> expressao_simples . - termo

    THEN            reduce using rule 42 (expressao -> expressao_simples operador_relacional expressao_simples .)
    OR              reduce using rule 42 (expressao -> expressao_simples operador_relacional expressao_simples .)
    AND             reduce using rule 42 (expressao -> expressao_simples operador_relacional expressao_simples .)
    DO              reduce using rule 42 (expressao -> expressao_simples operador_relacional expressao_simples .)
    END             reduce using rule 42 (expressao -> expressao_simples operador_relacional expressao_simples .)
    ;               reduce using rule 42 (expressao -> expressao_simples operador_relacional expressao_simples .)
    ELSE            reduce using rule 42 (expressao -> expressao_simples operador_relacional expressao_simples .)
    ]               reduce using rule 42 (expressao -> expressao_simples operador_relacional expressao_simples .)
    )               reduce using rule 42 (expressao -> expressao_simples operador_relacional expressao_simples .)
    ,               reduce using rule 42 (expressao -> expressao_simples operador_relacional expressao_simples .)
    TO              reduce using rule 42 (expressao -> expressao_simples operador_relacional expressao_simples .)
    DOWNTO          reduce using rule 42 (expressao -> expressao_simples operador_relacional expressao_simples .)
    +               shift and go to state 74
    -               shift and go to state 75


state 111

    (44) expressao_simples -> expressao_simples + termo .
    (47) termo -> termo . * fator
    (48) termo -> termo . / fator
    (49) termo -> termo . DIV fator
    (50) termo -> termo . MOD fator

    +               reduce using rule 44 (expressao_simples -> expressao_simples + termo .)
    -               reduce using rule 44 (expressao_simples -> expressao_simples + termo .)
    EQUALS          reduce using rule 44 (expressao_simples -> expressao_simples + termo .)
    NOT_EQUALS      reduce using rule 44 (expressao_simples -> expressao_simples + termo .)
    LESS_THAN       reduce using rule 44 (expressao_simples -> expressao_simples + termo .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 44 (expressao_simples -> expressao_simples + termo .)
    GREATER_THAN    reduce using rule 44 (expressao_simples -> expressao_simples + termo .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 44 (expressao_simples -> expressao_simples + termo .)
    THEN            reduce using rule 44 (expressao_simples -> expressao_simples + termo .)
    OR              reduce using rule 44 (expressao_simples -> expressao_simples + termo .)
    AND             reduce using rule 44 (expressao_simples -> expressao_simples + termo .)
    DO              reduce using rule 44 (expressao_simples -> expressao_simples + termo .)
    END             reduce using rule 44 (expressao_simples -> expressao_simples + termo .)
    ;               reduce using rule 44 (expressao_simples -> expressao_simples + termo .)
    ELSE            reduce using rule 44 (expressao_simples -> expressao_simples + termo .)
    ]               reduce using rule 44 (expressao_simples -> expressao_simples + termo .)
    )               reduce using rule 44 (expressao_simples -> expressao_simples + termo .)
    ,               reduce using rule 44 (expressao_simples -> expressao_simples + termo .)
    TO              reduce using rule 44 (expressao_simples -> expressao_simples + termo .)
    DOWNTO          reduce using rule 44 (expressao_simples -> expressao_simples + termo .)
    *               shift and go to state 82
    /               shift and go to state 83
    DIV             shift and go to state 84
    MOD             shift and go to state 85


state 112

    (45) expressao_simples -> expressao_simples - termo .
    (47) termo -> termo . * fator
    (48) termo -> termo . / fator
    (49) termo -> termo . DIV fator
    (50) termo -> termo . MOD fator

    +               reduce using rule 45 (expressao_simples -> expressao_simples - termo .)
    -               reduce using rule 45 (expressao_simples -> expressao_simples - termo .)
    EQUALS          reduce using rule 45 (expressao_simples -> expressao_simples - termo .)
    NOT_EQUALS      reduce using rule 45 (expressao_simples -> expressao_simples - termo .)
    LESS_THAN       reduce using rule 45 (expressao_simples -> expressao_simples - termo .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 45 (expressao_simples -> expressao_simples - termo .)
    GREATER_THAN    reduce using rule 45 (expressao_simples -> expressao_simples - termo .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 45 (expressao_simples -> expressao_simples - termo .)
    THEN            reduce using rule 45 (expressao_simples -> expressao_simples - termo .)
    OR              reduce using rule 45 (expressao_simples -> expressao_simples - termo .)
    AND             reduce using rule 45 (expressao_simples -> expressao_simples - termo .)
    DO              reduce using rule 45 (expressao_simples -> expressao_simples - termo .)
    END             reduce using rule 45 (expressao_simples -> expressao_simples - termo .)
    ;               reduce using rule 45 (expressao_simples -> expressao_simples - termo .)
    ELSE            reduce using rule 45 (expressao_simples -> expressao_simples - termo .)
    ]               reduce using rule 45 (expressao_simples -> expressao_simples - termo .)
    )               reduce using rule 45 (expressao_simples -> expressao_simples - termo .)
    ,               reduce using rule 45 (expressao_simples -> expressao_simples - termo .)
    TO              reduce using rule 45 (expressao_simples -> expressao_simples - termo .)
    DOWNTO          reduce using rule 45 (expressao_simples -> expressao_simples - termo .)
    *               shift and go to state 82
    /               shift and go to state 83
    DIV             shift and go to state 84
    MOD             shift and go to state 85


state 113

    (47) termo -> termo * fator .

    *               reduce using rule 47 (termo -> termo * fator .)
    /               reduce using rule 47 (termo -> termo * fator .)
    DIV             reduce using rule 47 (termo -> termo * fator .)
    MOD             reduce using rule 47 (termo -> termo * fator .)
    +               reduce using rule 47 (termo -> termo * fator .)
    -               reduce using rule 47 (termo -> termo * fator .)
    EQUALS          reduce using rule 47 (termo -> termo * fator .)
    NOT_EQUALS      reduce using rule 47 (termo -> termo * fator .)
    LESS_THAN       reduce using rule 47 (termo -> termo * fator .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 47 (termo -> termo * fator .)
    GREATER_THAN    reduce using rule 47 (termo -> termo * fator .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 47 (termo -> termo * fator .)
    THEN            reduce using rule 47 (termo -> termo * fator .)
    OR              reduce using rule 47 (termo -> termo * fator .)
    AND             reduce using rule 47 (termo -> termo * fator .)
    DO              reduce using rule 47 (termo -> termo * fator .)
    END             reduce using rule 47 (termo -> termo * fator .)
    ;               reduce using rule 47 (termo -> termo * fator .)
    ELSE            reduce using rule 47 (termo -> termo * fator .)
    ]               reduce using rule 47 (termo -> termo * fator .)
    )               reduce using rule 47 (termo -> termo * fator .)
    ,               reduce using rule 47 (termo -> termo * fator .)
    TO              reduce using rule 47 (termo -> termo * fator .)
    DOWNTO          reduce using rule 47 (termo -> termo * fator .)


state 114

    (48) termo -> termo / fator .

    *               reduce using rule 48 (termo -> termo / fator .)
    /               reduce using rule 48 (termo -> termo / fator .)
    DIV             reduce using rule 48 (termo -> termo / fator .)
    MOD             reduce using rule 48 (termo -> termo / fator .)
    +               reduce using rule 48 (termo -> termo / fator .)
    -               reduce using rule 48 (termo -> termo / fator .)
    EQUALS          reduce using rule 48 (termo -> termo / fator .)
    NOT_EQUALS      reduce using rule 48 (termo -> termo / fator .)
    LESS_THAN       reduce using rule 48 (termo -> termo / fator .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 48 (termo -> termo / fator .)
    GREATER_THAN    reduce using rule 48 (termo -> termo / fator .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 48 (termo -> termo / fator .)
    THEN            reduce using rule 48 (termo -> termo / fator .)
    OR              reduce using rule 48 (termo -> termo / fator .)
    AND             reduce using rule 48 (termo -> termo / fator .)
    DO              reduce using rule 48 (termo -> termo / fator .)
    END             reduce using rule 48 (termo -> termo / fator .)
    ;               reduce using rule 48 (termo -> termo / fator .)
    ELSE            reduce using rule 48 (termo -> termo / fator .)
    ]               reduce using rule 48 (termo -> termo / fator .)
    )               reduce using rule 48 (termo -> termo / fator .)
    ,               reduce using rule 48 (termo -> termo / fator .)
    TO              reduce using rule 48 (termo -> termo / fator .)
    DOWNTO          reduce using rule 48 (termo -> termo / fator .)


state 115

    (49) termo -> termo DIV fator .

    *               reduce using rule 49 (termo -> termo DIV fator .)
    /               reduce using rule 49 (termo -> termo DIV fator .)
    DIV             reduce using rule 49 (termo -> termo DIV fator .)
    MOD             reduce using rule 49 (termo -> termo DIV fator .)
    +               reduce using rule 49 (termo -> termo DIV fator .)
    -               reduce using rule 49 (termo -> termo DIV fator .)
    EQUALS          reduce using rule 49 (termo -> termo DIV fator .)
    NOT_EQUALS      reduce using rule 49 (termo -> termo DIV fator .)
    LESS_THAN       reduce using rule 49 (termo -> termo DIV fator .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 49 (termo -> termo DIV fator .)
    GREATER_THAN    reduce using rule 49 (termo -> termo DIV fator .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 49 (termo -> termo DIV fator .)
    THEN            reduce using rule 49 (termo -> termo DIV fator .)
    OR              reduce using rule 49 (termo -> termo DIV fator .)
    AND             reduce using rule 49 (termo -> termo DIV fator .)
    DO              reduce using rule 49 (termo -> termo DIV fator .)
    END             reduce using rule 49 (termo -> termo DIV fator .)
    ;               reduce using rule 49 (termo -> termo DIV fator .)
    ELSE            reduce using rule 49 (termo -> termo DIV fator .)
    ]               reduce using rule 49 (termo -> termo DIV fator .)
    )               reduce using rule 49 (termo -> termo DIV fator .)
    ,               reduce using rule 49 (termo -> termo DIV fator .)
    TO              reduce using rule 49 (termo -> termo DIV fator .)
    DOWNTO          reduce using rule 49 (termo -> termo DIV fator .)


state 116

    (50) termo -> termo MOD fator .

    *               reduce using rule 50 (termo -> termo MOD fator .)
    /               reduce using rule 50 (termo -> termo MOD fator .)
    DIV             reduce using rule 50 (termo -> termo MOD fator .)
    MOD             reduce using rule 50 (termo -> termo MOD fator .)
    +               reduce using rule 50 (termo -> termo MOD fator .)
    -               reduce using rule 50 (termo -> termo MOD fator .)
    EQUALS          reduce using rule 50 (termo -> termo MOD fator .)
    NOT_EQUALS      reduce using rule 50 (termo -> termo MOD fator .)
    LESS_THAN       reduce using rule 50 (termo -> termo MOD fator .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 50 (termo -> termo MOD fator .)
    GREATER_THAN    reduce using rule 50 (termo -> termo MOD fator .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 50 (termo -> termo MOD fator .)
    THEN            reduce using rule 50 (termo -> termo MOD fator .)
    OR              reduce using rule 50 (termo -> termo MOD fator .)
    AND             reduce using rule 50 (termo -> termo MOD fator .)
    DO              reduce using rule 50 (termo -> termo MOD fator .)
    END             reduce using rule 50 (termo -> termo MOD fator .)
    ;               reduce using rule 50 (termo -> termo MOD fator .)
    ELSE            reduce using rule 50 (termo -> termo MOD fator .)
    ]               reduce using rule 50 (termo -> termo MOD fator .)
    )               reduce using rule 50 (termo -> termo MOD fator .)
    ,               reduce using rule 50 (termo -> termo MOD fator .)
    TO              reduce using rule 50 (termo -> termo MOD fator .)
    DOWNTO          reduce using rule 50 (termo -> termo MOD fator .)


state 117

    (52) fator -> ID [ expressao . ]
    (38) expressao -> expressao . OR expressao
    (39) expressao -> expressao . AND expressao

    ]               shift and go to state 127
    OR              shift and go to state 71
    AND             shift and go to state 72


state 118

    (59) fator -> ID ( expressao . )
    (38) expressao -> expressao . OR expressao
    (39) expressao -> expressao . AND expressao

    )               shift and go to state 128
    OR              shift and go to state 71
    AND             shift and go to state 72


state 119

    (58) fator -> ( expressao ) .

    *               reduce using rule 58 (fator -> ( expressao ) .)
    /               reduce using rule 58 (fator -> ( expressao ) .)
    DIV             reduce using rule 58 (fator -> ( expressao ) .)
    MOD             reduce using rule 58 (fator -> ( expressao ) .)
    +               reduce using rule 58 (fator -> ( expressao ) .)
    -               reduce using rule 58 (fator -> ( expressao ) .)
    EQUALS          reduce using rule 58 (fator -> ( expressao ) .)
    NOT_EQUALS      reduce using rule 58 (fator -> ( expressao ) .)
    LESS_THAN       reduce using rule 58 (fator -> ( expressao ) .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 58 (fator -> ( expressao ) .)
    GREATER_THAN    reduce using rule 58 (fator -> ( expressao ) .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 58 (fator -> ( expressao ) .)
    THEN            reduce using rule 58 (fator -> ( expressao ) .)
    OR              reduce using rule 58 (fator -> ( expressao ) .)
    AND             reduce using rule 58 (fator -> ( expressao ) .)
    DO              reduce using rule 58 (fator -> ( expressao ) .)
    END             reduce using rule 58 (fator -> ( expressao ) .)
    ;               reduce using rule 58 (fator -> ( expressao ) .)
    ELSE            reduce using rule 58 (fator -> ( expressao ) .)
    ]               reduce using rule 58 (fator -> ( expressao ) .)
    )               reduce using rule 58 (fator -> ( expressao ) .)
    ,               reduce using rule 58 (fator -> ( expressao ) .)
    TO              reduce using rule 58 (fator -> ( expressao ) .)
    DOWNTO          reduce using rule 58 (fator -> ( expressao ) .)


state 120

    (68) while_statement -> WHILE expressao DO instrucao .

    END             reduce using rule 68 (while_statement -> WHILE expressao DO instrucao .)
    ;               reduce using rule 68 (while_statement -> WHILE expressao DO instrucao .)
    ELSE            reduce using rule 68 (while_statement -> WHILE expressao DO instrucao .)


state 121

    (69) for_statement -> FOR ID ASSIGN expressao . TO expressao DO instrucao
    (70) for_statement -> FOR ID ASSIGN expressao . DOWNTO expressao DO instrucao
    (38) expressao -> expressao . OR expressao
    (39) expressao -> expressao . AND expressao

    TO              shift and go to state 129
    DOWNTO          shift and go to state 130
    OR              shift and go to state 71
    AND             shift and go to state 72


state 122

    (9) declaracao -> lista_id : tipo ; .

    ID              reduce using rule 9 (declaracao -> lista_id : tipo ; .)
    BEGIN           reduce using rule 9 (declaracao -> lista_id : tipo ; .)


state 123

    (17) tipo -> ARRAY [ . NUMBER RANGE NUMBER ] OF tipo

    NUMBER          shift and go to state 131


state 124

    (31) atribuicao -> ID [ expressao ] ASSIGN . expressao
    (38) expressao -> . expressao OR expressao
    (39) expressao -> . expressao AND expressao
    (41) expressao -> . expressao_simples
    (42) expressao -> . expressao_simples operador_relacional expressao_simples
    (43) expressao_simples -> . termo
    (44) expressao_simples -> . expressao_simples + termo
    (45) expressao_simples -> . expressao_simples - termo
    (46) termo -> . fator
    (47) termo -> . termo * fator
    (48) termo -> . termo / fator
    (49) termo -> . termo DIV fator
    (50) termo -> . termo MOD fator
    (40) fator -> . NOT fator
    (51) fator -> . - fator
    (52) fator -> . ID [ expressao ]
    (53) fator -> . NUMBER
    (54) fator -> . STRING_LITERAL
    (55) fator -> . ID
    (56) fator -> . TRUE
    (57) fator -> . FALSE
    (58) fator -> . ( expressao )
    (59) fator -> . ID ( expressao )

    NOT             shift and go to state 49
    -               shift and go to state 47
    ID              shift and go to state 50
    NUMBER          shift and go to state 51
    STRING_LITERAL  shift and go to state 52
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    (               shift and go to state 55

    expressao                      shift and go to state 132
    expressao_simples              shift and go to state 45
    termo                          shift and go to state 46
    fator                          shift and go to state 48

state 125

    (37) lista_expressao -> lista_expressao , expressao .
    (38) expressao -> expressao . OR expressao
    (39) expressao -> expressao . AND expressao

    )               reduce using rule 37 (lista_expressao -> lista_expressao , expressao .)
    ,               reduce using rule 37 (lista_expressao -> lista_expressao , expressao .)
    OR              shift and go to state 71
    AND             shift and go to state 72


state 126

    (66) if_statement -> IF expressao THEN instrucao ELSE . instrucao
    (21) instrucao -> . atribuicao
    (22) instrucao -> . leitura
    (23) instrucao -> . escrita
    (24) instrucao -> . if_statement
    (25) instrucao -> . while_statement
    (26) instrucao -> . for_statement
    (27) instrucao -> . bloco
    (28) instrucao -> .
    (30) atribuicao -> . ID ASSIGN expressao
    (31) atribuicao -> . ID [ expressao ] ASSIGN expressao
    (32) leitura -> . READ ( expressao_simples )
    (33) leitura -> . READLN ( expressao_simples )
    (34) escrita -> . WRITE ( lista_expressao )
    (35) escrita -> . WRITELN ( lista_expressao )
    (66) if_statement -> . IF expressao THEN instrucao ELSE instrucao
    (67) if_statement -> . IF expressao THEN instrucao
    (68) while_statement -> . WHILE expressao DO instrucao
    (69) for_statement -> . FOR ID ASSIGN expressao TO expressao DO instrucao
    (70) for_statement -> . FOR ID ASSIGN expressao DOWNTO expressao DO instrucao
    (29) bloco -> . BEGIN lista_instrucoes END

    ELSE            reduce using rule 28 (instrucao -> .)
    END             reduce using rule 28 (instrucao -> .)
    ;               reduce using rule 28 (instrucao -> .)
    ID              shift and go to state 22
    READ            shift and go to state 23
    READLN          shift and go to state 24
    WRITE           shift and go to state 25
    WRITELN         shift and go to state 26
    IF              shift and go to state 27
    WHILE           shift and go to state 28
    FOR             shift and go to state 29
    BEGIN           shift and go to state 12

    instrucao                      shift and go to state 133
    atribuicao                     shift and go to state 15
    leitura                        shift and go to state 16
    escrita                        shift and go to state 17
    if_statement                   shift and go to state 18
    while_statement                shift and go to state 19
    for_statement                  shift and go to state 20
    bloco                          shift and go to state 21

state 127

    (52) fator -> ID [ expressao ] .

    *               reduce using rule 52 (fator -> ID [ expressao ] .)
    /               reduce using rule 52 (fator -> ID [ expressao ] .)
    DIV             reduce using rule 52 (fator -> ID [ expressao ] .)
    MOD             reduce using rule 52 (fator -> ID [ expressao ] .)
    +               reduce using rule 52 (fator -> ID [ expressao ] .)
    -               reduce using rule 52 (fator -> ID [ expressao ] .)
    EQUALS          reduce using rule 52 (fator -> ID [ expressao ] .)
    NOT_EQUALS      reduce using rule 52 (fator -> ID [ expressao ] .)
    LESS_THAN       reduce using rule 52 (fator -> ID [ expressao ] .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 52 (fator -> ID [ expressao ] .)
    GREATER_THAN    reduce using rule 52 (fator -> ID [ expressao ] .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 52 (fator -> ID [ expressao ] .)
    THEN            reduce using rule 52 (fator -> ID [ expressao ] .)
    OR              reduce using rule 52 (fator -> ID [ expressao ] .)
    AND             reduce using rule 52 (fator -> ID [ expressao ] .)
    DO              reduce using rule 52 (fator -> ID [ expressao ] .)
    END             reduce using rule 52 (fator -> ID [ expressao ] .)
    ;               reduce using rule 52 (fator -> ID [ expressao ] .)
    ELSE            reduce using rule 52 (fator -> ID [ expressao ] .)
    ]               reduce using rule 52 (fator -> ID [ expressao ] .)
    )               reduce using rule 52 (fator -> ID [ expressao ] .)
    ,               reduce using rule 52 (fator -> ID [ expressao ] .)
    TO              reduce using rule 52 (fator -> ID [ expressao ] .)
    DOWNTO          reduce using rule 52 (fator -> ID [ expressao ] .)


state 128

    (59) fator -> ID ( expressao ) .

    *               reduce using rule 59 (fator -> ID ( expressao ) .)
    /               reduce using rule 59 (fator -> ID ( expressao ) .)
    DIV             reduce using rule 59 (fator -> ID ( expressao ) .)
    MOD             reduce using rule 59 (fator -> ID ( expressao ) .)
    +               reduce using rule 59 (fator -> ID ( expressao ) .)
    -               reduce using rule 59 (fator -> ID ( expressao ) .)
    EQUALS          reduce using rule 59 (fator -> ID ( expressao ) .)
    NOT_EQUALS      reduce using rule 59 (fator -> ID ( expressao ) .)
    LESS_THAN       reduce using rule 59 (fator -> ID ( expressao ) .)
    LESS_THAN_OR_EQUAL_TO reduce using rule 59 (fator -> ID ( expressao ) .)
    GREATER_THAN    reduce using rule 59 (fator -> ID ( expressao ) .)
    GREATER_THAN_OR_EQUAL_TO reduce using rule 59 (fator -> ID ( expressao ) .)
    THEN            reduce using rule 59 (fator -> ID ( expressao ) .)
    OR              reduce using rule 59 (fator -> ID ( expressao ) .)
    AND             reduce using rule 59 (fator -> ID ( expressao ) .)
    DO              reduce using rule 59 (fator -> ID ( expressao ) .)
    END             reduce using rule 59 (fator -> ID ( expressao ) .)
    ;               reduce using rule 59 (fator -> ID ( expressao ) .)
    ELSE            reduce using rule 59 (fator -> ID ( expressao ) .)
    ]               reduce using rule 59 (fator -> ID ( expressao ) .)
    )               reduce using rule 59 (fator -> ID ( expressao ) .)
    ,               reduce using rule 59 (fator -> ID ( expressao ) .)
    TO              reduce using rule 59 (fator -> ID ( expressao ) .)
    DOWNTO          reduce using rule 59 (fator -> ID ( expressao ) .)


state 129

    (69) for_statement -> FOR ID ASSIGN expressao TO . expressao DO instrucao
    (38) expressao -> . expressao OR expressao
    (39) expressao -> . expressao AND expressao
    (41) expressao -> . expressao_simples
    (42) expressao -> . expressao_simples operador_relacional expressao_simples
    (43) expressao_simples -> . termo
    (44) expressao_simples -> . expressao_simples + termo
    (45) expressao_simples -> . expressao_simples - termo
    (46) termo -> . fator
    (47) termo -> . termo * fator
    (48) termo -> . termo / fator
    (49) termo -> . termo DIV fator
    (50) termo -> . termo MOD fator
    (40) fator -> . NOT fator
    (51) fator -> . - fator
    (52) fator -> . ID [ expressao ]
    (53) fator -> . NUMBER
    (54) fator -> . STRING_LITERAL
    (55) fator -> . ID
    (56) fator -> . TRUE
    (57) fator -> . FALSE
    (58) fator -> . ( expressao )
    (59) fator -> . ID ( expressao )

    NOT             shift and go to state 49
    -               shift and go to state 47
    ID              shift and go to state 50
    NUMBER          shift and go to state 51
    STRING_LITERAL  shift and go to state 52
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    (               shift and go to state 55

    expressao                      shift and go to state 134
    expressao_simples              shift and go to state 45
    termo                          shift and go to state 46
    fator                          shift and go to state 48

state 130

    (70) for_statement -> FOR ID ASSIGN expressao DOWNTO . expressao DO instrucao
    (38) expressao -> . expressao OR expressao
    (39) expressao -> . expressao AND expressao
    (41) expressao -> . expressao_simples
    (42) expressao -> . expressao_simples operador_relacional expressao_simples
    (43) expressao_simples -> . termo
    (44) expressao_simples -> . expressao_simples + termo
    (45) expressao_simples -> . expressao_simples - termo
    (46) termo -> . fator
    (47) termo -> . termo * fator
    (48) termo -> . termo / fator
    (49) termo -> . termo DIV fator
    (50) termo -> . termo MOD fator
    (40) fator -> . NOT fator
    (51) fator -> . - fator
    (52) fator -> . ID [ expressao ]
    (53) fator -> . NUMBER
    (54) fator -> . STRING_LITERAL
    (55) fator -> . ID
    (56) fator -> . TRUE
    (57) fator -> . FALSE
    (58) fator -> . ( expressao )
    (59) fator -> . ID ( expressao )

    NOT             shift and go to state 49
    -               shift and go to state 47
    ID              shift and go to state 50
    NUMBER          shift and go to state 51
    STRING_LITERAL  shift and go to state 52
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    (               shift and go to state 55

    expressao                      shift and go to state 135
    expressao_simples              shift and go to state 45
    termo                          shift and go to state 46
    fator                          shift and go to state 48

state 131

    (17) tipo -> ARRAY [ NUMBER . RANGE NUMBER ] OF tipo

    RANGE           shift and go to state 136


state 132

    (31) atribuicao -> ID [ expressao ] ASSIGN expressao .
    (38) expressao -> expressao . OR expressao
    (39) expressao -> expressao . AND expressao

    END             reduce using rule 31 (atribuicao -> ID [ expressao ] ASSIGN expressao .)
    ;               reduce using rule 31 (atribuicao -> ID [ expressao ] ASSIGN expressao .)
    ELSE            reduce using rule 31 (atribuicao -> ID [ expressao ] ASSIGN expressao .)
    OR              shift and go to state 71
    AND             shift and go to state 72


state 133

    (66) if_statement -> IF expressao THEN instrucao ELSE instrucao .

    END             reduce using rule 66 (if_statement -> IF expressao THEN instrucao ELSE instrucao .)
    ;               reduce using rule 66 (if_statement -> IF expressao THEN instrucao ELSE instrucao .)
    ELSE            reduce using rule 66 (if_statement -> IF expressao THEN instrucao ELSE instrucao .)


state 134

    (69) for_statement -> FOR ID ASSIGN expressao TO expressao . DO instrucao
    (38) expressao -> expressao . OR expressao
    (39) expressao -> expressao . AND expressao

    DO              shift and go to state 137
    OR              shift and go to state 71
    AND             shift and go to state 72


state 135

    (70) for_statement -> FOR ID ASSIGN expressao DOWNTO expressao . DO instrucao
    (38) expressao -> expressao . OR expressao
    (39) expressao -> expressao . AND expressao

    DO              shift and go to state 138
    OR              shift and go to state 71
    AND             shift and go to state 72


state 136

    (17) tipo -> ARRAY [ NUMBER RANGE . NUMBER ] OF tipo

    NUMBER          shift and go to state 139


state 137

    (69) for_statement -> FOR ID ASSIGN expressao TO expressao DO . instrucao
    (21) instrucao -> . atribuicao
    (22) instrucao -> . leitura
    (23) instrucao -> . escrita
    (24) instrucao -> . if_statement
    (25) instrucao -> . while_statement
    (26) instrucao -> . for_statement
    (27) instrucao -> . bloco
    (28) instrucao -> .
    (30) atribuicao -> . ID ASSIGN expressao
    (31) atribuicao -> . ID [ expressao ] ASSIGN expressao
    (32) leitura -> . READ ( expressao_simples )
    (33) leitura -> . READLN ( expressao_simples )
    (34) escrita -> . WRITE ( lista_expressao )
    (35) escrita -> . WRITELN ( lista_expressao )
    (66) if_statement -> . IF expressao THEN instrucao ELSE instrucao
    (67) if_statement -> . IF expressao THEN instrucao
    (68) while_statement -> . WHILE expressao DO instrucao
    (69) for_statement -> . FOR ID ASSIGN expressao TO expressao DO instrucao
    (70) for_statement -> . FOR ID ASSIGN expressao DOWNTO expressao DO instrucao
    (29) bloco -> . BEGIN lista_instrucoes END

    ELSE            reduce using rule 28 (instrucao -> .)
    END             reduce using rule 28 (instrucao -> .)
    ;               reduce using rule 28 (instrucao -> .)
    ID              shift and go to state 22
    READ            shift and go to state 23
    READLN          shift and go to state 24
    WRITE           shift and go to state 25
    WRITELN         shift and go to state 26
    IF              shift and go to state 27
    WHILE           shift and go to state 28
    FOR             shift and go to state 29
    BEGIN           shift and go to state 12

    instrucao                      shift and go to state 140
    atribuicao                     shift and go to state 15
    leitura                        shift and go to state 16
    escrita                        shift and go to state 17
    if_statement                   shift and go to state 18
    while_statement                shift and go to state 19
    for_statement                  shift and go to state 20
    bloco                          shift and go to state 21

state 138

    (70) for_statement -> FOR ID ASSIGN expressao DOWNTO expressao DO . instrucao
    (21) instrucao -> . atribuicao
    (22) instrucao -> . leitura
    (23) instrucao -> . escrita
    (24) instrucao -> . if_statement
    (25) instrucao -> . while_statement
    (26) instrucao -> . for_statement
    (27) instrucao -> . bloco
    (28) instrucao -> .
    (30) atribuicao -> . ID ASSIGN expressao
    (31) atribuicao -> . ID [ expressao ] ASSIGN expressao
    (32) leitura -> . READ ( expressao_simples )
    (33) leitura -> . READLN ( expressao_simples )
    (34) escrita -> . WRITE ( lista_expressao )
    (35) escrita -> . WRITELN ( lista_expressao )
    (66) if_statement -> . IF expressao THEN instrucao ELSE instrucao
    (67) if_statement -> . IF expressao THEN instrucao
    (68) while_statement -> . WHILE expressao DO instrucao
    (69) for_statement -> . FOR ID ASSIGN expressao TO expressao DO instrucao
    (70) for_statement -> . FOR ID ASSIGN expressao DOWNTO expressao DO instrucao
    (29) bloco -> . BEGIN lista_instrucoes END

    ELSE            reduce using rule 28 (instrucao -> .)
    END             reduce using rule 28 (instrucao -> .)
    ;               reduce using rule 28 (instrucao -> .)
    ID              shift and go to state 22
    READ            shift and go to state 23
    READLN          shift and go to state 24
    WRITE           shift and go to state 25
    WRITELN         shift and go to state 26
    IF              shift and go to state 27
    WHILE           shift and go to state 28
    FOR             shift and go to state 29
    BEGIN           shift and go to state 12

    instrucao                      shift and go to state 141
    atribuicao                     shift and go to state 15
    leitura                        shift and go to state 16
    escrita                        shift and go to state 17
    if_statement                   shift and go to state 18
    while_statement                shift and go to state 19
    for_statement                  shift and go to state 20
    bloco                          shift and go to state 21

state 139

    (17) tipo -> ARRAY [ NUMBER RANGE NUMBER . ] OF tipo

    ]               shift and go to state 142


state 140

    (69) for_statement -> FOR ID ASSIGN expressao TO expressao DO instrucao .

    END             reduce using rule 69 (for_statement -> FOR ID ASSIGN expressao TO expressao DO instrucao .)
    ;               reduce using rule 69 (for_statement -> FOR ID ASSIGN expressao TO expressao DO instrucao .)
    ELSE            reduce using rule 69 (for_statement -> FOR ID ASSIGN expressao TO expressao DO instrucao .)


state 141

    (70) for_statement -> FOR ID ASSIGN expressao DOWNTO expressao DO instrucao .

    END             reduce using rule 70 (for_statement -> FOR ID ASSIGN expressao DOWNTO expressao DO instrucao .)
    ;               reduce using rule 70 (for_statement -> FOR ID ASSIGN expressao DOWNTO expressao DO instrucao .)
    ELSE            reduce using rule 70 (for_statement -> FOR ID ASSIGN expressao DOWNTO expressao DO instrucao .)


state 142

    (17) tipo -> ARRAY [ NUMBER RANGE NUMBER ] . OF tipo

    OF              shift and go to state 143


state 143

    (17) tipo -> ARRAY [ NUMBER RANGE NUMBER ] OF . tipo
    (12) tipo -> . INTEGER
    (13) tipo -> . REAL
    (14) tipo -> . BOOLEAN
    (15) tipo -> . CHAR
    (16) tipo -> . STRING
    (17) tipo -> . ARRAY [ NUMBER RANGE NUMBER ] OF tipo

    INTEGER         shift and go to state 94
    REAL            shift and go to state 95
    BOOLEAN         shift and go to state 96
    CHAR            shift and go to state 97
    STRING          shift and go to state 98
    ARRAY           shift and go to state 99

    tipo                           shift and go to state 144

state 144

    (17) tipo -> ARRAY [ NUMBER RANGE NUMBER ] OF tipo .

    ;               reduce using rule 17 (tipo -> ARRAY [ NUMBER RANGE NUMBER ] OF tipo .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ELSE in state 107 resolved as shift
