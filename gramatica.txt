gramatica        → programa '.'

programa         → cabecalho corpo

cabecalho        → titulo declaracoes_variaveis
titulo           → PROGRAM ID

declaracoes_variaveis → VAR declaracoes
                      | ε

declaracoes      → declaracao
                 | declaracao declaracoes

declaracao       → lista_id ':' tipo ';'
lista_id         → ID
                 | lista_id ',' ID

tipo             → INTEGER
                 | REAL
                 | BOOLEAN
                 | CHAR
                 | ARRAY '[' NUMBER RANGE NUMBER ']' OF tipo

corpo            → BEGIN lista_instrucoes END

lista_instrucoes → instrucao
                 | lista_instrucoes ';' instrucao

instrucao        → atribuicao
                 | leitura
                 | escrita
                 | if_statement
                 | while_statement
                 | for_statement
                 | bloco

bloco            → BEGIN lista_instrucoes END

atribuicao       → ID ASSIGN expressao
                 | ID '[' expressao ']' ASSIGN expressao

leitura          → READ '(' expressao_simples ')' 
                 | READLN '(' expressao_simples ')' 

escrita          → WRITE '(' lista_expressao ')'
                 | WRITELN '(' lista_expressao ')'

lista_id         → ID               
                 | lista_id ',' ID

lista_expressao  → expressao
                 | lista_expressao ',' expressao

expressao        → expressao_simples
                 | expressao_simples operador_relacional expressao_simples

expressao_simples → termo
                  | expressao_simples '+' termo (nao esta mal??)
                  | expressao_simples '-' termo

termo            → fator
                 | termo '*' fator (nao esta mal??)  ==>     termo -> fator termo2
                 | termo '/' fator                           termo2 -> '*' termo
                                                             termo2 -> '/' termo
fator            → NUMBER
                 | STRING_LITERAL
                 | ID                            // Nao da ASNEIRA 3 expressoes começar por ID?
                 | ID '[' expressao ']'          // Acesso a array
                 | ID '(' expressao ')'          // Funcoes (ex: for i := "length(bin)")
                 | TRUE
                 | FALSE
                 | '(' expressao ')'

operador_relacional → '=' | '<>' | '<' | '<=' | '>' | '>='
